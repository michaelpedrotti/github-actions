{"version":3,"file":"styles.css","mappings":";;;AAAA;AACA;AAAA;;;CAAA;AAAA;;;ECOE,sBAAsB,EAAE,MAAM;EAC9B,eAAe,EAAE,MAAM;EACvB,mBAAmB,EAAE,MAAM;EAC3B,qBAAwD,EAAE,MAAM;ADVlE;AAAA;;ECeE,gBAAgB;ADflB;AAAA;;;;;CAAA;AAAA;EC0BE,gBAAgB,EAAE,MAAM;EACxB,8BAA8B,EAAE,MAAM,EACpB,MAAM;EACxB,WAAW,EAAE,MAAM;EACnB,4NAAsP,EAAE,MAAM;AD9BhQ;AAAA;;;CAAA;AAAA;ECuCE,SAAS,EAAE,MAAM;EACjB,oBAAoB,EAAE,MAAM;ADxC9B;AAAA;;;;CAAA;AAAA;ECkDE,SAAS,EAAE,MAAM;EACjB,cAAc,EAAE,MAAM;EACtB,qBAAqB,EAAE,MAAM;ADpD/B;AAAA;;CAAA;AAAA;EC4DE,yCAAiC;UAAjC,iCAAiC;AD5DnC;AAAA;;CAAA;AAAA;;;;;;ECyEE,kBAAkB;EAClB,oBAAoB;AD1EtB;AAAA;;CAAA;AAAA;ECkFE,cAAc;EACd,wBAAwB;ADnF1B;AAAA;;CAAA;AAAA;;EC4FE,mBAAmB;AD5FrB;AAAA;;;CAAA;AAAA;;;;ECwGE,yHAAyI,EAAE,MAAM;EACjJ,cAAc,EAAE,MAAM;ADzGxB;AAAA;;CAAA;AAAA;ECiHE,cAAc;ADjHhB;AAAA;;CAAA;AAAA;;EC0HE,cAAc;EACd,cAAc;EACd,kBAAkB;EAClB,wBAAwB;AD7H1B;AAAA;ECiIE,eAAe;ADjIjB;AAAA;ECqIE,WAAW;ADrIb;AAAA;;;;CAAA;AAAA;EC+IE,cAAc,EAAE,MAAM;EACtB,qBAAqB,EAAE,MAAM;EAC7B,yBAAyB,EAAE,MAAM;ADjJnC;AAAA;;;;CAAA;AAAA;;;;;EC+JE,oBAAoB,EAAE,MAAM;EAC5B,eAAe,EAAE,MAAM;EACvB,oBAAoB,EAAE,MAAM;EAC5B,cAAc,EAAE,MAAM;EACtB,SAAS,EAAE,MAAM;EACjB,UAAU,EAAE,MAAM;ADpKpB;AAAA;;CAAA;AAAA;;EC6KE,oBAAoB;AD7KtB;AAAA;;;CAAA;AAAA;;;;ECyLE,0BAA0B,EAAE,MAAM;EAClC,6BAA6B,EAAE,MAAM;EACrC,sBAAsB,EAAE,MAAM;AD3LhC;AAAA;;CAAA;AAAA;ECmME,aAAa;ADnMf;AAAA;;CAAA;AAAA;EC2ME,gBAAgB;AD3MlB;AAAA;;CAAA;AAAA;ECmNE,wBAAwB;ADnN1B;AAAA;;CAAA;AAAA;;EC4NE,YAAY;AD5Nd;AAAA;;;CAAA;AAAA;ECqOE,6BAA6B,EAAE,MAAM;EACrC,oBAAoB,EAAE,MAAM;ADtO9B;AAAA;;CAAA;AAAA;EC8OE,wBAAwB;AD9O1B;AAAA;;;CAAA;AAAA;ECuPE,0BAA0B,EAAE,MAAM;EAClC,aAAa,EAAE,MAAM;ADxPvB;AAAA;;CAAA;AAAA;ECgQE,kBAAkB;ADhQpB;AAAA;;CAAA;AAAA;;;;;;;;;;;;;ECoRE,SAAS;ADpRX;AAAA;ECwRE,SAAS;EACT,UAAU;ADzRZ;AAAA;EC6RE,UAAU;AD7RZ;AAAA;;;ECmSE,gBAAgB;EAChB,SAAS;EACT,UAAU;ADrSZ;AAAA;;CAAA;AAAA;EC6SE,gBAAgB;AD7SlB;AAAA;;;CAAA;AAAA;;ECuTE,UAAU,EAAE,MAAM;EAClB,cAAwC,EAAE,MAAM;ADxTlD;AAAA;;CAAA;AAAA;;ECiUE,eAAe;ADjUjB;AAAA;;CAAA;AAAA;ECwUE,eAAe;ADxUjB;AAAA;;;;CAAA;AAAA;;;;;;;;ECyVE,cAAc,EAAE,MAAM;EACtB,sBAAsB,EAAE,MAAM;AD1VhC;AAAA;;CAAA;AAAA;;ECmWE,eAAe;EACf,YAAY;ADpWd;AAAA;;CAAA;AAAA;EC4WE,aAAa;AD5Wf;AAAA;IAMQ;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;EAdR;AAAA;IAgBY;EAhBZ;AAAA;AAAA;;IAuBQ;IACA;IACA;IACA;IACA;IACA;IACA;EA7BR;AAAA;AAAA;IAkCQ;EAlCR;AAAA;IAsCQ;EAtCR;AAAA;AAAA;IA2CQ;EA3CR;AAAA;AAAA;IAgDQ;IACA;EAjDR;AAAA;AAAA;IAsDQ;IACA;EAvDR;AAAA;AAAA;IA4DQ;IACA;EA7DR;AEDA;EAAA;EAAA;EAAA;EAAA;AFsWA;AArWA;IAqEQ;IACA;EAtER;AAAA;IAyEY;EAzEZ;AEDA;EAAA;EAAA;AFiXA;AAhXA;AAAA;IAoFQ;IACA;MACI;IAJR;;IAOI;MACI;IAJR;EAtFJ;AEDA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AFwaA;AAraA;AA6FA;AACA;EEjGA;EAAA;AFiGA;AAAA;EEjGA;EAAA;AFiGA;AAAA;EEjGA;EAAA;AFiGA;AAAA;EEjGA;EAAA;AFiGA;AAAA;EEjGA;EAAA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;EAAA;AFiGA;AAAA;EEjGA;EAAA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjiGA;AAAA;EEjGA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AFiGA;AAAA;EEjGA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AFiGA;AAAA;EEjGA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AFiGA;AAAA;EEjGA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AFiGA;AAAA;EEjGA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AFiGA;AAAA;EEjGA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AFiGA;AAAA;EEjGA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AFiGA;AAAA;EEjGA;EAAA;AFiGA;AAAA;EEjGA;EAAA;EAAA;EAAA;EAAA;AFiGA;AAAA;EEjGA;EAAA;EAAA;AFiGA;AAAA;EEjGA;EAAA;AFiGA;AAAA;EEjGA;EAAA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;EAAA;AFiGA;AAAA;EEjGA;EAAA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;EAAA;EAAA;EAAA;AFiGA;AAAA;EEjGA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;EAAA;EAAA;EAAA;EAAA;EAAA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;EAAA;EAAA;EAAA;EAAA;EAAA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;EAAA;EAAA;EAAA;EAAA;EAAA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;EAAA;EAAA;EAAA;EAAA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;EAAA;AFiGA;AAAA;EEjGA;EAAA;EAAA;EAAA;AFiGA;AAAA;EEjGA;EAAA;EAAA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AFiGA;AAAA;EEjGA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AFiGA;AAAA;EEjGA;EAAA;EAAA;AFiGA;AAAA;EEjGA;EAAA;EAAA;EAAA;EAAA;EAAA;AFiGA;AAAA;EEjGA;EAAA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;EAAA;EAAA;EAAA;EAAA;AFiGA;AAAA;EEjGA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AFiGA;AAAA;EEjGA;EAAA;AFiGA;AAAA;EEjGA;EAAA;AFiGA;AAAA;EEjGA;EAAA;AFiGA;AAAA;EEjGA;EAAA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;EAAA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;EAAA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;EAAA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;EAAA;AFiGA;AAAA;EEjGA;EAAA;AFiGA;AAAA;EEjGA;EAAA;EAAA;EAAA;AFiGA;AAAA;EEjGA;EAAA;EAAA;AFiGA;AAAA;EEjGA;EAAA;EAAA;EAAA;AFiGA;AAAA;EEjGA;EAAA;EAAA;EAAA;AFiGA;AAAA;EEjGA;EAAA;EAAA;EAAA;AFiGA;AAAA;EEjGA;EAAA;EAAA;AFiGA;AAAA;EEjGA;EAAA;AFiGA;AAAA;EEjGA;EAAA;AFiGA;AAAA;EEjGA;EAAA;AFiGA;AAAA;EEjGA;EAAA;AFiGA;AAAA;EEjGA;EAAA;EAAA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;EAAA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;EAAA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;EAAA;AFiGA;AAAA;EEjGA;EAAA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;EAAA;AFiGA;AAAA;EEjGA;EAAA;EAAA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;EAAA;EAAA;EAAA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;AFiGA;AAAA;EEjGA;AFiGA;AAjGA;EEAA;EAAA;AFg3CA;AAh3CA;EEAA;IAAA;IAAA;EFq3CE;AACF,C;;;;AGn3CA;AC2ME;EACE,gBAlMU;EAmMV,eApMQ;EAqMR;AD5MJ;AC+ME;EAEE;AD7MJ;ACgNE;EACE;AD7MJ;AE4KE;ECzGE;EAcF;ED6FE;AFxKJ;AE2KE;EC9GE;EAcF;EDkGE;AFvKJ;AE0KE;ECnHE;EAcF;EDuGE;AFtKJ;AEyKE;ECxHE;EAcF;ED4GE;AFrKJ;AE2KE;EChIE;EDyIA;AF/KJ;AEkLE;EC5IE;EDqJA;AFtLJ;AEyLE;ECxJE;EAcF;AH1CF;AEwLE;EC5JE;EAcF;AHrCF;AEsLI;EACE;AFpLN;AEwLE;ECpKE;EAcF;AH7BF;AEuLE;ECxKE;EAcF;ED4JE;AFnLJ;AEsLE;EC7KE;EAcF;EDiKE;AFlLJ;AEqLE;EClLE;EAcF;EDsKE;AFjLJ;AEoLE;ECvLE;EAcF;ED2KE;AFhLJ;AIpEE;ED2DE;EAcF;AHAF;AK0EE;;EAGI;EACA;EACA;ALxEN;AMZE;EACE;ANeJ;AO1EE;EACE;AP6EJ;AO1EE;EAEI;EACA;AP4EN;AOxEE;EACE;AP2EJ;AOxEE;;EAEE;AP2EJ;AQrBE;EACE;ARwBJ;AQpBE;EACE;ARuBJ;ASrCE;EACE;EACA;ATwCJ;AStCI;;EAEE,eA7FkB;ATqIxB;AUtGE;EACE;AVyGJ;AUtGE;EACE;EACA;AVyGJ;AUtGE;EACE;AVyGJ;AWyCE;EACE;AXtCJ;AWyCE;EACE,eAzLsB;AXmJ1B;AWyCE;;EAGI;EACA;AXvCN;AW2CE;EAEI,eArM6B;EAsM7B;AXzCN;AYtJE;ET0DE;EAcF;AHmFF;AatHE;EAEI;EACA;EACA;AbwHN;AapHE;EVaE;EAcF;AH8FF;AcvBE;EX5FE,kBAeU;EAdV,gBAeY;EAdZ,kBAeY;EAdZ,iDAeY;EAGd;AHsGF;Ac3BE;EACE,yBAPuB;AdqC3B;AcxBI;;EACE,eAvB2B;EAwB3B,kBAxCU;AdoEhB;AcxBI;;EACE;EACA;Ad2BN;AczBM;;EACE;EACA,kBAlDQ;Ad8EhB;AcvBE;EACE;EAEA;AdyBJ;AcrBI;;EAzEF;EAEA;AdkGF;AcnBI;EAjFF;EAEA;AdsGF;AchBE;EACE;EACA,sBApEiB;AduFrB;AchBE;EACE;AdmBJ;AchBE;EAGE,iBAhEuB;AdiF3B;AcdE;EACE,cA/EoB;EAgFpB,0BAzEqB;EA6ErB;AdcJ;AezJI;EACE,sBAJqB;AfgK3B;AezJI;EACE;Af2JN;AevJM;;EAxDJ;EAEA;AfkNF;AerJM;EA/DJ;EAEA;AfsNF;AejJM;EAvEJ;EAEA;Af0NF;Ae9II;EACE;AfgJN;Ae7II;EAGE,cAzCqB;AfsL3B;Ae1II;EACE,0BAjDmB;EAqDnB;AfyIN;AenIE;EAGM;;IA3FN;EfiOA;Ee/HM;IAlGN;EfoOA;Ee1HM;IA1GN;EfuOA;AACF;AgBrNI;EACE;AhBuNN;AgBpNI;EACE;EACA,kBAT2B;AhB+NjC;AgBlNM;;EAnCJ;EAEA;AhBwPF;AgB9MM;EA5CJ;EAEA;AhB4PF;AiBvMI;EACE;AjB0MN;AiBvMI;EACE;EACA,mBAT8B;AjBkNpC;AiBrMM;;EA1CJ;EAEA;AjBkPF;AiBjMM;EAnDJ;EAEA;AjBsPF;AkB1TE;;EAGE;AlB4TJ;AmBhUE;;EARA;EACA;EACA;EAQE;EACA;AnBqUJ;AmBlUI;;EACE,eDJwB;AlByU9B;AoB1QE;EACE;ApB6QJ;AqB3SE;EAEI;EACA;EACA;ArB6SN;AsBpTE;;EAGI;EACA;AtBsTN;AuB9RE;EACE;AvBiSJ;AwBnSE;EACE;AxBsSJ;AwBnSE;EACE;AxBsSJ;AyBpSE;EACE;AzBuSJ;A0BxME;EAEI;EACA;EACA;A1B0MN;A2BzQE;EACE;A3B4QJ;A2BzQE;EAEI;EACA;A3B2QN;A2BvQE;EACE;A3B0QJ;A2BvQE;EACE;A3B0QJ;A2BvQE;EAEI;EACA;A3ByQN;A4BhQE;EACE;A5BmQJ;A4BhQE;EAEI;EACA;EACA;A5BkQN;A6BpVE;;;;;;;E1BOE;EAcF;E0BbE;A7BwVJ;A8B/YE;EACE;EACA,eArBQ;EAsBR,gBArBe;EAsBf,mBAtBe;A9BwanB;A8B/YE;EACE,eAvBgB;EAwBhB,gBAvBuB;EAwBvB,mBAxBuB;A9B0a3B;A+BnYE;EACE,iDAHY;A/ByYhB;A+BnYE;EACE,iDAPY;A/B6YhB;A+BjYI;EACE;A/BoYN;AmBvbE;EARA;EACA;EACA;EAQE;EACA;AnB2bJ;AmBxbI;EACE,eY6C0B;A/B6YhC;A+B1YI;EACE;A/B4YN;AmBpcE;EARA;EACA;EACA;EAQE;EACA;AnBwcJ;AmBrcI;EACE,eYkD0B;A/BqZhC;A+BlZI;EACE;EACA;EACA;A/BoZN;A+B9YI;EACE;A/BiZN;AmBvdE;EARA;EACA;EACA;EAQE;EACA;AnB2dJ;AmBxdI;EACE,eYgE0B;A/B0ZhC;A+BvZI;EACE;A/ByZN;AmBpeE;EARA;EACA;EACA;EAQE;EACA;AnBweJ;AmBreI;EACE,eYqE0B;A/BkahC;A+B/ZI;EACE,iDA1CU;EA2CV;EACA;A/BiaN;AgC1cE;EAEI;EACA;AhC4cN;AiC9eE;E9B2DE;EAcF;AH0aF;AkC3eE;EAEI;EACA;AlC6eN;AkCzeE;EACE;EAEE;EACA;EACA;AlC2eN;AmC3fE;EACE;AnC8fJ;AmC3fE;;EAEE;EACA;AnC8fJ;AoCzhBE;EACE;EAIA;ApCyhBJ;AoClhBI;EACE;ApCohBN;AoChhBE;EACE;ApCmhBJ;AoChhBE;EACE;EACA;EACA;EAEA;EACA;ApCkhBJ;AqC3gBI;EDHE;ApCihBN;AqCljBE;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAIA;EAGA;EAGA;EACA;ArC8iBJ;AsCpjBE;EAEE;EAGA;EACA;EACA;EACA;AtCojBJ;AsChjBE;EACE;EACA,aA3BwB;AtC8kB5B;AsCjjBI;EAGE;AtCijBN;AsCziBE;EACE;EACA;EACA,aA1Cc;AtCslBlB;AsCxiBE;EAGE;EACA;EACA;EACA,aApDc;EAwDd;EACA;EACA;AtCsiBJ;AsCniBE;EAEE;EACA;EACA;EACA;EACA;EAEA,aApEuB;EAqEvB;EACA;EACA;EACA;AtCoiBJ;AsCliBI;EACE;AtCoiBN;AsC/hBM;EAGE;AtC+hBR;AsC1hBE;EACE,+BAtFqB;AtCmnBzB;AsCrhBI;EACE;AtCwhBN;AsClhBE;EACE;EACA,aA3Gc;EAgHd;EAIA;EAGA;EACA;AtC4gBJ;AsCxgBE;EACE;EAKA;EAKA;AtCmgBJ;AuC1oBE;EACE;AvC6oBJ;AuCvoBE;EAyCA;EACA;EAxCE;EACA;AvC2oBJ;AuCloBE;EA6BA;EACA;EA5BE;AvCsoBJ;AuC5nBE;EAA0C;AvCgoB5C;AuC/nBE;EAAwC;AvCkoB1C;AuChoBE;EAEE;AvCioBJ;AuC9nBE;EAEE;AvCgoBJ;AwCllBE;EACE;AxCqlBJ;AyClpBE;EACE;AzCqpBJ;AA/qBA;oFAAA;AgC8CE;EAEI;EACA;AhCqoBN;AiCvqBE;E9B2DE;EAcF;AHmmBF;AC7lBE;EACE;ADgmBJ;AC5lBI;EACE;AD+lBN;AC3lBE;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AD8lBJ;AC3lBE;;EAEE;AD8lBJ;ACzlBE;EAEE;AD2lBJ;ACxsBE;EACE,WATS;EAUT,YAVS;EAWT,iBAXS;ADstBb;ACvsBI;EACE;ADysBN;ACpsBI;EACE;ADssBN;ACjsBI;EACE;ADmsBN;AC9rBI;EACE;EACA;ADgsBN;AC3rBI;EACE;AD6rBN;ACxrBI;EACE;EACA;AD0rBN;ACprBM;EACE;ADsrBR;ACjrBM;EACE;EACA;ADmrBR;AC9qBM;EACE;ADgrBR;AC3qBM;EACE;EACA;AD6qBR;AChvBE;EACE,WAVW;EAWX,YAXW;EAYX,iBAZW;AD+vBf;AC/uBI;EACE;ADivBN;AC5uBI;EACE;AD8uBN;ACzuBI;EACE;AD2uBN;ACtuBI;EACE;EACA;ADwuBN;ACnuBI;EACE;ADquBN;AChuBI;EACE;EACA;ADkuBN;AC5tBM;EACE;AD8tBR;ACztBM;EACE;EACA;AD2tBR;ACttBM;EACE;ADwtBR;ACntBM;EACE;EACA;ADqtBR;ACxxBE;EACE,WARS;EAST,YATS;EAUT,iBAVS;ADqyBb;ACvxBI;EACE;ADyxBN;ACpxBI;EACE;ADsxBN;ACjxBI;EACE;ADmxBN;AC9wBI;EACE;EACA;ADgxBN;AC3wBI;EACE;AD6wBN;ACxwBI;EACE;EACA;AD0wBN;ACpwBM;EACE;ADswBR;ACjwBM;EACE;EACA;ADmwBR;AC9vBM;EACE;ADgwBR;AC3vBM;EACE;EACA;AD6vBR;ACzoBE;EACE,gBAlMU;EAmMV,eApMQ;EAqMR;AD4oBJ;ACzoBE;EAEE;AD2oBJ;ACxoBE;EACE;AD2oBJ;AIh1BE;ED2DE;EAcF;AH4wBF;AKlsBE;;EAGI;EACA;EACA;ALosBN;AM7wBI;EACE,iBALc;ANqxBpB;AM5xBE;EACE;AN+xBJ;AO11BE;EACE;AP61BJ;AO11BE;EAEI;EACA;AP41BN;AOx1BE;EACE;AP21BJ;AOx1BE;;EAEE;AP21BJ;AQryBE;EACE;ARwyBJ;AQpyBE;EACE;ARuyBJ;ASrzBE;EACE;EACA;ATwzBJ;AStzBI;;EAEE,eA7FkB;ATq5BxB;AUt3BE;EACE;AVy3BJ;AUt3BE;EACE;EACA;AVy3BJ;AUt3BE;EACE;AVy3BJ;AWvuBE;EACE;AX0uBJ;AWvuBE;EACE,eAzLsB;AXm6B1B;AWvuBE;;EAGI;EACA;AXyuBN;AWruBE;EAEI,eArM6B;EAsM7B;AXuuBN;AYt6BE;ET0DE;EAcF;AHm2BF;Aaj3BI;EACE,YALe;Aby3BrB;Aal3BM;EACE,YAVY;Ab83BpB;Aa74BE;EAEI;EACA;EACA;Ab+4BN;Aa34BE;EVaE;EAcF;AHq3BF;Ac9yBE;EXrFE;EAcF;AH03BF;Ac/yBE;EACE,8BAPuB;AdyzB3B;Ac5yBI;;EACE,eAvB2B;EAwB3B,yBAxCU;Adw1BhB;Ac5yBI;;EACE;EACA;Ad+yBN;Ac7yBM;;EACE;EACA,yBAlDQ;Adk2BhB;Ac3yBE;EACE;EAEA;Ad6yBJ;AczyBI;;EAzEF;EAEA;Ads3BF;AcvyBI;EAjFF;EAEA;Ad03BF;AcpyBE;EACE;EACA,2BApEiB;Ad22BrB;AcpyBE;EACE;AduyBJ;AcpyBE;EAGE,sBAhEuB;Adq2B3B;AclyBE;EACE,cA/EoB;EAgFpB,0BAzEqB;EA6ErB;AdkyBJ;Ae76BI;EACE,sBAJqB;Afo7B3B;Ae76BI;EACE;Af+6BN;Ae36BM;;EAxDJ;EAEA;Afs+BF;Aez6BM;EA/DJ;EAEA;Af0+BF;Aer6BM;EAvEJ;EAEA;Af8+BF;Ael6BI;EACE;Afo6BN;Aej6BI;EAGE,cAzCqB;Af08B3B;Ae95BI;EACE,yBAjDmB;EAqDnB;Af65BN;Aev5BE;EAGM;;IA3FN;Efq/BA;Een5BM;IAlGN;Efw/BA;Ee94BM;IA1GN;Ef2/BA;AACF;AgBz+BI;EACE;AhB2+BN;AgBx+BI;EACE;EACA,kBAT2B;AhBm/BjC;AgBt+BM;;EAnCJ;EAEA;AhB4gCF;AgBl+BM;EA5CJ;EAEA;AhBghCF;AiB39BI;EACE;AjB89BN;AiB39BI;EACE;EACA,mBAT8B;AjBs+BpC;AiBz9BM;;EA1CJ;EAEA;AjBsgCF;AiBr9BM;EAnDJ;EAEA;AjB0gCF;AkB9kCE;;EAGE;AlBglCJ;AmBplCE;;EARA;EACA;EACA;EAQE;EACA;AnBylCJ;AmBtlCI;;EACE,eDJwB;AlB6lC9B;AoB9hCE;EACE;ApBiiCJ;A+B5jCE;EACE,4NAHY;A/BkkChB;A+B5jCE;EACE,4NAPY;A/BskChB;A+B1jCI;EACE;A/B6jCN;AmBhnCE;EARA;EACA;EACA;EAQE;EACA;AnBonCJ;AmBjnCI;EACE,eY6C0B;A/BskChC;A+BnkCI;EACE;A/BqkCN;AmB7nCE;EARA;EACA;EACA;EAQE;EACA;AnBioCJ;AmB9nCI;EACE,eYkD0B;A/B8kChC;A+B3kCI;EACE;EACA;EACA;A/B6kCN;A+BvkCI;EACE;A/B0kCN;AmBhpCE;EARA;EACA;EACA;EAQE;EACA;AnBopCJ;AmBjpCI;EACE,eYgE0B;A/BmlChC;A+BhlCI;EACE;A/BklCN;AmB7pCE;EARA;EACA;EACA;EAQE;EACA;AnBiqCJ;AmB9pCI;EACE,eYqE0B;A/B2lChC;A+BxlCI;EACE,4NA1CU;EA2CV;EACA;A/B0lCN;AqBvoCE;EAEI;EACA;EACA;ArByoCN;AsBjoCI;EACE,gBALK;AtByoCX;AsBppCE;;EAGI;EACA;AtBspCN;AuB9nCE;EACE;AvBioCJ;AwBnoCE;EACE;AxBsoCJ;AwBnoCE;EACE;AxBsoCJ;AyBpoCE;EACE;AzBuoCJ;A0BxiCE;EAEI;EACA;EACA;A1B0iCN;A2BvkCI;EACE,YANK;A3BglCX;A2BvkCI;;EAEE;A3B0kCN;A2BrkCI;EACE;EACA;A3BwkCN;A2BnkCM;EACE;A3BskCR;A2BjkCI;EACE;A3BokCN;A2B/nCE;EACE;A3BkoCJ;A2B/nCE;EAEI;EACA;A3BioCN;A2B7nCE;EACE;A3BgoCJ;A2B7nCE;EACE;A3BgoCJ;A2B7nCE;EAEI;EACA;A3B+nCN;A4BtnCE;EACE;A5BynCJ;A4BtnCE;EAEI;EACA;EACA;A5BwnCN;A6B1wCE;EACE,gBA6Ee;A7BgsCnB;A6B3wCE;EACE,YA0Ee;A7BosCnB;A6BxrCI;EA1FF;IACE,gBA+Ec;E7BusChB;;E6BpxCA;IACE,YA4Ec;E7B2sChB;AACF;A6B5tCE;;;;;;;E1BOE;EAcF;E0BbE;A7B+tCJ;A8BtxCE;EACE;EACA,eArBQ;EAsBR,gBArBe;EAsBf,mBAtBe;A9B+yCnB;A8BtxCE;EACE,eAvBgB;EAwBhB,gBAvBuB;EAwBvB,mBAxBuB;A9BizC3B;AmCnxCI;EACE,gBALK;AnC2xCX;AmCxyCE;EACE;AnC2yCJ;AmCxyCE;;EAEE;EACA;AnC2yCJ;AkC9yCE;EAEI;EACA;AlCgzCN;AkC5yCE;EACE;EAEE;EACA;EACA;AlC8yCN;AAn0CA;AAoCA;;;6DAAA;AAIA;;EAkDI;AAmvCJ;A0Ct1CE;;EAII;A1Cs1CN;AgCx1CE;;EACE;AhC21CJ;AgCz1CI;;;EAEE;AhC41CN;AgCx1CI;;EACE;AhC21CN;AgCx1CI;;EACE;EACA;AhC21CN;AgCx1CI;;EACE;AhC21CN;AgCv1CE;;EACE;AhC01CJ;AgCv1CE;;EACE;AhC01CJ;AgCv1CE;;EACE;AhC01CJ;AiC93CE;;EACE;AjCi4CJ;AiC93CE;;EACE;AjCi4CJ;A2C53CE;;EACE;A3C+3CJ;A2C73CI;;EACE;A3Cg4CN;A2C53CE;;EACE,cAZe;A3C24CnB;A2C53CE;;;;EAEE;A3Cg4CJ;A2Cx3CE;;;;;;;;EAIE;A3C83CJ;A2C33CE;;;;EAEE;A3C+3CJ;A2C13CI;;;;EACE,mBAxCa;A3Cu6CnB;A4Cx6CE;;;EAIE;EACA;A5Cy6CJ;A4Cl6CI;;ECkIF;A7CoyCF;A4Ct6CI;;ECkIF;A7CwyCF;A4C16CI;;ECkIF;A7C4yCF;A4C96CI;;ECkIF;A7CgzCF;A4Cl7CI;;ECkIF;A7CozCF;A4Ct7CI;;ECkIF;A7CwzCF;A4C17CI;;ECkIF;A7C4zCF;A4C97CI;;ECkIF;A7Cg0CF;A4Cl8CI;;ECkIF;A7Co0CF;A4Ct8CI;;ECkIF;A7Cw0CF;A4C18CI;;ECkIF;A7C40CF;A4C98CI;;ECkIF;A7Cg1CF;A4Cl9CI;;ECkIF;A7Co1CF;A4Ct9CI;;ECkIF;A7Cw1CF;A4C19CI;;ECkIF;A7C41CF;A4C99CI;;ECkIF;A7Cg2CF;A4Cl+CI;;ECkIF;A7Co2CF;A4Ct+CI;;ECkIF;A7Cw2CF;A4C1+CI;;ECkIF;A7C42CF;A4C9+CI;;ECkIF;A7Cg3CF;A4Cl/CI;;ECkIF;A7Co3CF;A4Ct/CI;;ECkIF;A7Cw3CF;A4C1/CI;;ECkIF;A7C43CF;A4C9/CI;;ECkIF;A7Cg4CF;A4ClgDI;;ECkIF;A7Co4CF;A4C//CI;EACE;A5CigDN;A8C3hDE;;EAEE;EACA;A9C8hDJ;A6Cl4CE;;EAXA;A7Ci5CF;A8C3hDI;;EACE;A9C8hDN;A8C5hDM;;EACE;A9C+hDR;AC15CE;;EACE;EACA;AD65CJ;AqCphDI;EpC0HE;EACA;AD65CN;ACx5CI;;EACE;EACA;AD45CN;ACv5CI;;EACE;EACA;AD05CN;ACr5CI;;EAWI;EAMF;ADy4CN;AIpkDE;;EyCkJA;EzChJE;EACA;AJukDJ;AKr/CE;;;;EAKE;EACA;ALs/CJ;AKthDE;;;;EACE;AL2hDJ;AKzhDE;;;;EACE;AL8hDJ;AK5hDE;;;;EACE;ALiiDJ;AK7hDI;;;;;;;;;;;;;EAEE;AL0iDN;AK7mDE;;;;EACE;ALknDJ;AK/mDE;;;;EACE;ALonDJ;AKjnDE;;;;EACE;ALsnDJ;AKnnDE;;;;EACE;ALwnDJ;AKviDI;;;;EACE,YAxGY;EAyGZ;AL4iDN;AKxiDE;;EACE;AL2iDJ;AKtiDE;;EACE;ALyiDJ;AKtiDE;;;;;EAEE;EACA;AL2iDJ;AKtmDE;;;;;EACE;AL4mDJ;AK1mDE;;;;;EACE;ALgnDJ;AK9mDE;;;;;EACE;ALonDJ;AKhnDI;;;;;;;;;;;;;;;;;EAEE;ALioDN;AK9oDE;;;;;EACE;ALopDJ;AKlpDE;;;;;EACE;ALwpDJ;AKtpDE;;;;;EACE;AL4pDJ;AKxpDI;;;;;;;;;;;;;;;;;EAEE;ALyqDN;AK3sDE;;;;;EAXA,wCADmB;EAGjB,YAjCc;AL6vDlB;AK/sDE;;;;;EAfA,uCADmB;EAGjB,YAjCc;ALqwDlB;AKntDE;;;;;EAnBA,qCADmB;EAGjB,YAjCc;AL6wDlB;A6C5mDE;;;EAXA;A7C4nDF;A6CjnDE;;EAXA;A7CgoDF;A6CrnDE;;EAXA;A7CooDF;A6CznDE;;EAXA;A7CwoDF;A6C7nDE;;;EAXA;A7C6oDF;A6CloDE;;;EAXA;A7CkpDF;A6CvoDE;;;EAXA;A7CupDF;AMtyDE;;;;EuC+IA;A7C6pDF;AMvyDE;;;;EAEE;AN2yDJ;AMxyDE;;EACE;AN2yDJ;AMzyDI;;EACE;AN4yDN;AMxyDE;;EACE;EACA;AN2yDJ;AMzyDI;;EACE;AN4yDN;AMxyDE;;EACE;AN2yDJ;AMxyDE;;EACE;EACA;AN2yDJ;AMvyDI;;EACE;EACA;EACA;AN0yDN;AMtyDE;;EACE;EACA;ANyyDJ;AMvyDI;;EACE;AN0yDN;AMtyDE;;EACE;EACA;ANyyDJ;AMvyDI;;EACE;AN0yDN;AMvyDI;;EACE;AN0yDN;AMtyDE;;;;EAEE;AN0yDJ;AOh3DE;;EAEE;EACA;APk3DJ;A6CztDE;;EAXA;A7CwuDF;A6C7tDE;;EAXA;A7C4uDF;AOl3DE;;EACE;APq3DJ;AQn3DE;;EACE;ARs3DJ;AQn3DE;;EACE,aAdoB;ARo4DxB;AQn3DE;;EAGE;ARo3DJ;AQj3DE;;EACE,yBAxBoB;AR44DxB;AQh3DI;;;EACE;ARo3DN;AQj3DI;;;EACE;ARq3DN;AQl3DI;;;EACE;ARs3DN;AQ/2DM;;;EACE,yBAtCW;ARy5DnB;AQ92DM;;EACE,qBA5CW;AR65DnB;AQ72DI;;EACE;ARg3DN;AQ12DE;;EACE;AR62DJ;AQx2DI;;;;EACE;AR62DN;AQ12DI;;;;EACE;AR+2DN;AQ52DI;;;;EACE;ARi3DN;ASz5DE;;EA5CA,yBAyCwB;EAxCxB,cAyCwB;ATg6D1B;ASv8DE;;EACE,cAsCsB;EArCtB;AT08DJ;AS/5DM;;EoCmGJ;A7Cg0DF;AS/5DM;;EACE;ATk6DR;AS95DI;;EACE;ATi6DN;AS95DI;;EACE;ATi6DN;AS55DI;;EAnEF,qCAyBE;EAxBF,6BAuBwB;AT48D1B;ASj+DE;;EACE,6BAoBsB;EAnBtB;ATo+DJ;AS98DE;;EAVA,wCADmB;EAGjB,YASwD;ATk9D5D;ASv6DI;;EAvEF,kCAyBE;EAxBF,0BAuBwB;AT29D1B;ASh/DE;;EACE,0BAoBsB;EAnBtB;ATm/DJ;AS79DE;;EAVA,qCADmB;EAGjB,YASwD;ATi+D5D;ASl7DI;;EA3EF,oCAyBE;EAxBF,4BAuBwB;AT0+D1B;AS//DE;;EACE,4BAoBsB;EAnBtB;ATkgEJ;AS5+DE;;EAVA,uCADmB;EAGjB,YASwD;ATg/D5D;AU5gEE;;EACE;AV+gEJ;AU5gEE;;;;;;;;;;;;;;EAIE;AVwhEJ;AUrhEE;;;;;;;;EAEE;AV6hEJ;AU1hEE;;EACE;AV6hEJ;AU1hEE;;;EACE;AV8hEJ;AW/+DE;;EACE;AXk/DJ;AW7+DE;;;;;;EAGE;AXk/DJ;AW/+DE;;EACE;AXk/DJ;AW/+DE;;;;EAEE;AXm/DJ;AWh/DE;;;;EAEE;EACA;AXo/DJ;AWhiEE;;EAiDI,cA/Ba;AXkhEnB;AW/+DE;;EACE,cApCe;AXshEnB;AW/+DE;;EAOI;AX4+DN;AW5iEE;;EA2EI;AXq+DN;AWhjEE;;EAoFM;AXg+DR;AW94DE;;EACE,+BA9MA;AX+lEJ;AW94DE;;;;EAEE,kCAViB;AX45DrB;AW/4DE;;;;EAEE;AXm5DJ;AWh5DE;;;;EAEE;AXo5DJ;AWj5DE;;;;EAEE,mBAxBc;AX66DlB;AWl5DE;;;;EAEE,mBA5BuB;AXk7D3B;AW3nEE;;EACE;EACA;AX8nEJ;AW3nEE;;EASI,YAtBc;AX4oEpB;AWlnEE;;EACE;AXqnEJ;AWnmEE;;;;EASI;AXgmEN;AWlnEE;EASA;;IASI;EXqmEJ;AACF;AW7gEE;;EkCCA;ElCCE;EACA;AXghEJ;AW/8DE;;EACE,8BA9MA;AXgqEJ;AW/8DE;;;;EAEE,kCAViB;AX69DrB;AWh9DE;;;;EAEE;AXo9DJ;AWj9DE;;;;EAEE;AXq9DJ;AWl9DE;;;;EAEE,mBAxBc;AX8+DlB;AWn9DE;;;;EAEE,mBA5BuB;AXm/D3B;AW5rEE;;EACE;EACA;AX+rEJ;AW5rEE;;EASI,YAtBc;AX6sEpB;AWnrEE;;EACE;AXsrEJ;AWpqEE;;;;EASI;AXiqEN;AWnrEE;EASA;;IASI;EXsqEJ;AACF;AW1gEE;;EACE,4BA9MA;AX2tEJ;AW1gEE;;;;EAEE,kCAViB;AXwhErB;AW3gEE;;;;EAEE;AX+gEJ;AW5gEE;;;;EAEE;AXghEJ;AW7gEE;;;;EAEE,mBAxBc;AXyiElB;AW9gEE;;;;EAEE,mBA5BuB;AX8iE3B;AWvvEE;;EACE;EACA;AX0vEJ;AWvvEE;;EASI,YAtBc;AXwwEpB;AW9uEE;;EACE;AXivEJ;AW/tEE;;;;EASI;AX4tEN;AW9uEE;EASA;;IASI;EXiuEJ;AACF;AW3nEE;;EkCbA;A7C4oEF;AW3nEE;;EACE;AX8nEJ;AW5nEI;;EACE;AX+nEN;AW5nEI;;EACE;AX+nEN;AW3nEE;;EACE;AX8nEJ;AY7yEE;;EiCiJA;EjC/IE;EACA;AZgzEJ;A+CxzEE;;EACE;A/C2zEJ;A+CxzEE;;EACE;A/C2zEJ;AazzEE;;EAEE;EACA;Ab2zEJ;A6CpqEE;;EAXA;A7CmrEF;Aa5zEE;;EACE;Ab+zEJ;AgD/0EM;;;;EnCoBF;Abi0EJ;Aa5zEE;EACE;;IAEE;Eb8zEJ;AACF;Aa3zEE;;EACE;Ab8zEJ;Aa3zEE;;;;EAEE;Ab+zEJ;Aa5zEE;;EACE;Ab+zEJ;Aa7zEI;;;;EAEE;Abi0EN;Acl1EE;;EACE,+BAZA;Adi2EJ;Acl1EE;;EACE,+BAhBA;Adq2EJ;Acl1EE;;EACE,0BAnBoB;Adw2ExB;Acn1EI;;EACE,yBAhBqB;Ads2E3B;Acn1EI;;EACE,uBAnBmB;Ady2EzB;Acl1EE;;EACE,yBA9BqB;Adm3EzB;Acl1EE;;EACE,2CA9BA;Adm3EJ;Acj1EI;;EACE,qCAhCsB;Ado3E5B;Acl1EM;;EACE,oCArCmB;Ad03E3B;Acl1EM;;EACE,kCAxCiB;Ad63EzB;Ac/0EI;;EACE,0BA9CsB;Adg4E5B;Ac/0EI;;EACE,yBApDqB;Ads4E3B;Ac/0EI;;EACE,uBAvDmB;Ady4EzB;Ac10EI;;EACE,uBAhEmB;Ad64EzB;Ac30EM;;;;EAEE,uBApEiB;Adm5EzB;Ac30EI;;;;EAEE,kCA1EmB;Ady5EzB;Ac30EE;;EACE,uBA/EqB;Ad65EzB;Aex6EI;;EACE,cANU;Afi7EhB;Aex6EI;;EACE,cAVU;Afq7EhB;Aex6EI;;EACE,2CAZF;Afu7EJ;Aex6EI;;EkCzBF;EACA;EACA;AjDq8EF;AkD/7EI;;EACE,2CAJF;AlDs8EJ;AkD/7EI;;EDZF;EACA;EACA;AjD+8EF;AgBj8EI;;EACE,qCATF;AhB68EJ;AgBj8EI;;EACE,qCAXF;AhB+8EJ;AgBj8EI;;EACE,2CAbF;AhBi9EJ;AgBh8EM;;EACE,cAjBiB;AhBo9EzB;AgBh8EM;;EACE;AhBm8ER;AiB/8EI;;EACE,gCAXF;AjB69EJ;AiB/8EI;;EACE,gCAbF;AjB+9EJ;AiB98EM;;EACE,0BAjBkB;AjBk+E1B;AiB98EM;;EACE,yBApBiB;AjBq+EzB;AiB98EM;;EACE,uBAvBe;AjBw+EvB;AiB38EM;;EACE,uBA9Be;AjB4+EvB;AiBz8EM;;EACE,cA3CiB;AjBu/EzB;AiBz8EM;;EACE,gCAtCJ;AjBk/EJ;AmDhgFI;;EACE;AnDmgFN;AmDhgFI;;EACE;AnDmgFN;AmDhgFI;;EACE;AnDmgFN;AoBvgFE;;EACE;ApB0gFJ;AoBvgFE;;;;EAEE;ApB2gFJ;AoBxgFE;;EACE;ApB2gFJ;AoD9hFE;;EhCsBI;ApB4gFN;AoD9hFE;;EhCkBI;ApBghFN;AoD9hFE;;EhCcI;ApBohFN;AoD5hFE;;EhCQI;ApBwhFN;AoBngFE;;EACE;ApBsgFJ;AoBngFE;;;;EAEE;ApBugFJ;AoBpgFE;;EACE;ApBugFJ;A+BvjFI;;EACE;A/B0jFN;A+BvjFI;;EACE;A/B0jFN;A+BvjFI;;EACE;A/B0jFN;A+BvjFI;;EACE;EACA;A/B0jFN;A+BnjFI;;;;;;;;;;;EACE;A/B+jFN;A+B1jFI;;;;EACE;A/B+jFN;AqB5lFE;;EAEE;ArB8lFJ;A6Cp8EE;;EAXA;A7Cm9EF;AqB/lFE;;EACE;EACA;ArBkmFJ;AqB/lFM;;;;;;EAGE;ArBomFR;AqB/lFE;;;;EAEE;ArBmmFJ;AqB5lFI;;;;;;;;EACE;ArBqmFN;AsBjoFE;;EACE;AtBooFJ;AsBjoFE;;;;EAEE;AtBqoFJ;AsBloFE;;;;EAEE;EACA;AtBsoFJ;AsBnoFE;;;;EAEE;AtBuoFJ;AsBnoFI;;;;;;;;EAIE;AtByoFN;AqDvpFE;;EACE;ArD0pFJ;AqDvpFE;;EACE;ArD0pFJ;AqDvpFE;;EACE;ArD0pFJ;AqDtpFI;;EACE;ArDypFN;AqDtpFI;;EACE;ArDypFN;AqDtpFI;;EACE;ArDypFN;AqDppFI;;EACE;ArDupFN;AqDppFI;;EACE;ArDupFN;AqDppFI;;EACE;ArDupFN;AsDxsFI;;;EACE;AtD4sFN;AsDzsFI;;;EACE;AtD6sFN;AsD1sFI;;;EACE;AtD8sFN;AuBvsFE;;EACE;AvB0sFJ;AuB/tFE;;EACE;AvBkuFJ;AuB/tFE;;;;;;EAIE;AvBmuFJ;AuB3uFE;;EACE;AvB8uFJ;AuB3uFE;;;;;;EAIE;AvB+uFJ;AuBvvFE;;EACE;AvB0vFJ;AuBvvFE;;;;;;EAIE;AvB2vFJ;AuB1tFM;;;;EAEE;AvB8tFR;AuB3tFM;;;;EAEE;AvB+tFR;AuB5tFM;;EACE;AvB+tFR;AuBztFI;;EACE;AvB4tFN;AwB7wFE;;EACE;AxBgxFJ;AwB7wFE;;EACE;AxBgxFJ;AwB7wFE;;EACE;AxBgxFJ;AwB7wFE;;EACE;AxBgxFJ;AwB7wFE;;EACE;AxBgxFJ;A6CzoFE;;EAXA;A7CwpFF;AwBjxFI;;EACE;AxBoxFN;AwB9wFM;;EACE;AxBixFR;AwB9wFM;;EACE;AxBixFR;AwB9wFM;;EACE;AxBixFR;AwB7wFI;;EACE;AxBgxFN;AwB7wFI;;EACE;AxBgxFN;AuD1zFE;;EACE,yBALmC;EAMnC;AvD6zFJ;AuD1zFE;;EACE,uBAXwB;EAYxB;AvD6zFJ;AuD3zFI;;EACE,uBAb2B;AvD20FjC;AuD3zFI;;EV6HF;A7CksFF;AuDxzFE;;EACE,+BAvBmB;AvDk1FvB;AuDzzFI;;EACE,8BA1BiB;EA2BjB;AvD4zFN;AuDxzFE;;EACE,8BAhCmB;EAiCnB;AvD2zFJ;AuDzzFI;;EACE;EACA,+BArCiB;AvDi2FvB;AuDxzFE;;EAQI;AvDozFN;AyB72FI;;EACE;AzBg3FN;AyB72FI;;EAGE;AzB82FN;AyB32FI;;EAGE;AzB42FN;AyBz3FI;;EACE;AzB43FN;AyBz3FI;;EAGE;AzB03FN;AyBv3FI;;EAGE;AzBw3FN;AyBr4FI;;EACE;AzBw4FN;AyBr4FI;;EAGE;AzBs4FN;AyBn4FI;;EAGE;AzBo4FN;AyB/1FI;;EAGE,uBAhBqB;AzBg3F3B;AyB51FE;;EoB2FA;EpBzFE;AzB+1FJ;AyB51FE;;EACE,yBA3BoB;AzB03FxB;A0Br3FE;;EACE,yBAbqB;A1Bq4FzB;A0Bp6FE;;;;;;EAGE;A1By6FJ;A0Bt6FE;;EACE;A1By6FJ;A0Bt6FE;;EAGE,qCADQ;EAMN,YAPQ;A1B06Fd;A0Br7FE;;;;;;EAGE;A1B07FJ;A0Bv7FE;;EACE;A1B07FJ;A0Bv7FE;;EAGE,oCADQ;EAMN,YAPQ;A1B27Fd;A0Bt8FE;;;;;;EAGE;A1B28FJ;A0Bx8FE;;EACE;A1B28FJ;A0Bx8FE;;EAGE,kCADQ;EAMN,YAPQ;A1B48Fd;A0Bx5FI;;;;EACE,yBAhC2B;A1B67FjC;A0Bx5FI;;;;;;EAGE,yBAvCwB;A1Bo8F9B;A0Bz5FM;;EACE,yBA5CsB;A1Bw8F9B;A0Bt5FI;;EAGE,qCADQ;A1Bw5Fd;A0B74FM;;;;EAEE,yBA/DJ;A1Bg9FJ;A0B74FQ;;;;EAEE,yBAnEN;A1Bo9FJ;A0B34FM;;EACE,qBAhFiB;EAiFjB;A1B84FR;A0Bz4FQ;;;EACE,qBAtFuB;A1Bm+FjC;A0B14FQ;;;EACE,qBAzFoB;A1Bu+F9B;A0Bx4FE;;EACE,gCAzFA;A1Bo+FJ;A0Bl4FE;;EACE;EAIA;A1Bk4FJ;A0Bx3FE;;EACE;A1B23FJ;A2B3gGI;;;;;EAIE;A3B8gGN;A2B3gGI;;EACE;A3B8gGN;A2BxgGI;EACE;;IACE;E3B2gGN;AACF;A2BxgGI;;;;EAIE;A3B0gGN;A2BvgGI;;EAGE;EACA;A3BwgGN;A2BrgGI;;;;;;EAGE;EACA;A3B0gGN;A2BtgGM;;EACE;A3BygGR;A2BtgGM;;;;;;EAGE;EACA;A3B2gGR;A2BtgGM;;EACE;A3BygGR;A2BtgGM;;;;;;EAGE;EACA;A3B2gGR;A2BvgGI;;EACE;EACA;A3B0gGN;A2BvgGI;;EACE;A3B0gGN;A2BvgGI;;EACE;A3B0gGN;A2BtgGE;;;EACE;A3B0gGJ;A2BvgGE;;EACE;A3B0gGJ;A2BvgGE;;;;;;EAGE;A3B4gGJ;AwD/mGE;;EAYI;AxDumGN;A4B/mGE;;;;EAEE,gCAJc;A5BunGlB;A4B/mGI;;;;EAEE,6BAVY;EAWZ;A5BmnGN;A4B/mGE;;;EACE;A5BmnGJ;A4BjnGI;;;EACE;A5BqnGN;A4BjnGE;;EACE;A5BonGJ;A4BjnGE;;EACE;A5BonGJ;A4BhnGE;;;;EAEE;EACA;A5BonGJ;A4BtkGM;;;;;;;;;;;;;EACE;A5BolGR;A4B/lGE;;;EACE;A5BmmGJ;A4BpmGE;;;;;EACE;A5B0mGJ;A4BjmGM;;;;;;;;;;;;;EACE;A5B+mGR;A4B1nGE;;;EACE;A5B8nGJ;A4B/nGE;;;;;EACE;A5BqoGJ;A4B5nGM;;;;;;;;;;;;;EACE;A5B0oGR;A4BrpGE;;;EACE;A5BypGJ;A4B1pGE;;;;;EACE;A5BgqGJ;A4BvpGM;;;;;;;;;;;;;EACE;A5BqqGR;A4B1pGE;;;;;;;EACE;A5BkqGJ;A4B9pGE;;;;;EACE;A5BoqGJ;A4BlqGI;;;;;EACE;A5BwqGN;A4BnqGE;;;;;;;;;;;;;;;EAIE;A5BgrGJ;A4B7qGE;;;;;;;EAGE;EACA;A5BmrGJ;A4B9qGE;;;;;;;;;;;EAIE;EACA;A5BurGJ;A4BtuGM;;;;;;;;;;;;;EACE;A5BovGR;A4BzuGE;;;;;;;EACE;A5BivGJ;A4B7uGE;;;;;EACE;A5BmvGJ;A4BjvGI;;;;;EACE;A5BuvGN;A4BlvGE;;;;;;;;;;;;;;;EAIE;A5B+vGJ;A4B5vGE;;;;;;;EAGE;EACA;A5BkwGJ;A4B7vGE;;;;;;;;;;;EAIE;EACA;A5BswGJ;A4BrzGM;;;;;;;;;;;;;EACE;A5Bm0GR;A4BxzGE;;;;;;;EACE;A5Bg0GJ;A4B5zGE;;;;;EACE;A5Bk0GJ;A4Bh0GI;;;;;EACE;A5Bs0GN;A4Bj0GE;;;;;;;;;;;;;;;EAIE;A5B80GJ;A4B30GE;;;;;;;EAGE;EACA;A5Bi1GJ;A4B50GE;;;;;;;;;;;EAIE;EACA;A5Bq1GJ;A6B/6GE;;EACE;EACA;A7Bk7GJ;A6Bh7GI;;EApCF;EACA;A7Bw9GF;A6Bj7GI;;EAxCF;EACA;A7B69GF;A6Bl7GI;;EA5CF;EACA;A7Bk+GF;A6B99GE;;;;;;EAGE;A7Bm+GJ;A6Bh+GE;;;;;;;;;;EAKE;A7Bu+GJ;A6Bp+GE;;EACE;A7Bu+GJ;A8B3/GE;;EACE;A9B8/GJ;AmCrgHE;;EACE;AnCwgHJ;AmCrgHE;;;;EAEE;AnCygHJ;AkC/gHE;;EAGE;EACA;EW6IF;A7Co4GF;AkC5gHE;;EACE;AlC+gHJ;AAn7GA;;EAkDI;AAs4GJ;A0C/hHE;;EAII;A1C+hHN;AgCjiHE;;EACE;AhCoiHJ;AgCliHI;;;EAEE;AhCqiHN;AgCjiHI;;EACE;AhCoiHN;AgCjiHI;;EACE;EACA;AhCoiHN;AgCjiHI;;EACE;AhCoiHN;AgChiHE;;EACE;AhCmiHJ;AgChiHE;;EACE;AhCmiHJ;AgChiHE;;EACE;AhCmiHJ;AiCvkHE;;EACE;AjC0kHJ;AiCvkHE;;EACE;AjC0kHJ;A2CrkHE;;EACE;A3CwkHJ;A2CtkHI;;EACE;A3CykHN;A2CrkHE;;EACE,cAZe;A3ColHnB;A2CrkHE;;;;EAEE;A3CykHJ;A2CjkHE;;;;;;;;EAIE;A3CukHJ;A2CpkHE;;;;EAEE;A3CwkHJ;A2CnkHI;;;;EACE,mBAxCa;A3CgnHnB;A4CjnHE;;;EAIE;EACA;A5CknHJ;A4C3mHI;;ECkIF;A7C6+GF;A4C/mHI;;ECkIF;A7Ci/GF;A4CnnHI;;ECkIF;A7Cq/GF;A4CvnHI;;ECkIF;A7Cy/GF;A4C3nHI;;ECkIF;A7C6/GF;A4C/nHI;;ECkIF;A7CigHF;A4CnoHI;;ECkIF;A7CqgHF;A4CvoHI;;ECkIF;A7CygHF;A4C3oHI;;ECkIF;A7C6gHF;A4C/oHI;;ECkIF;A7CihHF;A4CnpHI;;ECkIF;A7CqhHF;A4CvpHI;;ECkIF;A7CyhHF;A4C3pHI;;ECkIF;A7C6hHF;A4C/pHI;;ECkIF;A7CiiHF;A4CnqHI;;ECkIF;A7CqiHF;A4CvqHI;;ECkIF;A7CyiHF;A4C3qHI;;ECkIF;A7C6iHF;A4C/qHI;;ECkIF;A7CijHF;A4CnrHI;;ECkIF;A7CqjHF;A4CvrHI;;ECkIF;A7CyjHF;A4C3rHI;;ECkIF;A7C6jHF;A4C/rHI;;ECkIF;A7CikHF;A4CnsHI;;ECkIF;A7CqkHF;A4CvsHI;;ECkIF;A7CykHF;A4C3sHI;;ECkIF;A7C6kHF;A4CxsHI;EACE;A5C0sHN;A8CpuHE;;EAEE;EACA;A9CuuHJ;A6C3kHE;;EAXA;A7C0lHF;A8CpuHI;;EACE;A9CuuHN;A8CruHM;;EACE;A9CwuHR;ACnmHE;;EACE;EACA;ADsmHJ;AqC7tHI;EpC0HE;EACA;ADsmHN;ACjmHI;;EACE;EACA;ADqmHN;AChmHI;;EACE;EACA;ADmmHN;AC9lHI;;EAWI;EAMF;ADklHN;AI7wHE;;EyCkJA;EzChJE;EACA;AJgxHJ;AK9rHE;;;;EAKE;EACA;AL+rHJ;AK/tHE;;;;EACE;ALouHJ;AKluHE;;;;EACE;ALuuHJ;AKruHE;;;;EACE;AL0uHJ;AKtuHI;;;;;;;;;;;;;EAEE;ALmvHN;AKtzHE;;;;EACE;AL2zHJ;AKxzHE;;;;EACE;AL6zHJ;AK1zHE;;;;EACE;AL+zHJ;AK5zHE;;;;EACE;ALi0HJ;AKhvHI;;;;EACE,YAxGY;EAyGZ;ALqvHN;AKjvHE;;EACE;ALovHJ;AK/uHE;;EACE;ALkvHJ;AK/uHE;;;;;EAEE;EACA;ALovHJ;AK/yHE;;;;;EACE;ALqzHJ;AKnzHE;;;;;EACE;ALyzHJ;AKvzHE;;;;;EACE;AL6zHJ;AKzzHI;;;;;;;;;;;;;;;;;EAEE;AL00HN;AKv1HE;;;;;EACE;AL61HJ;AK31HE;;;;;EACE;ALi2HJ;AK/1HE;;;;;EACE;ALq2HJ;AKj2HI;;;;;;;;;;;;;;;;;EAEE;ALk3HN;AKp5HE;;;;;EAXA,wCADmB;EAGjB,YAjCc;ALs8HlB;AKx5HE;;;;;EAfA,uCADmB;EAGjB,YAjCc;AL88HlB;AK55HE;;;;;EAnBA,qCADmB;EAGjB,YAjCc;ALs9HlB;A6CrzHE;;;EAXA;A7Cq0HF;A6C1zHE;;EAXA;A7Cy0HF;A6C9zHE;;EAXA;A7C60HF;A6Cl0HE;;EAXA;A7Ci1HF;A6Ct0HE;;;EAXA;A7Cs1HF;A6C30HE;;;EAXA;A7C21HF;A6Ch1HE;;;EAXA;A7Cg2HF;AM/+HE;;;;EuC+IA;A7Cs2HF;AMh/HE;;;;EAEE;ANo/HJ;AMj/HE;;EACE;ANo/HJ;AMl/HI;;EACE;ANq/HN;AMj/HE;;EACE;EACA;ANo/HJ;AMl/HI;;EACE;ANq/HN;AMj/HE;;EACE;ANo/HJ;AMj/HE;;EACE;EACA;ANo/HJ;AMh/HI;;EACE;EACA;EACA;ANm/HN;AM/+HE;;EACE;EACA;ANk/HJ;AMh/HI;;EACE;ANm/HN;AM/+HE;;EACE;EACA;ANk/HJ;AMh/HI;;EACE;ANm/HN;AMh/HI;;EACE;ANm/HN;AM/+HE;;;;EAEE;ANm/HJ;AOzjIE;;EAEE;EACA;AP2jIJ;A6Cl6HE;;EAXA;A7Ci7HF;A6Ct6HE;;EAXA;A7Cq7HF;AO3jIE;;EACE;AP8jIJ;AQ5jIE;;EACE;AR+jIJ;AQ5jIE;;EACE,aAdoB;AR6kIxB;AQ5jIE;;EAGE;AR6jIJ;AQ1jIE;;EACE,yBAxBoB;ARqlIxB;AQzjII;;;EACE;AR6jIN;AQ1jII;;;EACE;AR8jIN;AQ3jII;;;EACE;AR+jIN;AQxjIM;;;EACE,yBAtCW;ARkmInB;AQvjIM;;EACE,qBA5CW;ARsmInB;AQtjII;;EACE;ARyjIN;AQnjIE;;EACE;ARsjIJ;AQjjII;;;;EACE;ARsjIN;AQnjII;;;;EACE;ARwjIN;AQrjII;;;;EACE;AR0jIN;ASlmIE;;EA5CA,yBAyCwB;EAxCxB,YAyCwB;ATymI1B;AShpIE;;EACE,YAsCsB;EArCtB;ATmpIJ;ASxmIM;;EoCmGJ;A7CygIF;ASxmIM;;EACE;AT2mIR;ASvmII;;EACE;AT0mIN;ASvmII;;EACE;AT0mIN;ASrmII;;EAnEF,qCAyBE;EAxBF,6BAuBwB;ATqpI1B;AS1qIE;;EACE,6BAoBsB;EAnBtB;AT6qIJ;ASvpIE;;EAVA,wCADmB;EAGjB,YASwD;AT2pI5D;AShnII;;EAvEF,kCAyBE;EAxBF,0BAuBwB;AToqI1B;ASzrIE;;EACE,0BAoBsB;EAnBtB;AT4rIJ;AStqIE;;EAVA,qCADmB;EAGjB,YASwD;AT0qI5D;AS3nII;;EA3EF,oCAyBE;EAxBF,4BAuBwB;ATmrI1B;ASxsIE;;EACE,4BAoBsB;EAnBtB;AT2sIJ;ASrrIE;;EAVA,uCADmB;EAGjB,YASwD;ATyrI5D;AUrtIE;;EACE;AVwtIJ;AUrtIE;;;;;;;;;;;;;;EAIE;AViuIJ;AU9tIE;;;;;;;;EAEE;AVsuIJ;AUnuIE;;EACE;AVsuIJ;AUnuIE;;;EACE;AVuuIJ;AWxrIE;;EACE;AX2rIJ;AWtrIE;;;;;;EAGE;AX2rIJ;AWxrIE;;EACE;AX2rIJ;AWxrIE;;;;EAEE;AX4rIJ;AWzrIE;;;;EAEE;EACA;AX6rIJ;AWzuIE;;EAiDI,cA/Ba;AX2tInB;AWxrIE;;EACE,cApCe;AX+tInB;AWxrIE;;EAOI;AXqrIN;AWrvIE;;EA2EI;AX8qIN;AWzvIE;;EAoFM;AXyqIR;AWvlIE;;EACE,+BA9MA;AXwyIJ;AWvlIE;;;;EAEE,kCAViB;AXqmIrB;AWxlIE;;;;EAEE;AX4lIJ;AWzlIE;;;;EAEE;AX6lIJ;AW1lIE;;;;EAEE,mBAxBc;AXsnIlB;AW3lIE;;;;EAEE,mBA5BuB;AX2nI3B;AWp0IE;;EACE;EACA;AXu0IJ;AWp0IE;;EASI,YAtBc;AXq1IpB;AW3zIE;;EACE;AX8zIJ;AW5yIE;;;;EASI;AXyyIN;AW3zIE;EASA;;IASI;EX8yIJ;AACF;AWttIE;;EkCCA;ElCCE;EACA;AXytIJ;AWxpIE;;EACE,8BA9MA;AXy2IJ;AWxpIE;;;;EAEE,kCAViB;AXsqIrB;AWzpIE;;;;EAEE;AX6pIJ;AW1pIE;;;;EAEE;AX8pIJ;AW3pIE;;;;EAEE,mBAxBc;AXurIlB;AW5pIE;;;;EAEE,mBA5BuB;AX4rI3B;AWr4IE;;EACE;EACA;AXw4IJ;AWr4IE;;EASI,YAtBc;AXs5IpB;AW53IE;;EACE;AX+3IJ;AW72IE;;;;EASI;AX02IN;AW53IE;EASA;;IASI;EX+2IJ;AACF;AWntIE;;EACE,4BA9MA;AXo6IJ;AWntIE;;;;EAEE,kCAViB;AXiuIrB;AWptIE;;;;EAEE;AXwtIJ;AWrtIE;;;;EAEE;AXytIJ;AWttIE;;;;EAEE,mBAxBc;AXkvIlB;AWvtIE;;;;EAEE,mBA5BuB;AXuvI3B;AWh8IE;;EACE;EACA;AXm8IJ;AWh8IE;;EASI,YAtBc;AXi9IpB;AWv7IE;;EACE;AX07IJ;AWx6IE;;;;EASI;AXq6IN;AWv7IE;EASA;;IASI;EX06IJ;AACF;AWp0IE;;EkCbA;A7Cq1IF;AWp0IE;;EACE;AXu0IJ;AWr0II;;EACE;AXw0IN;AWr0II;;EACE;AXw0IN;AWp0IE;;EACE;AXu0IJ;AYt/IE;;EiCiJA;EjC/IE;EACA;AZy/IJ;A+CjgJE;;EACE;A/CogJJ;A+CjgJE;;EACE;A/CogJJ;AalgJE;;EAEE;EACA;AbogJJ;A6C72IE;;EAXA;A7C43IF;AargJE;;EACE;AbwgJJ;AgDxhJM;;;;EnCoBF;Ab0gJJ;AargJE;EACE;;IAEE;EbugJJ;AACF;AapgJE;;EACE;AbugJJ;AapgJE;;;;EAEE;AbwgJJ;AargJE;;EACE;AbwgJJ;AatgJI;;;;EAEE;Ab0gJN;Ac3hJE;;EACE,+BAZA;Ad0iJJ;Ac3hJE;;EACE,+BAhBA;Ad8iJJ;Ac3hJE;;EACE,0BAnBoB;AdijJxB;Ac5hJI;;EACE,yBAhBqB;Ad+iJ3B;Ac5hJI;;EACE,uBAnBmB;AdkjJzB;Ac3hJE;;EACE,yBA9BqB;Ad4jJzB;Ac3hJE;;EACE,yBA9BA;Ad4jJJ;Ac1hJI;;EACE,qCAhCsB;Ad6jJ5B;Ac3hJM;;EACE,oCArCmB;AdmkJ3B;Ac3hJM;;EACE,kCAxCiB;AdskJzB;AcxhJI;;EACE,0BA9CsB;AdykJ5B;AcxhJI;;EACE,yBApDqB;Ad+kJ3B;AcxhJI;;EACE,uBAvDmB;AdklJzB;AcnhJI;;EACE,uBAhEmB;AdslJzB;AcphJM;;;;EAEE,uBApEiB;Ad4lJzB;AcphJI;;;;EAEE,kCA1EmB;AdkmJzB;AcphJE;;EACE,uBA/EqB;AdsmJzB;AejnJI;;EACE,cANU;Af0nJhB;AejnJI;;EACE,cAVU;Af8nJhB;AejnJI;;EACE,0CAZF;AfgoJJ;AejnJI;;EkCzBF;EACA;EACA;AjD8oJF;AkDxoJI;;EACE,0CAJF;AlD+oJJ;AkDxoJI;;EDZF;EACA;EACA;AjDwpJF;AgB1oJI;;EACE,0CATF;AhBspJJ;AgB1oJI;;EACE,2CAXF;AhBwpJJ;AgB1oJI;;EACE,0CAbF;AhB0pJJ;AgBzoJM;;EACE,cAjBiB;AhB6pJzB;AgBzoJM;;EACE;AhB4oJR;AiBxpJI;;EACE,+BAXF;AjBsqJJ;AiBxpJI;;EACE,cAbF;AjBwqJJ;AiBvpJM;;EACE,0BAjBkB;AjB2qJ1B;AiBvpJM;;EACE,yBApBiB;AjB8qJzB;AiBvpJM;;EACE,uBAvBe;AjBirJvB;AiBppJM;;EACE,uBA9Be;AjBqrJvB;AiBlpJM;;EACE,cA3CiB;AjBgsJzB;AiBlpJM;;EACE,gCAtCJ;AjB2rJJ;AmDzsJI;;EACE;AnD4sJN;AmDzsJI;;EACE;AnD4sJN;AmDzsJI;;EACE;AnD4sJN;AoBhtJE;;EACE;ApBmtJJ;AoBhtJE;;;;EAEE;ApBotJJ;AoBjtJE;;EACE;ApBotJJ;AoDvuJE;;EhCsBI;ApBqtJN;AoDvuJE;;EhCkBI;ApBytJN;AoDvuJE;;EhCcI;ApB6tJN;AoDruJE;;EhCQI;ApBiuJN;AoBvtJQ;;EACE,0BqCbU;AzDuuJpB;AoBvtJQ;;EACE,0BqCfW;AzDyuJrB;AoBptJE;;EACE;ApButJJ;AoBptJE;;;;EAEE;ApBwtJJ;AoBrtJE;;EACE;ApBwtJJ;A+BxwJI;;EACE;A/B2wJN;A+BxwJI;;EACE;A/B2wJN;A+BxwJI;;EACE;A/B2wJN;A+BxwJI;;EACE;EACA;A/B2wJN;A+BpwJI;;;;;;;;;;;EACE;A/BgxJN;A+B3wJI;;;;EACE;A/BgxJN;AqB7yJE;;EAEE;ArB+yJJ;A6CrpJE;;EAXA;A7CoqJF;AqBhzJE;;EACE;EACA;ArBmzJJ;AqBhzJM;;;;;;EAGE;ArBqzJR;AqBhzJE;;;;EAEE;ArBozJJ;AqB7yJI;;;;;;;;EACE;ArBszJN;AsBl1JE;;EACE;AtBq1JJ;AsBl1JE;;;;EAEE;AtBs1JJ;AsBn1JE;;;;EAEE;EACA;AtBu1JJ;AsBp1JE;;;;EAEE;AtBw1JJ;AsBp1JI;;;;;;;;EAIE;AtB01JN;AqDx2JE;;EACE;ArD22JJ;AqDx2JE;;EACE;ArD22JJ;AqDx2JE;;EACE;ArD22JJ;AqDv2JI;;EACE;ArD02JN;AqDv2JI;;EACE;ArD02JN;AqDv2JI;;EACE;ArD02JN;AqDr2JI;;EACE;ArDw2JN;AqDr2JI;;EACE;ArDw2JN;AqDr2JI;;EACE;ArDw2JN;AsDz5JI;;;EACE;AtD65JN;AsD15JI;;;EACE;AtD85JN;AsD35JI;;;EACE;AtD+5JN;AuBx5JE;;EACE;AvB25JJ;AuBh7JE;;EACE;AvBm7JJ;AuBh7JE;;;;;;EAIE;AvBo7JJ;AuB57JE;;EACE;AvB+7JJ;AuB57JE;;;;;;EAIE;AvBg8JJ;AuBx8JE;;EACE;AvB28JJ;AuBx8JE;;;;;;EAIE;AvB48JJ;AuB36JM;;;;EAEE;AvB+6JR;AuB56JM;;;;EAEE;AvBg7JR;AuB76JM;;EACE;AvBg7JR;AuB16JI;;EACE;AvB66JN;AwB99JE;;EACE;AxBi+JJ;AwB99JE;;EACE;AxBi+JJ;AwB99JE;;EACE;AxBi+JJ;AwB99JE;;EACE;AxBi+JJ;AwB99JE;;EACE;AxBi+JJ;A6C11JE;;EAXA;A7Cy2JF;AwBl+JI;;EACE;AxBq+JN;AwB/9JM;;EACE;AxBk+JR;AwB/9JM;;EACE;AxBk+JR;AwB/9JM;;EACE;AxBk+JR;AwB99JI;;EACE;AxBi+JN;AwB99JI;;EACE;AxBi+JN;AuD3gKE;;EACE,yBALmC;EAMnC;AvD8gKJ;AuD3gKE;;EACE,yBAXwB;EAYxB;AvD8gKJ;AuD5gKI;;EACE,yBAb2B;AvD4hKjC;AuD5gKI;;EV6HF;A7Cm5JF;AuDzgKE;;EACE,iDAvBmB;AvDmiKvB;AuD1gKI;;EACE,gDA1BiB;EA2BjB;AvD6gKN;AuDzgKE;;EACE,gDAhCmB;EAiCnB;AvD4gKJ;AuD1gKI;;EACE;EACA,iDArCiB;AvDkjKvB;AuDzgKE;;EAQI;AvDqgKN;AyB9jKI;;EACE;AzBikKN;AyB9jKI;;EAGE;AzB+jKN;AyB5jKI;;EAGE;AzB6jKN;AyB1kKI;;EACE;AzB6kKN;AyB1kKI;;EAGE;AzB2kKN;AyBxkKI;;EAGE;AzBykKN;AyBtlKI;;EACE;AzBylKN;AyBtlKI;;EAGE;AzBulKN;AyBplKI;;EAGE;AzBqlKN;AyBhjKI;;EAGE,uBAhBqB;AzBikK3B;AyB7iKE;;EoB2FA;EpBzFE;AzBgjKJ;AyB7iKE;;EACE,yBA3BoB;AzB2kKxB;A0BtkKE;;EACE,yBAbqB;A1BslKzB;A0BrnKE;;;;;;EAGE;A1B0nKJ;A0BvnKE;;EACE;A1B0nKJ;A0BvnKE;;EAGE,qCADQ;EAMN,YAPQ;A1B2nKd;A0BtoKE;;;;;;EAGE;A1B2oKJ;A0BxoKE;;EACE;A1B2oKJ;A0BxoKE;;EAGE,oCADQ;EAMN,YAPQ;A1B4oKd;A0BvpKE;;;;;;EAGE;A1B4pKJ;A0BzpKE;;EACE;A1B4pKJ;A0BzpKE;;EAGE,kCADQ;EAMN,YAPQ;A1B6pKd;A0BzmKI;;;;EACE,yBAhC2B;A1B8oKjC;A0BzmKI;;;;;;EAGE,yBAvCwB;A1BqpK9B;A0B1mKM;;EACE,yBA5CsB;A1BypK9B;A0BvmKI;;EAGE,2CADQ;A1BymKd;A0B9lKM;;;;EAEE,uBA/DJ;A1BiqKJ;A0B9lKQ;;;;EAEE,yBAnEN;A1BqqKJ;A0B5lKM;;EACE,qBAhFiB;EAiFjB;A1B+lKR;A0B1lKQ;;;EACE,qBAtFuB;A1BorKjC;A0B3lKQ;;;EACE,qBAzFoB;A1BwrK9B;A0BzlKE;;EACE,sCAzFA;A1BqrKJ;A0BnlKE;;EACE;EAIA;A1BmlKJ;A0BzkKE;;EACE;A1B4kKJ;A2B5tKI;;;;;EAIE;A3B+tKN;A2B5tKI;;EACE;A3B+tKN;A2BztKI;EACE;;IACE;E3B4tKN;AACF;A2BztKI;;;;EAIE;A3B2tKN;A2BxtKI;;EAGE;EACA;A3BytKN;A2BttKI;;;;;;EAGE;EACA;A3B2tKN;A2BvtKM;;EACE;A3B0tKR;A2BvtKM;;;;;;EAGE;EACA;A3B4tKR;A2BvtKM;;EACE;A3B0tKR;A2BvtKM;;;;;;EAGE;EACA;A3B4tKR;A2BxtKI;;EACE;EACA;A3B2tKN;A2BxtKI;;EACE;A3B2tKN;A2BxtKI;;EACE;A3B2tKN;A2BvtKE;;;EACE;A3B2tKJ;A2BxtKE;;EACE;A3B2tKJ;A2BxtKE;;;;;;EAGE;A3B6tKJ;AwDh0KE;;EAYI;AxDwzKN;A4Bh0KE;;;;EAEE,kDAJc;A5Bw0KlB;A4Bh0KI;;;;EAEE,+CAVY;EAWZ;A5Bo0KN;A4Bh0KE;;;EACE;A5Bo0KJ;A4Bl0KI;;;EACE;A5Bs0KN;A4Bl0KE;;EACE;A5Bq0KJ;A4Bl0KE;;EACE;A5Bq0KJ;A4Bj0KE;;;;EAEE;EACA;A5Bq0KJ;A4BvxKM;;;;;;;;;;;;;EACE;A5BqyKR;A4BhzKE;;;EACE;A5BozKJ;A4BrzKE;;;;;EACE;A5B2zKJ;A4BlzKM;;;;;;;;;;;;;EACE;A5Bg0KR;A4B30KE;;;EACE;A5B+0KJ;A4Bh1KE;;;;;EACE;A5Bs1KJ;A4B70KM;;;;;;;;;;;;;EACE;A5B21KR;A4Bt2KE;;;EACE;A5B02KJ;A4B32KE;;;;;EACE;A5Bi3KJ;A4Bx2KM;;;;;;;;;;;;;EACE;A5Bs3KR;A4B32KE;;;;;;;EACE;A5Bm3KJ;A4B/2KE;;;;;EACE;A5Bq3KJ;A4Bn3KI;;;;;EACE;A5By3KN;A4Bp3KE;;;;;;;;;;;;;;;EAIE;A5Bi4KJ;A4B93KE;;;;;;;EAGE;EACA;A5Bo4KJ;A4B/3KE;;;;;;;;;;;EAIE;EACA;A5Bw4KJ;A4Bv7KM;;;;;;;;;;;;;EACE;A5Bq8KR;A4B17KE;;;;;;;EACE;A5Bk8KJ;A4B97KE;;;;;EACE;A5Bo8KJ;A4Bl8KI;;;;;EACE;A5Bw8KN;A4Bn8KE;;;;;;;;;;;;;;;EAIE;A5Bg9KJ;A4B78KE;;;;;;;EAGE;EACA;A5Bm9KJ;A4B98KE;;;;;;;;;;;EAIE;EACA;A5Bu9KJ;A4BtgLM;;;;;;;;;;;;;EACE;A5BohLR;A4BzgLE;;;;;;;EACE;A5BihLJ;A4B7gLE;;;;;EACE;A5BmhLJ;A4BjhLI;;;;;EACE;A5BuhLN;A4BlhLE;;;;;;;;;;;;;;;EAIE;A5B+hLJ;A4B5hLE;;;;;;;EAGE;EACA;A5BkiLJ;A4B7hLE;;;;;;;;;;;EAIE;EACA;A5BsiLJ;A6BhoLE;;EACE;EACA;A7BmoLJ;A6BjoLI;;EApCF;EACA;A7ByqLF;A6BloLI;;EAxCF;EACA;A7B8qLF;A6BnoLI;;EA5CF;EACA;A7BmrLF;A6B/qLE;;;;;;EAGE;A7BorLJ;A6BjrLE;;;;;;;;;;EAKE;A7BwrLJ;A6BrrLE;;EACE;A7BwrLJ;A8B5sLE;;EACE;A9B+sLJ;AmCttLE;;EACE;AnCytLJ;AmCttLE;;;;EAEE;AnC0tLJ;AkChuLE;;EAGE;EACA;EW6IF;A7CqlLF;AkC7tLE;;EACE;AlCguLJ,C;;;;A0DtvLA;AACA;0GAAA;AAGA;ACJA;;EAEE;AACF;EACE,2BAA2B;EAC3B,qBAAqB;EACrB,wBAAwB;EACxB,kBAAkB;EAClB,sBAAsB;AACxB;AAEA;;EAEE;AACF;EACE,aAAa;EACb,UAAU;EACV,2DAA2D;EAC3D,mEAAmE;EACnE,YAAY;EACZ,mDAAmD;EACnD,WAAW;EACX,mCAAmC;EACnC,kBAAkB;AACpB;AAEA;EACE,aAAa;EACb,UAAU;EACV,2DAA2D;EAC3D,mEAAmE;EACnE,WAAW;EACX,mDAAmD;EACnD,QAAQ;EACR,mCAAmC;EACnC,kBAAkB;AACpB;AAEA;;EAEE,cAAc;EACd,6BAA6B;AAC/B;AAEA;;;;;;EAME,YAAY;AACd;AAEA;;;;;;EAME,sBAAsB;EACtB,YAAY;AACd;AAEA;;EAEE;AACF;EACE,sBAAsB;EACtB,kBAAkB;EAClB,+DAA+D;EAC/D,uEAAuE;EACvE,WAAW;EACX,2CAA2C;EAC3C,WAAW;EACX,mCAAmC;EACnC,kBAAkB;AACpB;AAEA;EACE,sBAAsB;EACtB,kBAAkB;EAClB,8DAA8D;EAC9D,sEAAsE;EACtE,UAAU;EACV,0CAA0C;EAC1C,UAAU;EACV,mCAAmC;EACnC,kBAAkB;AACpB;AAEA;;;EAGE,sBAAsB;EACtB,YAAY;AACd;AAEA;;;EAGE,sBAAsB;EACtB,WAAW;AACb;AAEA,gBAAgB;AAChB;EACE;IACE,yBAAyB;EAC3B;AACF;AAEA;EACE;IACE,yBAAyB;EAC3B;AACF;AD5GA;AEPA;;;;;EAKE;AACF;EACE,sBAAsB;EACtB,yCAAyC;EACzC,eAAe;EACf,YAAY;EACZ,WAAW;EACX,kBAAkB;AACpB;AACA;EACE,kBAAkB;AACpB;AACA;EACE,oBAAoB;AACtB;AACA;EACE,eAAe;EACf,WAAW;EACX,kBAAkB;EAClB,kBAAkB;EAClB,QAAQ;AACV;AACA;EACE,SAAS;EACT,UAAU;AACZ;AACA;EACE,sBAAsB;EACtB,iBAAiB;EACjB,YAAY;EACZ,aAAa;EACb,gBAAgB;EAChB,kBAAkB;EAClB,WAAW;EACX,gBAAgB;EAChB,gBAAgB;EAChB,qBAAqB;EACrB,qBAAqB;AACvB;AACA;EACE,YAAY;AACd;AACA;;;;;;;;;;;EAWE,SAAS;EACT,UAAU;EACV,6EAA6E;AAC/E;AACA;;EAEE,mBAAmB;AACrB;AACA;;EAEE,qBAAqB;AACvB;AACA;EACE,gBAAgB;AAClB;AACA;;EAEE,oBAAoB;AACtB;AACA;;EAEE,mBAAmB;AACrB;AACA;;EAEE,WAAW;EACX,eAAe;EACf,mBAAmB;AACrB;AACA;EACE,gBAAgB;AAClB;AACA;EACE,gBAAgB;AAClB;AACA;EACE,qBAAqB;EACrB,mBAAmB;EACnB,YAAY;AACd;AACA;EACE,mBAAmB;EACnB,mBAAmB;EACnB,iBAAiB;AACnB;AACA;EACE,kBAAkB;EAClB,oBAAoB;AACtB;AACA;;EAEE,mBAAmB;AACrB;AACA;;EAEE,oBAAoB;AACtB;AACA;EACE,6EAA6E;EAC7E,yBAAyB;AAC3B;AACA;EACE,sCAAsC;AACxC;AACA;EACE,yBAAyB;AAC3B;AACA;EACE,0CAA0C;AAC5C;AACA;EACE,sEAAsE;AACxE;AACA;EACE,yBAAyB;AAC3B;AACA;EACE,0CAA0C;AAC5C;AACA;EACE,+DAA+D;AACjE;AACA;EACE,yBAAyB;AAC3B;AACA;EACE,sCAAsC;AACxC;AACA;EACE,wDAAwD;AAC1D;AACA;EACE,yBAAyB;AAC3B;AACA;EACE,0CAA0C;AAC5C;AACA;EACE,iDAAiD;AACnD;AACA;EACE,yBAAyB;AAC3B;AACA;EACE,0CAA0C;AAC5C;AACA;EACE,0CAA0C;AAC5C;AACA;EACE,yBAAyB;AAC3B;AACA;EACE,sCAAsC;AACxC;AACA;EACE,mCAAmC;AACrC;AACA;EACE,yBAAyB;AAC3B;AACA;EACE,0CAA0C;AAC5C;AACA;EACE,4BAA4B;AAC9B;AACA;EACE,yBAAyB;AAC3B;AACA;EACE,0CAA0C;AAC5C;AACA;EACE,qBAAqB;AACvB;AACA;EACE,yBAAyB;AAC3B;AACA;EACE,sCAAsC;AACxC;AACA;EACE,iBAAiB;AACnB;AACA;EACE,mBAAmB;AACrB;AACA;EACE,kBAAkB;AACpB;AACA;EACE,oBAAoB;AACtB;AACA;EACE,iBAAiB;AACnB;AACA;EACE,mBAAmB;AACrB;AACA;EACE,kBAAkB;AACpB;AACA;EACE,oBAAoB;AACtB;AACA;EACE,iBAAiB;AACnB;AACA;EACE,oBAAoB;AACtB;AACA;EACE,kBAAkB;AACpB;AACA;EACE,qBAAqB;AACvB;AACA;EACE,kBAAkB;AACpB;AACA;EACE,oBAAoB;AACtB;AACA;EACE,mBAAmB;AACrB;AACA;EACE,qBAAqB;AACvB;AACA;EACE,kBAAkB;AACpB;AACA;EACE,oBAAoB;AACtB;AACA;EACE,mBAAmB;AACrB;AACA;EACE,qBAAqB;AACvB;AACA;EACE,kBAAkB;AACpB;AACA;EACE,oBAAoB;AACtB;AACA;EACE,mBAAmB;AACrB;AACA;EACE,qBAAqB;AACvB;AACA;EACE,kBAAkB;AACpB;AACA;EACE,oBAAoB;AACtB;AACA;EACE,mBAAmB;AACrB;AACA;EACE,qBAAqB;AACvB;AACA;EACE,kBAAkB;AACpB;AACA;EACE,oBAAoB;AACtB;AACA;EACE,mBAAmB;AACrB;AACA;EACE,qBAAqB;AACvB;AACA;EACE,kBAAkB;AACpB;AACA;EACE,oBAAoB;AACtB;AACA;EACE,mBAAmB;AACrB;AACA;EACE,qBAAqB;AACvB;AACA;EACE,cAAc;EACd,eAAe;AACjB;AACA;EACE,cAAc;AAChB;AACA;EACE,kBAAkB;AACpB;AACA;EACE,sBAAsB;AACxB;AACA;EACE,yBAAyB;AAC3B;AACA;EACE,sBAAsB;AACxB;AACA;EACE,sBAAsB;AACxB;AACA;EACE,yBAAyB;AAC3B;AACA;EACE,sBAAsB;AACxB;AACA;EACE,sBAAsB;AACxB;AACA;EACE,WAAW;AACb;AACA;EACE,cAAc;AAChB;AACA;EACE,WAAW;AACb;AACA;EACE,WAAW;AACb;AACA;EACE,cAAc;AAChB;AACA;EACE,WAAW;AACb;AACA;EACE,WAAW;AACb;AACA;EACE,4CAA4C;AAC9C;AACA;EACE,2CAA2C;AAC7C;AACA;EACE,iBAAiB;AACnB;AACA;EACE,gBAAgB;AAClB;AACA;EACE,gBAAgB;AAClB;AACA;EACE,cAAc;EACd,mBAAmB;AACrB;AACA;EACE,kBAAkB;AACpB;AACA;EACE,mBAAmB;AACrB;AACA;EACE,iBAAiB;AACnB;AACA;EACE,sBAAsB;EACtB,+BAA+B;EAC/B,kBAAkB;EAClB,UAAU;EACV,oBAAoB;EACpB,kBAAkB;EAClB,WAAW;AACb;AACA;;EAEE,WAAW;EACX,WAAW;EACX,cAAc;AAChB;AACA;;EAEE,gBAAgB;EAChB,YAAY;EACZ,eAAe;EACf,qBAAqB;EACrB,WAAW;EACX,YAAY;EACZ,gBAAgB;EAChB,WAAW;AACb;AACA;;EAEE,WAAW;EACX,YAAY;AACd;AACA;;EAEE,aAAa;AACf;AACA;;EAEE,aAAa;AACf;AACA;;;;;;;;;;;;;;EAcE,WAAW;AACb;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA4BE,UAAU;AACZ;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA4BE,YAAY;AACd;AACA;EACE;;IAEE,WAAW;EACb;EACA;;;;IAIE,UAAU;EACZ;EACA;;;;IAIE,YAAY;EACd;AACF;AACA;EACE,sBAAsB;AACxB;AACA;EACE,sBAAsB;AACxB;AACA;EACE,aAAa;AACf;AACA;;EAEE,kBAAkB;AACpB;AACA;EACE,kBAAkB;EAClB,2BAA2B;AAC7B;AACA;EACE,eAAe;EACf,qBAAqB;AACvB;AACA;EACE,4BAA4B;AAC9B;AACA;EACE,qBAAqB;EACrB,sBAAsB;AACxB;AACA;EACE,WAAW;EACX,WAAW;EACX,cAAc;AAChB;AACA;EACE,UAAU;EACV,YAAY;EACZ,qBAAqB;EACrB,sBAAsB;EACtB,eAAe;AACjB;AACA;EACE,UAAU;EACV,YAAY;EACZ,qBAAqB;EACrB,eAAe;AACjB;AACA;;EAEE,UAAU;AACZ;AACA;EACE,UAAU;AACZ;AACA;EACE,kBAAkB;AACpB;AACA;;EAEE,eAAe;AACjB;AACA;EACE,YAAY;AACd;AACA;EACE,aAAa;AACf;AACA;EACE,eAAe;AACjB;AACA;EACE,aAAa;AACf;AACA;EACE,cAAc;AAChB;AACA;EACE,gBAAgB;AAClB;AACA;EACE,iBAAiB;AACnB;AACA;EACE,cAAc;AAChB;AACA;EACE,iBAAiB;AACnB;AACA;EACE,iBAAiB;AACnB;AACA;EACE,0BAA0B;AAC5B;AACA;EACE,2BAA2B;EAC3B,kBAAkB;EAClB,eAAe;EACf,kBAAkB;AACpB;AACA;;EAEE,yBAAyB;EACzB,kBAAkB;AACpB;AACA;EACE,qBAAqB;EACrB,kBAAkB;EAClB,eAAe;EACf,iBAAiB;AACnB;AACA;EACE,cAAc;EACd,gBAAgB;AAClB;AACA;EACE,yBAAyB;EACzB,cAAc;EACd,iBAAiB;AACnB;AACA;EACE,eAAe;AACjB;AACA;EACE,WAAW;EACX,qBAAqB;EACrB,WAAW;EACX,eAAe;EACf,gBAAgB;EAChB,YAAY;EACZ,kBAAkB;EAClB,sBAAsB;AACxB;AACA;EACE,eAAe;EACf,qBAAqB;EACrB,YAAY;EACZ,iBAAiB;EACjB,kBAAkB;EAClB,kBAAkB;EAClB,WAAW;AACb;AACA;EACE,qBAAqB;EACrB,iBAAiB;AACnB;AACA;EACE,sBAAsB;EACtB,aAAa;EACb,eAAe;EACf,gBAAgB;EAChB,kBAAkB;EAClB,mBAAmB;AACrB;AACA;EACE,eAAe;EACf,cAAc;EACd,mBAAmB;EACnB,gBAAgB;AAClB;AACA;EACE,WAAW;EACX,UAAU;AACZ;AACA;EACE,UAAU;AACZ;AACA;EACE,YAAY;AACd;AACA;EACE,cAAc;EACd,gBAAgB;EAChB,SAAS;EACT,UAAU;AACZ;AACA;;EAEE,WAAW;AACb;AACA;;EAEE,gBAAgB;AAClB;AACA;;EAEE,UAAU;AACZ;AACA;EACE,gBAAgB;AAClB;AACA;EACE,YAAY;EACZ,WAAW;EACX,gBAAgB;AAClB;AACA;EACE,gBAAgB;EAChB,YAAY;AACd;AACA;EACE,6BAA6B;EAC7B,WAAW;EACX,YAAY;EACZ,WAAW;EACX,YAAY;EACZ,WAAW;AACb;AACA;EACE,kBAAkB;EAClB,gBAAgB;EAChB,QAAQ;EACR,QAAQ;EACR,WAAW;AACb;AACA;;;;;;EAME,yBAAyB;AAC3B;AACA;EACE,WAAW;AACb;AACA;;EAEE,iBAAiB;AACnB;AACA;;EAEE,oBAAoB;AACtB;AACA;;EAEE,oBAAoB;AACtB;AACA;;EAEE,oBAAoB;AACtB;AACA;;EAEE,oBAAoB;AACtB;AACA;;EAEE,oBAAoB;AACtB;AACA;;EAEE,oBAAoB;AACtB;AACA;EACE,cAAc;AAChB;AACA;EACE,gBAAgB;AAClB;AACA;EACE,iBAAiB;AACnB;AACA;EACE,cAAc;AAChB;AACA;EACE,iBAAiB;AACnB;AACA;EACE,iBAAiB;AACnB;AACA;EACE,YAAY;AACd;AACA;;EAEE,qBAAqB;AACvB;AACA;;EAEE,gBAAgB;AAClB;AACA;;EAEE,oBAAoB;AACtB;AACA;EACE,4CAA4C;AAC9C;AACA;EACE,2CAA2C;AAC7C;AACA;EACE,WAAW;AACb;AACA;;EAEE,iBAAiB;AACnB;AACA;;EAEE,gBAAgB;AAClB;AACA;;EAEE,gBAAgB;AAClB;AACA;;EAEE,eAAe;AACjB;AACA;EACE,eAAe;AACjB;AACA;EACE,eAAe;AACjB;AACA;EACE,eAAe;AACjB;AACA;EACE,sBAAsB;AACxB;AACA;EACE,sBAAsB;AACxB;AACA;EACE,sBAAsB;EACtB,sBAAsB;EACtB,+DAA+D;EAC/D,YAAY;AACd;AACA;EACE,kBAAkB;AACpB;AACA;EACE,6BAA6B;AAC/B;AACA;EACE,6BAA6B;EAC7B,qCAAqC;AACvC;AACA;EACE,kBAAkB;AACpB;AACA;EACE,kBAAkB;AACpB;AACA;;EAEE,kBAAkB;AACpB;AACA;EACE,eAAe;AACjB;AACA;EACE,sBAAsB;EACtB,sBAAsB;EACtB,4BAA4B;EAC5B,WAAW;EACX,iBAAiB;EACjB,mBAAmB;AACrB;AACA;EACE,qBAAqB;EACrB,iBAAiB;EACjB,iBAAiB;AACnB;AACA;EACE,aAAa;EACb,sBAAsB;EACtB,eAAe;EACf,YAAY;EACZ,WAAW;EACX,gBAAgB;EAChB,YAAY;AACd;AACA;EACE,qBAAqB;EACrB,gBAAgB;EAChB,kBAAkB;EAClB,uBAAuB;EACvB,mBAAmB;AACrB;AACA;EACE,4BAA4B;EAC5B,eAAe;EACf,iBAAiB;EACjB,kBAAkB;AACpB;AACA;EACE,iBAAiB;EACjB,gBAAgB;AAClB;AACA;EACE,iBAAiB;AACnB;AACA;;EAEE,aAAa;AACf;AACA;EACE,qBAAqB;AACvB;AACA;EACE,iBAAiB;EACjB,eAAe;EACf,kBAAkB;AACpB;AACA;EACE,sBAAsB;AACxB;AACA;EACE,yBAAyB;AAC3B;AACA;EACE,uBAAuB;AACzB;AACA;EACE,WAAW;AACb;AACA;EACE,sBAAsB;AACxB,C;;;;ACh7BA,gBAAgB;AAAhB;ACAA;AACA;0GAAA;AAEA;EACI;EACA;EACA;EACA;E/DPJ;EAAA;EAAA;EAAA;EAAA;EAAA;A8DWA;ACDI;EACI;EACA;EACA;EACA;EACA;EACA;EACA;ADGR;ACDQ;EACI;ADGZ;ACAQ;EACI;EACA;ADEZ;ACAY;EACI;ADEhB;ACSgB;EACI;EACA;ADPpB;AElCA;;EAEI;EAEA;AFoCJ;A9DxCA;EAAA;EAAA;A8DgDA;A9DhDA;EAAA;EAAA;A8DoDA;A9DpDA;EAAA;EAAA;A8DwDA;A9DxDA;EAAA;EAAA;A8D4DA;A9D5DA;EAAA;EAAA;A8DgEA;A9DhEA;EAAA;EAAA;A8DoEA;A9DpEA;EAAA;EAAA;A8DwEA;A9DxEA;EAAA;EAAA;A8D4EA;A9D5EA;EAAA;EAAA;A8DgFA;A9DhFA;EAAA;EAAA;A8DoFA;A9DpFA;EAAA;EAAA;A8DwFA;A9DxFA;EAAA;EAAA;A8D4FA;A9D5FA;EAAA;EAAA;A8DgGA;A9DhGA;EAAA;EAAA;A8DoGA;A9DpGA;EAAA;EAAA;A8DwGA;A9DxGA;EAAA;EAAA;A8D4GA;AEvFI;;EACI;EACA;AFsCR;AEnCI;;EACI;EACA;AFsCR;AEnCI;;EACI;EACA;AFsCR;AEnCI;;EACI;EACA;AFsCR;AAxEA;AGJA;AACA;0GAAA;AAGA;AACA;0GAAA;AjELA;EAAA;EAAA;A8D2IA;A9D3IA;EAAA;IAAA;E8D+IE;AACF;AGrIA;AACA;0GAAA;AAGA;AACA;0GAAA;AAII;EACI;EACA;EACA;EjEvBR;EAAA;EAAA;A8DoGA;AG1EQ;EACI;AH4EZ;A9DvGA;EAAA;EAAA;EAAA;A8DsKA;AG7HoB;EAGI;AHiExB;AG3DQ;EACI;AH6DZ;AGzDgB;EACI;AH2DpB;AGvDY;EACI;EACA;EACA;EACA;EACA;EAEA;AHwDhB;AGvDgB;EACI;AHyDpB;AGpDQ;EACI;EjE3EZ;EAAA;A8DkIA;A9DlIA;EAAA;EAAA;A8DmMA;A9DnMA;EAAA;EAAA;A8DuMA;A9DvMA;EAAA;EAAA;A8D2MA;AG1HA;AACA;0GAAA;AAEA;;;;;;;EAOI;EACA;EACA;EACA;EACA;EACA;EACA;EAgBA;EAOA;AH+BJ;AGpDI;;;;;;;EACI;EACA;EACA;EACA;EACA;EACA;EAAY;AH6DpB;AG1DI;;;;;;;;;;;;;;EAEI;AHwER;AGpEI;;;;;;;EACI;EACA;EACA;AH4ER;AGtEQ;;;;;;;EACI;AH8EZ;AGzEA;EACI;AH4EJ;AGzEA;AACA;;;;EAII;EACA;AH4EJ;AGzEA;AACA;;;;;;;;EASI;AH2EJ;AGtEY;;;;;;;;EACI;EACA;AH+EhB;AGzEA;AACA;;;;EASI;EAKA;AHmEJ;AG5EI;;;;EACI;AHiFR;A9D7PA;EAAA;EAAA;A8DqUA;A9DrUA;EAAA;EAAA;A8DyUA;AGhJQ;;;;;;;;;;EACI;AHqFZ;AG7EQ;;;;;;;;;;EACI;AHwFZ;AGpFI;EAIQ;;;;IACI;EHsFd;AACF;AGhFQ;;;;EACI;AHqFZ;AGhFA;AACA;;;EAII;EAQA;EAQA;EAQA;EAKA;EAQA;EAQA;AH2CJ;A9DtTA;EAAA;EAAA;A8D+XA;A9D/XA;EAAA;EAAA;A8DmYA;A9DnYA;EAAA;EAAA;A8DuYA;A9DvYA;EAAA;EAAA;A8D2YA;A9D3YA;EAAA;EAAA;A8D+YA;A9D/YA;EAAA;EAAA;A8DmZA;A9DnZA;EAAA;EAAA;A8DuZA;A9DvZA;EAAA;EAAA;A8D2ZA;AGhIY;;;;;;;;;;;;;;;;;;;EACI;AHkFhB;AGzEQ;;;;;;;EACI;AHiFZ;AG7EI;EAIQ;;;IACI;EH8Ed;AACF;AGxEQ;;;EACI;AH4EZ;AGvEA;AACA;EAEI;AHyEJ;A9DxYA;EAAA;EAAA;A8D6cA;A9D7cA;EAAA;EAAA;A8DidA;A9DjdA;EAAA;EAAA;A8DqdA;A9DrdA;EAAA;EAAA;A8DydA;AGhJA;AACA;0GAAA;AAEA;EACI;AHyEJ;A9DtZA;EAAA;EAAA;EAAA;A8DoeA;AGlJQ;EACI;AHsEZ;AGlEI;EACI;EACA;EACA;EACA;AHoER;A9D/ZA;EAAA;EAAA;A8DifA;AG7IQ;EACI;EjErWZ;EAAA;A8DsaA;A9DtaA;EAAA;EAAA;A8D0fA;A9D1fA;EAAA;EAAA;A8D8fA;A9D9fA;EAAA;EAAA;A8DkgBA;AGzJQ;EACI;AH+DZ;AG1DA;AACA;0GAAA;AAEA;EACI;EAEA;AH4DJ;AG3DI;EACI;AH6DR;AG3DQ;EACI;EACA;EACA;EAEA;EACA;AH4DZ;AG3DY;EACI;AH6DhB;AGzDQ;EACI;AH2DZ;AGtDA;AACA;0GAAA;AAEA;EACI;AHyDJ;AGtDA;AACA;0GAAA;AAEA;EACI;AHyDJ;AGtDA;AACA;0GAAA;AAEA;EACI;AHyDJ;AGtDA;AACA;0GAAA;AAGA;AACA;AACA;EAEI;EAKA;EAYA;EAYA;EAYA;EAYA;EA2BA;EAQA;EAgRA;EAuBA;EAcA;EAqEA;EA0EA;EAqEA;AH7hBJ;AGnEI;EACI;AHqER;AG/DQ;EAEI;AHgEZ;A9DlfA;EAAA;EAAA;A8D6kBA;A9D7kBA;EAAA;EAAA;A8DilBA;AGrJQ;EAEI;AH0DZ;A9DxfA;EAAA;EAAA;A8DwlBA;A9DxlBA;EAAA;EAAA;A8D4lBA;AGpJQ;EAEI;AHoDZ;A9D9fA;EAAA;EAAA;A8DmmBA;A9DnmBA;EAAA;EAAA;A8DumBA;AGjJY;EACI;EACA;AH6ChB;AGnCY;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AHqChB;AGnCgB;EACI;AHqCpB;AGjCY;EACI;AHmChB;AG3BQ;EACI;AH6BZ;AGxBI;EACI;EACA;EA8OA;EAKA;AHvNR;AG1BQ;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EjE7gBZ;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;A8D0iBA;A9D1iBA;EAAA;EAAA;EAAA;EAAA;A8D4pBA;AG1IgB;EACI;AH0BpB;AGvBgB;EACI;AHyBpB;AGtBgB;EACI;AHwBpB;AGrBgB;EACI;AHuBpB;AGpBgB;EACI;AHsBpB;AGhBgB;EACI;AHkBpB;AGfgB;EACI;AHiBpB;AGdgB;EACI;AHgBpB;AGbgB;EACI;AHepB;AGXY;;EAEI;EACA;EACA;EjE9jBhB;EAAA;A8DglBA;A9DhlBA;EAAA;EAAA;A8DmsBA;A9DnsBA;EAAA;EAAA;A8DusBA;A9DvsBA;EAAA;EAAA;A8D2sBA;AGjJY;;EAoBI;EACA;EAeA;EAKA;AHnBhB;AGfgB;;EACI;EACA;EACA;EACA;AHkBpB;A9DvlBA;EAAA;EAAA;A8D6tBA;A9D7tBA;EAAA;EAAA;A8DiuBA;A9DjuBA;EAAA;EAAA;A8DquBA;A9DruBA;EAAA;EAAA;A8DyuBA;AGjJoB;;;;;;;;;;;;;;EACI;EjEzlBxB;EAAA;EAAA;EAAA;EAAA;EAAA;A8DgnBA;A9DhnBA;EAAA;EAAA;A8DmwBA;A9DnwBA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;A8D2wBA;A9D3wBA;EAAA;EAAA;A8D+wBA;AG3KgB;;EACI;EACA;AHmBpB;A9DznBA;EAAA;EAAA;A8DwxBA;AGtKgC;;EACI;AHcpC;AGRoB;;EACI;EACA;AHWxB;AGTwB;;EACI;EACA;AHY5B;AGRgC;;EACI;AHWpC;AGNwB;;EACI;EACA;EACA;EACA;AHS5B;AGP4B;;EACI;EjEhpBhC;EAAA;A8D2pBA;A9D3pBA;EAAA;EAAA;A8D2zBA;AGnKY;EACI;EACA;EACA;EACA;EACA;EACA;EAOA;EAWA;EAmCA;AH7ChB;AGNgB;EACI;EACA;AHQpB;AGJgB;EACI;EACA;EACA;EACA;EACA;EACA;EACA;AHMpB;AGFgB;EACI;AHIpB;AGFoB;EACI;EACA;EACA;AHIxB;AGFwB;EACI;EACA;EACA;AHI5B;AGF4B;EACI;AHIhC;AGFgC;EACI;EACA;EACA;AHIpC;AGEoB;EACI;AHAxB;AGEwB;EACI;AHA5B;AGMgB;EACI;EACA;AHJpB;AGMoB;EACI;AHJxB;AGQgB;EACI;EACA;EACA;EACA;EACA;AHNpB;AGQoB;EACI;EACA;EACA;EACA;UAAA;EACA;EACA;EjE1uBxB;EAAA;A8DquBA;AGaQ;EACI;AHXZ;AGeQ;EACI;EACA;EACA;EACA;EACA;EACA;EACA;AHbZ;AGeY;EACI;EAAmB;AHZnC;AGeY;;EAEI;EACA;AHbhB;A9D1vBA;EAAA;EAAA;A8Dg6BA;A9Dh6BA;EAAA;EAAA;A8Do6BA;A9Dp6BA;EAAA;EAAA;A8Dw6BA;A9Dx6BA;EAAA;EAAA;A8D46BA;AGrJgB;;EAEI;AHxBpB;AG2BgB;EACI;AHzBpB;AG4BgB;EACI;AH1BpB;AGmCQ;EACI;EACA;AHjCZ;AGmCY;EACI;EACA;AHjChB;AGuCI;EASI;AH7CR;AGwCY;EACI;AHtChB;AGiDoB;EACI;AH/CxB;AGiDwB;EACI;AH/C5B;AGkDwB;EACI;AHhD5B;AGmDwB;EACI;AHjD5B;AGoDwB;EACI;AHlD5B;AGqDwB;EACI;AHnD5B;AGuDoB;EACI;AHrDxB;AGuDwB;EACI;AHrD5B;AGwDwB;EACI;AHtD5B;AGyDwB;EACI;AHvD5B;AG0DwB;EACI;AHxD5B;AG2DwB;EACI;AHzD5B;AGkEI;EA2CI;AH1GR;AGmEY;EACI;AHjEhB;AGsEoB;;EACI;EACA;EACA;EACA;AHnExB;AGyEoB;EACI;EACA;AHvExB;AG6EoB;EACI;EACA;AH3ExB;AGiFoB;EACI;AH/ExB;AGsFQ;EASI;AH5FZ;AGuFgB;EACI;AHrFpB;AGgGwB;EACI;AH9F5B;AGiGwB;EACI;AH/F5B;AG8GgB;EACI;EACA;EACA;EACA;AH5GpB;AG8GoB;EACI;AH5GxB;AG+GoB;EACI;AH7GxB;AGgHoB;EACI;AH9GxB;AGiHoB;EACI;AH/GxB;AGkHoB;EACI;AHhHxB;AGoHgB;EACI;EACA;EACA;EACA;AHlHpB;AGoHoB;EACI;AHlHxB;AGqHoB;EACI;AHnHxB;AGsHoB;EACI;AHpHxB;AGuHoB;EACI;AHrHxB;AGwHoB;EACI;AHtHxB;A9Dv4BA;EAAA;EAAA;EAAA;EAAA;A8D4jCA;A9D5jCA;EAAA;EAAA;A8DgkCA;AGlDY;EACI;AHjIhB;AGuIA;AjErhCA;EAAA;EAAA;A8DwkCA;A9DxkCA;EAAA;EAAA;A8D4kCA;AGzCA;AACA;0GAAA;AAEA;AjEtiCA;EAAA;EAAA;A8DolCA;AGnCA;AACA;0GAAA;AAEA;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AHjJJ;AGoJA;AACA;0GAAA;AAII;EACI;EjEvkCR;EAAA;A8Dq7BA;A9Dr7BA;EAAA;EAAA;A8D+mCA;A9D/mCA;EAAA;EAAA;A8DmnCA;A9DnnCA;EAAA;EAAA;A8DunCA;AG5CI;EACI;EAAA;EjE5kCR;EAAA;A8Dy7BA;A9Dz7BA;EAAA;EAAA;A8DioCA;A9DjoCA;EAAA;EAAA;A8DqoCA;A9DroCA;EAAA;EAAA;A8DyoCA;AGzDI;EACI;EAAA;EjEjlCR;EAAA;A8D67BA;A9D77BA;EAAA;EAAA;A8DmpCA;A9DnpCA;EAAA;EAAA;A8DupCA;A9DvpCA;EAAA;EAAA;A8D2pCA;AGtEI;EACI;EAAA;EjEtlCR;EAAA;A8Di8BA;A9Dj8BA;EAAA;EAAA;A8DqqCA;A9DrqCA;EAAA;EAAA;A8DyqCA;A9DzqCA;EAAA;EAAA;A8D6qCA;AGlFA;AAGI;EAEI;AH1JR;A9Dt8BA;EAAA;EAAA;A8DqrCA;A9DrrCA;EAAA;EAAA;A8DyrCA;A9DzrCA;EAAA;EAAA;A8D6rCA;A9D7rCA;EAAA;EAAA;A8DisCA;AG9EA;AACA;0GAAA;AAEA;EACI;AH9JJ;AGgKI;EAeI;AH5KR;AG+JQ;EACI;EACA;AH7JZ;AG+JY;EACI;AH7JhB;AGgKY;EACI;AH9JhB;AGmKQ;EACI;AHjKZ;AGsKA;AACA;0GAAA;AAII;EACI;EACA;EAMA;EA6BA;AHtMR;AGqKQ;EAJJ;IAKQ;EHlKV;AACF;AGqKQ;EACI;EACA;EACA;AHnKZ;AGqKY;EACI;EACA;AHnKhB;AGqKgB;EAJJ;IAKQ;EHlKlB;AACF;AGqKY;EACI;AHnKhB;AGqKgB;EACI;AHnKpB;AGqKoB;EACI;EACA;AHnKxB;AG0KQ;EACI;AHxKZ;AG0KY;EACI;AHxKhB;AG8KA;AACA;0GAAA;AAEA;EACI;AH3KJ;AG6KI;EACI;EjE3sCR;EAAA;A8DiiCA;A9DjiCA;EAAA;EAAA;A8DkxCA;A9DlxCA;EAAA;EAAA;A8DsxCA;A9DtxCA;EAAA;EAAA;A8D0xCA;AG3EI;EACI;EACA;EACA;EACA;AH5KR;AG8KQ;EACI;EACA;EACA;AH5KZ;AG8KY;EACI;AH5KhB;AG8KgB;EACI;EACA;EACA;AH5KpB;AGkLI;EACI;AHhLR;AGkLQ;EACI;AHhLZ;AGqLA;AAGI;EAEI;AHrLR;A9D/jCA;EAAA;EAAA;A8D2zCA;AGhEA;AACA;0GAAA;AAEA;EACI;AHtLJ;AGyLA;EACI;AHtLJ;AGyLA;EACI;AHtLJ;AGyLA;AACA;0GAAA;AAEA;EAEI;AHvLJ;AGwLI;EACI;AHtLR;AG0LA;;EAEI;AHvLJ;AG0LA;AACA;0GAAA;AAEA;EAEI;AHxLJ;AG2LQ;EACI;EACA;EACA;EACA;EACA;AHzLZ;AG6LI;EACI;AH3LR;AG6LQ;EACI;AH3LZ;AGiMoB;EACI;EACA;EACA;EACA;EjEzzCxB;EAAA;A8D2nCA;A9D3nCA;EAAA;EAAA;A8Dm3CA;A9Dn3CA;EAAA;EAAA;A8Du3CA;A9Dv3CA;EAAA;EAAA;A8D23CA;A9D33CA;EAAA;EAAA;A8D+3CA;A9D/3CA;EAAA;EAAA;A8Dm4CA;A9Dn4CA;EAAA;EAAA;A8Du4CA;AGtEwB;EACI;AHhM5B;AGmMwB;EACI;AHjM5B;AGsMgB;EACI;AHpMpB;AG0MI;EACI;AHxMR;AG4MA;EACI;AHzMJ;AG4MA;AACA;0GAAA;AAEA;EACI;AHzMJ;AG4MA;AACA;0GAAA;AAEA;EAEI;EAwBA;EAwBA;AHxPJ;A9D/pCA;EAAA;EAAA;A8Dw6CA;A9Dx6CA;EAAA;EAAA;A8D46CA;A9D56CA;EAAA;EAAA;A8Dg7CA;A9Dh7CA;EAAA;EAAA;A8Do7CA;A9Dp7CA;EAAA;EAAA;A8Dw7CA;A9Dx7CA;EAAA;EAAA;A8D47CA;A9D57CA;EAAA;EAAA;A8Dg8CA;A9Dh8CA;EAAA;EAAA;A8Do8CA;A9Dp8CA;EAAA;EAAA;A8Dw8CA;A9Dx8CA;EAAA;EAAA;A8D48CA;A9D58CA;EAAA;EAAA;A8Dg9CA;A9Dh9CA;EAAA;EAAA;A8Do9CA;A9Dp9CA;EAAA;EAAA;A8Dw9CA;A9Dx9CA;EAAA;EAAA;A8D49CA;A9D59CA;EAAA;EAAA;A8Dg+CA;AIh+CA;AACA;0GAAA;AAKI;;;;EAEI;EACA;AJ8sCR;AI3sCI;;;;;;EAGI;AJgtCR;AI7sCI;;EACI;AJgtCR;AI7sCI;;EACI;AJgtCR;AI7sCI;;;;;;;;EAII;AJmtCR;AIhtCI;;EACI;AJmtCR;AIhtCI;;;;;;;;;;EAKI;AJutCR;AIptCI;;;;EAEI;AJwtCR;AIrtCI;;;;;;;;;;;;;;;;EAQI;AJ+tCR;AI5tCI;;;;;;;;;;;;EAMI;AJouCR;AIjuCI;;EACI;AJouCR;AIjuCI;;EACI;AJouCR;AIjuCI;;EACI;AJouCR;AKnzCA;AACA;0GAAA;AAEA;EACI;ALszCJ;AK/yCQ;;;;;EAEI;ALozCZ;AKhzCI;;EAEI;ALkzCR;AK/yCI;EACI;EACA;EACA;ALizCR;AK/yCQ;EAGI;AL+yCZ;AK7yCY;EACI;AL+yChB;AK3yCQ;EACI;EACA;EACA;EACA;AL6yCZ;AKzyCI;EACI;EACA;EACA;EACA;AL2yCR;AKzyCQ;EAGI;ALyyCZ;AKvyCY;EACI;ALyyChB;AKryCQ;EACI;EACA;EACA;EACA;ALuyCZ;AMx2CA;AACA;0GAAA;AAEA;EACI;EACA;EpELJ;EAAA;EAAA;EAAA;A8Dk3CA;AMz2CI;EACI;EpEVR;EAAA;A8Ds3CA;AMx2CI;EACI;AN02CR;A9Dz3CA;EAAA;EAAA;A8DipDA;A9DjpDA;EAAA;EAAA;A8DqpDA;AMvnDY;EACI;EpE/BhB;EAAA;EAAA;EAAA;A8Dm4CA;A9Dn4CA;EAAA;EAAA;A8DgqDA;A9DhqDA;EAAA;EAAA;A8DoqDA;A9DpqDA;EAAA;EAAA;A8DwqDA;AMpnDI;;EAEI;AN01CR;AMv1CI;EACI;ANy1CR;A9Dn5CA;EAAA;EAAA;A8DmrDA;AM7mDQ;;;;;;;;;;;;;;EAEI;ANo2CZ;AMj2CQ;;;;;;;EACI;ANy2CZ;AMp2CA;EACI;EACA;EpEnFJ;EAAA;EAAA;EAAA;EAAA;A8D27CA;A9D37CA;EAAA;EAAA;A8DytDA;AM/nDI;EACI;EACA;EACA;EpE7FR;EAAA;A8Do8CA;AMp2CQ;EACI;ANs2CZ;A9Dv8CA;EAAA;EAAA;A8DuuDA;A9DvuDA;EAAA;EAAA;A8D2uDA;A9D3uDA;EAAA;EAAA;A8D+uDA;A9D/uDA;EAAA;EAAA;A8DmvDA,C;;;;AOnvDA;AACA;;0GAAA,C;;;;ACDA;AACA;0GAAA;AAEA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;IAAA;IAAA;IAAA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;IAAA;IAAA;AsEGA;AAAA;ItEHA;IAAA;IAAA;AsEGA;AAAA;ItEHA;IAAA;IAAA;AsEGA;AAAA;ItEHA;IAAA;IAAA;AsEGA;AAAA;ItEHA;IAAA;IAAA;AsEGA;AAAA;ItEHA;IAAA;IAAA;AsEGA;AAAA;ItEHA;IAAA;IAAA;AsEGA;AAAA;ItEHA;IAAA;IAAA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;IAAA;IAAA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;YAAA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;IAAA;IAAA;AsEGA;AAAA;ItEHA;IAAA;IAAA;AsEGA;AAAA;ItEHA;IAAA;IAAA;AsEGA;AAAA;ItEHA;IAAA;IAAA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;IAAA;IAAA;AsEGA;AAAA;ItEHA;IAAA;IAAA;AsEGA;AAAA;ItEHA;IAAA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;IAAA;IAAA;IAAA;IAAA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;AsEGA;AAAA;ItEHA;IAAA;IAAA;IAAA;IAAA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;IAAA;IAAA;IAAA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;IAAA;IAAA;IAAA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;IAAA;IAAA;IAAA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;IAAA;IAAA;IAAA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAAA;ItEHA;IAAA;IAAA;IAAA;IAAA;IAAA;AsEGA;AAAA;ItEHA;IAAA;AsEGA;AAHA;ItEAA;YAAA;AsEk+BA;AAl+BA;ItEAA;AsEq+BA;AAr+BA;ItEAA;AsEw+BA;AAx+BA;ItEAA;IAAA;AsE4+BA;AA5+BA;ItEAA;IAAA;AsEg/BA;AAh/BA;ItEAA;IAAA;AsEo/BA;AAp/BA;ItEAA;IAAA;AsEw/BA;AAx/BA;ItEAA;IAAA;AsE4/BA;AA5/BA;ItEAA;IAAA;AsEggCA;AAhgCA;ItEAA;IAAA;AsEogCA;AApgCA;ItEAA;IAAA;AsEwgCA;AAxgCA;ItEAA;IAAA;AsE4gCA;AA5gCA;ItEAA;IAAA;AsEghCA;AAhhCA;ItEAA;IAAA;AsEohCA;AAphCA;ItEAA;IAAA;AsEwhCA;AAxhCA;ItEAA;IAAA;AsE4hCA;AA5hCA;ItEAA;IAAA;AsEgiCA;AAhiCA;ItEAA;AsEmiCA;AAniCA;ItEAA;IAAA;AsEuiCA;AAviCA;ItEAA;AsE0iCA;AA1iCA;ItEAA;AsE6iCA;AA7iCA;ItEAA;IAAA;AsEijCA;AAjjCA;ItEAA;IAAA;AsEqjCA;AArjCA;ItEAA;IAAA;AsEyjCA;AAzjCA;ItEAA;IAAA;AsE6jCA;AA7jCA;ItEAA;IAAA;AsEikCA;AAjkCA;ItEAA;IAAA;AsEqkCA;AArkCA;ItEAA;IAAA;AsEykCA;AAzkCA;ItEAA;IAAA;AsE6kCA;AA7kCA;ItEAA;IAAA;AsEilCA;AAjlCA;ItEAA;IAAA;AsEqlCA;AArlCA;ItEAA;IAAA;IAAA;AsE0lCA;AA1lCA;ItEAA;QAAA;IsE8lCI;AACJ;AA/lCA;ItEAA;QAAA;QAAA;IsEomCI;ItEpmCJ;QAAA;IsEumCI;ItEvmCJ;QAAA;IsE0mCI;ItE1mCJ;QAAA;IsE6mCI;ItE7mCJ;QAAA;IsEgnCI;ItEhnCJ;QAAA;IsEmnCI;ItEnnCJ;QAAA;IsEsnCI;ItEtnCJ;QAAA;IsEynCI;ItEznCJ;QAAA;IsE4nCI;ItE5nCJ;QAAA;IsE+nCI;ItE/nCJ;QAAA;IsEkoCI;ItEloCJ;QAAA;IsEqoCI;ItEroCJ;QAAA;IsEwoCI;ItExoCJ;QAAA;IsE2oCI;ItE3oCJ;QAAA;QAAA;QAAA;IsEgpCI;ItEhpCJ;QAAA;IsEmpCI;ItEnpCJ;QAAA;IsEspCI;ItEtpCJ;QAAA;IsEypCI;ItEzpCJ;QAAA;IsE4pCI;ItE5pCJ;QAAA;IsE+pCI;ItE/pCJ;QAAA;IsEkqCI;ItElqCJ;QAAA;IsEqqCI;ItErqCJ;QAAA;QAAA;IsEyqCI;ItEzqCJ;QAAA;QAAA;IsE6qCI;ItE7qCJ;QAAA;QAAA;IsEirCI;ItEjrCJ;QAAA;IsEorCI;ItEprCJ;QAAA;IsEurCI;ItEvrCJ;QAAA;IsE0rCI;ItE1rCJ;QAAA;IsE6rCI;ItE7rCJ;QAAA;IsEgsCI;ItEhsCJ;QAAA;IsEmsCI;ItEnsCJ;QAAA;QAAA;QAAA;IsEwsCI;AACJ;AAzsCA;ItEAA;QAAA;IsE6sCI;ItE7sCJ;QAAA;IsEgtCI;ItEhtCJ;QAAA;IsEmtCI;ItEntCJ;QAAA;IsEstCI;ItEttCJ;QAAA;IsEytCI;ItEztCJ;QAAA;IsE4tCI;ItE5tCJ;QAAA;IsE+tCI;ItE/tCJ;QAAA;IsEkuCI;ItEluCJ;QAAA;IsEquCI;ItEruCJ;QAAA;QAAA;IsEyuCI;ItEzuCJ;QAAA;IsE4uCI;ItE5uCJ;QAAA;QAAA;QAAA;IsEivCI;AACJ;AAlvCA;ItEAA;QAAA;IsEsvCI;ItEtvCJ;QAAA;IsEyvCI;ItEzvCJ;QAAA;IsE4vCI;ItE5vCJ;QAAA;IsE+vCI;ItE/vCJ;QAAA;QAAA;IsEmwCI;AACJ;AApwCA;ItEAA;QAAA;IsEwwCI;AACJ,C","sources":["./src/@fuse/styles/tailwind.scss","./src/@fuse/styles/%3Cinput%20css%20PEoOTS%3E","<no source>","./src/@fuse/styles/themes.scss","./node_modules/@angular/material/badge/_badge-theme.scss","./node_modules/@angular/material/core/typography/_typography.scss","./node_modules/@angular/material/core/typography/_typography-utils.scss","./node_modules/@angular/material/bottom-sheet/_bottom-sheet-theme.scss","./node_modules/@angular/material/button/_button-theme.scss","./node_modules/@angular/material/button-toggle/_button-toggle-theme.scss","./node_modules/@angular/material/card/_card-theme.scss","./node_modules/@angular/material/checkbox/_checkbox-theme.scss","./node_modules/@angular/material/chips/_chips-theme.scss","./node_modules/@angular/material/table/_table-theme.scss","./node_modules/@angular/material/datepicker/_datepicker-theme.scss","./node_modules/@angular/material/dialog/_dialog-theme.scss","./node_modules/@angular/material/expansion/_expansion-theme.scss","./node_modules/@angular/material/form-field/_form-field-theme.scss","./node_modules/@angular/material/form-field/_form-field-legacy-theme.scss","./node_modules/@angular/material/form-field/_form-field-fill-theme.scss","./node_modules/@angular/material/form-field/_form-field-outline-theme.scss","./node_modules/@angular/material/grid-list/_grid-list-theme.scss","./node_modules/@angular/material/core/style/_list-common.scss","./node_modules/@angular/material/input/_input-theme.scss","./node_modules/@angular/material/menu/_menu-theme.scss","./node_modules/@angular/material/paginator/_paginator-theme.scss","./node_modules/@angular/material/radio/_radio-theme.scss","./node_modules/@angular/material/select/_select-theme.scss","./node_modules/@angular/material/slide-toggle/_slide-toggle-theme.scss","./node_modules/@angular/material/slider/_slider-theme.scss","./node_modules/@angular/material/stepper/_stepper-theme.scss","./node_modules/@angular/material/tabs/_tabs-theme.scss","./node_modules/@angular/material/toolbar/_toolbar-theme.scss","./node_modules/@angular/material/tooltip/_tooltip-theme.scss","./node_modules/@angular/material/list/_list-theme.scss","./node_modules/@angular/material/core/option/_option-theme.scss","./node_modules/@angular/material/core/option/_optgroup-theme.scss","./node_modules/@angular/material/snack-bar/_snack-bar-theme.scss","./node_modules/@angular/material/tree/_tree-theme.scss","./node_modules/@angular/material/core/ripple/_ripple.scss","./node_modules/@angular/cdk/a11y/_index.scss","./node_modules/@angular/cdk/overlay/_index.scss","./node_modules/@angular/cdk/text-field/_index.scss","./node_modules/@angular/material/core/focus-indicators/_focus-indicators.scss","./node_modules/@angular/material/core/_core.scss","./node_modules/@angular/material/core/ripple/_ripple-theme.scss","./node_modules/@angular/material/core/selection/pseudo-checkbox/_pseudo-checkbox-theme.scss","./node_modules/@angular/material/core/_core-theme.scss","./node_modules/@angular/material/core/style/_elevation.scss","./node_modules/@angular/material/autocomplete/_autocomplete-theme.scss","./node_modules/@angular/material/divider/_divider-theme.scss","./node_modules/@angular/material/expansion/_expansion-mixins.scss","./node_modules/@angular/material/core/style/_form-common.scss","./node_modules/@angular/material/form-field/_form-field-standard-theme.scss","./node_modules/@angular/material/icon/_icon-theme.scss","./node_modules/@angular/material/core/style/_vendor-prefixes.scss","./node_modules/@angular/material/progress-bar/_progress-bar-theme.scss","./node_modules/@angular/material/progress-spinner/_progress-spinner-theme.scss","./node_modules/@angular/material/sidenav/_sidenav-theme.scss","./node_modules/@angular/material/sort/_sort-theme.scss","./node_modules/@angular/material/core/theming/_palette.scss","./src/styles/vendors.scss","./node_modules/perfect-scrollbar/css/perfect-scrollbar.css","./node_modules/quill/dist/quill.snow.css","./src/@fuse/styles/main.scss","./src/@fuse/styles/components/example-viewer.scss","./src/@fuse/styles/components/input.scss","./src/@fuse/styles/overrides/angular-material.scss","./src/@fuse/styles/overrides/highlightjs.scss","./src/@fuse/styles/overrides/perfect-scrollbar.scss","./src/@fuse/styles/overrides/quill.scss","./src/styles/styles.scss","./src/styles/tailwind.scss"],"sourcesContent":["/* This injects Tailwind's base styles and any base styles registered by plugins. */\n@tailwind base;\n\n/* This injects additional styles into Tailwind's base styles layer. */\n@layer base {\n\n    * {\n        /* Text rendering */\n        text-rendering: optimizeLegibility;\n        -o-text-rendering: optimizeLegibility;\n        -ms-text-rendering: optimizeLegibility;\n        -moz-text-rendering: optimizeLegibility;\n        -webkit-text-rendering: optimizeLegibility;\n        -webkit-tap-highlight-color: transparent;\n\n        /* Remove the focus ring */\n        &:focus {\n            outline: none !important;\n        }\n    }\n\n    /* HTML and Body default styles */\n    html,\n    body {\n        display: flex;\n        flex-direction: column;\n        flex: 1 1 auto;\n        width: 100%;\n        min-height: 100%;\n        -webkit-font-smoothing: auto;\n        -moz-osx-font-smoothing: auto;\n    }\n\n    /* Font size */\n    html {\n        font-size: 16px;\n    }\n\n    body {\n        font-size: 0.875rem;\n    }\n\n    /* Stylistic alternates for Inter */\n    body {\n        font-feature-settings: 'salt';\n    }\n\n    /* Better spacing and border for horizontal rule */\n    hr {\n        margin: 32px 0;\n        border-bottom-width: 1px;\n    }\n\n    /* Make images and videos to take up all the available space */\n    img {\n        width: 100%;\n        vertical-align: top;\n    }\n\n    /* Fix: Disabled placeholder color is too faded on Safari */\n    input[disabled] {\n        opacity: 1;\n        -webkit-text-fill-color: currentColor;\n    }\n\n    body, .dark, .light {\n        @apply text-default bg-default #{'!important'};\n    }\n\n    *, *::before, *::after {\n        --tw-border-opacity: 1 !important;\n        border-color: rgba(var(--fuse-border-rgb), var(--tw-border-opacity));\n\n        .dark & {\n            --tw-border-opacity: 0.12 !important;\n        }\n    }\n\n    [disabled] * {\n        @apply text-disabled #{'!important'};\n    }\n\n    /* Print styles */\n    @media print {\n\n        /* Make the base font size smaller for print so everything is scaled nicely */\n        html {\n            font-size: 12px !important;\n        }\n\n        body, .dark, .light {\n            background: none !important;\n        }\n    }\n}\n\n/* This injects Tailwind's component classes and any component classes registered by plugins. */\n@tailwind components;\n","/*\n1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)\n2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)\n*/\n\n*,\n::before,\n::after {\n  box-sizing: border-box; /* 1 */\n  border-width: 0; /* 2 */\n  border-style: solid; /* 2 */\n  border-color: theme('borderColor.DEFAULT', currentColor); /* 2 */\n}\n\n::before,\n::after {\n  --tw-content: '';\n}\n\n/*\n1. Use a consistent sensible line-height in all browsers.\n2. Prevent adjustments of font size after orientation changes in iOS.\n3. Use a more readable tab size.\n4. Use the user's configured `sans` font-family by default.\n*/\n\nhtml {\n  line-height: 1.5; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n  -moz-tab-size: 4; /* 3 */\n  tab-size: 4; /* 3 */\n  font-family: theme('fontFamily.sans', ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"); /* 4 */\n}\n\n/*\n1. Remove the margin in all browsers.\n2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.\n*/\n\nbody {\n  margin: 0; /* 1 */\n  line-height: inherit; /* 2 */\n}\n\n/*\n1. Add the correct height in Firefox.\n2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)\n3. Ensure horizontal rules are visible by default.\n*/\n\nhr {\n  height: 0; /* 1 */\n  color: inherit; /* 2 */\n  border-top-width: 1px; /* 3 */\n}\n\n/*\nAdd the correct text decoration in Chrome, Edge, and Safari.\n*/\n\nabbr:where([title]) {\n  text-decoration: underline dotted;\n}\n\n/*\nRemove the default font size and weight for headings.\n*/\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-size: inherit;\n  font-weight: inherit;\n}\n\n/*\nReset links to optimize for opt-in styling instead of opt-out.\n*/\n\na {\n  color: inherit;\n  text-decoration: inherit;\n}\n\n/*\nAdd the correct font weight in Edge and Safari.\n*/\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/*\n1. Use the user's configured `mono` font family by default.\n2. Correct the odd `em` font sizing in all browsers.\n*/\n\ncode,\nkbd,\nsamp,\npre {\n  font-family: theme('fontFamily.mono', ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace); /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/*\nAdd the correct font size in all browsers.\n*/\n\nsmall {\n  font-size: 80%;\n}\n\n/*\nPrevent `sub` and `sup` elements from affecting the line height in all browsers.\n*/\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/*\n1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)\n2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)\n3. Remove gaps between table borders by default.\n*/\n\ntable {\n  text-indent: 0; /* 1 */\n  border-color: inherit; /* 2 */\n  border-collapse: collapse; /* 3 */\n}\n\n/*\n1. Change the font styles in all browsers.\n2. Remove the margin in Firefox and Safari.\n3. Remove default padding in all browsers.\n*/\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: inherit; /* 1 */\n  color: inherit; /* 1 */\n  margin: 0; /* 2 */\n  padding: 0; /* 3 */\n}\n\n/*\nRemove the inheritance of text transform in Edge and Firefox.\n*/\n\nbutton,\nselect {\n  text-transform: none;\n}\n\n/*\n1. Correct the inability to style clickable types in iOS and Safari.\n2. Remove default button styles.\n*/\n\nbutton,\n[type='button'],\n[type='reset'],\n[type='submit'] {\n  -webkit-appearance: button; /* 1 */\n  background-color: transparent; /* 2 */\n  background-image: none; /* 2 */\n}\n\n/*\nUse the modern Firefox focus style for all focusable elements.\n*/\n\n:-moz-focusring {\n  outline: auto;\n}\n\n/*\nRemove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)\n*/\n\n:-moz-ui-invalid {\n  box-shadow: none;\n}\n\n/*\nAdd the correct vertical alignment in Chrome and Firefox.\n*/\n\nprogress {\n  vertical-align: baseline;\n}\n\n/*\nCorrect the cursor style of increment and decrement buttons in Safari.\n*/\n\n::-webkit-inner-spin-button,\n::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/*\n1. Correct the odd appearance in Chrome and Safari.\n2. Correct the outline style in Safari.\n*/\n\n[type='search'] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/*\nRemove the inner padding in Chrome and Safari on macOS.\n*/\n\n::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/*\n1. Correct the inability to style clickable types in iOS and Safari.\n2. Change font properties to `inherit` in Safari.\n*/\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/*\nAdd the correct display in Chrome and Safari.\n*/\n\nsummary {\n  display: list-item;\n}\n\n/*\nRemoves the default spacing and border for appropriate elements.\n*/\n\nblockquote,\ndl,\ndd,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\nhr,\nfigure,\np,\npre {\n  margin: 0;\n}\n\nfieldset {\n  margin: 0;\n  padding: 0;\n}\n\nlegend {\n  padding: 0;\n}\n\nol,\nul,\nmenu {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\n/*\nPrevent resizing textareas horizontally by default.\n*/\n\ntextarea {\n  resize: vertical;\n}\n\n/*\n1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)\n2. Set the default placeholder color to the user's configured gray 400 color.\n*/\n\ninput::placeholder,\ntextarea::placeholder {\n  opacity: 1; /* 1 */\n  color: theme('colors.gray.400', #9ca3af); /* 2 */\n}\n\n/*\nSet the default cursor for buttons.\n*/\n\nbutton,\n[role=\"button\"] {\n  cursor: pointer;\n}\n\n/*\nMake sure disabled buttons don't get the pointer cursor.\n*/\n:disabled {\n  cursor: default;\n}\n\n/*\n1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)\n2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)\n   This can trigger a poorly considered lint error in some tools but is included by design.\n*/\n\nimg,\nsvg,\nvideo,\ncanvas,\naudio,\niframe,\nembed,\nobject {\n  display: block; /* 1 */\n  vertical-align: middle; /* 2 */\n}\n\n/*\nConstrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)\n*/\n\nimg,\nvideo {\n  max-width: 100%;\n  height: auto;\n}\n\n/*\nEnsure the default browser behavior of the `hidden` attribute.\n*/\n\n[hidden] {\n  display: none;\n}\n",null,"@use '@angular/material' as mat;\n@use \"sass:map\";\n\n/* Include the core Angular Material styles */\n@include mat.core();\n\n/* Create a base theme without color.\n    This will globally set the density and typography for all future color themes. */\n@include mat.all-component-themes((\n    color: null,\n    density: -2,\n    typography: mat.define-typography-config(\n        $font-family: theme('fontFamily.sans'),\n        $title: mat.define-typography-level(1.25rem, 2rem, 600),\n        $body-2: mat.define-typography-level(0.875rem, 1.5rem, 600),\n        $button: mat.define-typography-level(0.875rem, 0.875rem, 500),\n        $input: mat.define-typography-level(0.875rem, 1.2857142857, 400) /* line-height: 20px */\n    )\n));\n\n/* Generate Primary, Accent and Warn palettes */\n$palettes: ();\n@each $name in (primary, accent, warn) {\n    $palettes: map.merge($palettes, (#{$name}: (\n        50: var(--fuse-#{$name}-50),\n        100: var(--fuse-#{$name}-100),\n        200: var(--fuse-#{$name}-200),\n        300: var(--fuse-#{$name}-300),\n        400: var(--fuse-#{$name}-400),\n        500: var(--fuse-#{$name}-500),\n        600: var(--fuse-#{$name}-600),\n        700: var(--fuse-#{$name}-700),\n        800: var(--fuse-#{$name}-800),\n        900: var(--fuse-#{$name}-900),\n        contrast: (\n            50: var(--fuse-on-#{$name}-50),\n            100: var(--fuse-on-#{$name}-100),\n            200: var(--fuse-on-#{$name}-200),\n            300: var(--fuse-on-#{$name}-300),\n            400: var(--fuse-on-#{$name}-400),\n            500: var(--fuse-on-#{$name}-500),\n            600: var(--fuse-on-#{$name}-600),\n            700: var(--fuse-on-#{$name}-700),\n            800: var(--fuse-on-#{$name}-800),\n            900: var(--fuse-on-#{$name}-900)\n        ),\n        default: var(--fuse-#{$name}),\n        lighter: var(--fuse-#{$name}-100),\n        darker: var(--fuse-#{$name}-700),\n        text: var(--fuse-#{$name}),\n        default-contrast: var(--fuse-on-#{$name}),\n        lighter-contrast: var(--fuse-on-#{$name}-100),\n        darker-contrast: var(--fuse-on-#{$name}-700)\n    )));\n}\n\n/* Generate Angular Material themes. Since we are using CSS Custom Properties,\n    we don't have to generate a separate Angular Material theme for each color\n    set. We can just create one light and one dark theme and then switch the\n    CSS Custom Properties to dynamically switch the colors. */\nbody.light,\nbody .light {\n    $base-light-theme: mat.define-light-theme((\n        color: ($palettes)\n    ));\n\n    $light-theme: (\n        color: (\n            primary: map.get(map.get($base-light-theme, color), primary),\n            accent: map.get(map.get($base-light-theme, color), accent),\n            warn: map.get(map.get($base-light-theme, color), warn),\n            is-dark: map.get(map.get($base-light-theme, color), is-dark),\n            foreground: (\n                base: #000000,\n                divider: #E2E8F0, /* slate.200 */\n                dividers: #E2E8F0, /* slate.200 */\n                disabled: #94A3B8, /* slate.400 */\n                disabled-button: #94A3B8, /* slate.400 */\n                disabled-text: #94A3B8, /* slate.400 */\n                elevation: #000000,\n                hint-text: #94A3B8, /* slate.400 */\n                secondary-text: #64748B, /* slate.500 */\n                icon: #64748B, /* slate.500 */\n                icons: #64748B, /* slate.500 */\n                mat-icon: #64748B, /* slate.500 */\n                text: #1E293B, /* slate.800 */\n                slider-min: #1E293B, /* slate.800 */\n                slider-off: #CBD5E1, /* slate.300 */\n                slider-off-active: #94A3B8 /* slate.400 */\n            ),\n            background: (\n                status-bar: #CBD5E1, /* slate.300 */\n                app-bar: #FFFFFF,\n                background: #F1F5F9, /* slate.100 */\n                hover: rgba(148, 163, 184, 0.12), /* slate.400 + opacity */\n                card: #FFFFFF,\n                dialog: #FFFFFF,\n                disabled-button: rgba(148, 163, 184, 0.38), /* slate.400 + opacity */\n                raised-button: #FFFFFF,\n                focused-button: #64748B, /* slate.500 */\n                selected-button: #E2E8F0, /* slate.200 */\n                selected-disabled-button: #E2E8F0, /* slate.200 */\n                disabled-button-toggle: #CBD5E1, /* slate.300 */\n                unselected-chip: #E2E8F0, /* slate.200 */\n                disabled-list-option: #CBD5E1, /* slate.300 */\n                tooltip: #1E293B /* slate.800 */\n            )\n        )\n    );\n\n    /* Use all-component-colors to only generate the colors */\n    @include mat.all-component-colors($light-theme);\n}\n\nbody.dark,\nbody .dark {\n    $base-dark-theme: mat.define-dark-theme((\n        color: ($palettes)\n    ));\n\n    $dark-theme: (\n        color: (\n            primary: map.get(map.get($base-dark-theme, color), primary),\n            accent: map.get(map.get($base-dark-theme, color), accent),\n            warn: map.get(map.get($base-dark-theme, color), warn),\n            is-dark: map.get(map.get($base-dark-theme, color), is-dark),\n            foreground: (\n                base: #FFFFFF,\n                divider: rgba(241, 245, 249, 0.12), /* slate.100 + opacity */\n                dividers: rgba(241, 245, 249, 0.12), /* slate.100 + opacity */\n                disabled: #475569, /* slate.600 */\n                disabled-button: #1E293B, /* slate.800 */\n                disabled-text: #475569, /* slate.600 */\n                elevation: #000000,\n                hint-text: #64748B, /* slate.500 */\n                secondary-text: #94A3B8, /* slate.400 */\n                icon: #F1F5F9, /* slate.100 */\n                icons: #F1F5F9, /* slate.100 */\n                mat-icon: #94A3B8, /* slate.400 */\n                text: #FFFFFF,\n                slider-min: #FFFFFF,\n                slider-off: #64748B, /* slate.500 */\n                slider-off-active: #94A3B8 /* slate.400 */\n            ),\n            background: (\n                status-bar: #0F172A, /* slate.900 */\n                app-bar: #0F172A, /* slate.900 */\n                background: #0F172A, /* slate.900 */\n                hover: rgba(255, 255, 255, 0.05),\n                card: #1E293B, /* slate.800 */\n                dialog: #1E293B, /* slate.800 */\n                disabled-button: rgba(15, 23, 42, 0.38), /* slate.900 + opacity */\n                raised-button: #0F172A, /* slate.900 */\n                focused-button: #E2E8F0, /* slate.200 */\n                selected-button: rgba(255, 255, 255, 0.05),\n                selected-disabled-button: #1E293B, /* slate.800 */\n                disabled-button-toggle: #0F172A, /* slate.900 */\n                unselected-chip: #475569, /* slate.600 */\n                disabled-list-option: #E2E8F0, /* slate.200 */\n                tooltip: #64748B /* slate.500 */\n            )\n        )\n    );\n\n    /* Use all-component-colors to only generate the colors */\n    @include mat.all-component-colors($dark-theme);\n}\n","// This contains all of the styles for the badge\n// rather than just the color/theme because of\n// no style sheet support for directives.\n@use 'sass:color';\n@use 'sass:map';\n@use 'sass:meta';\n@use 'sass:math';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../../cdk/a11y';\n\n$font-size: 12px;\n$font-weight: 600;\n$default-size: 22px !default;\n$small-size: $default-size - 6;\n$large-size: $default-size + 6;\n$_badge-structure-emitted: false !default;\n\n// Mixin for building offset given different sizes\n@mixin _badge-size($size) {\n  // This mixin isn't used in the context of a theme so we can disable the ampersand check.\n  // stylelint-disable material/no-ampersand-beyond-selector-start\n  .mat-badge-content {\n    width: $size;\n    height: $size;\n    line-height: $size;\n  }\n\n  &.mat-badge-above {\n    .mat-badge-content {\n      top: math.div(-$size, 2);\n    }\n  }\n\n  &.mat-badge-below {\n    .mat-badge-content {\n      bottom: math.div(-$size, 2);\n    }\n  }\n\n  &.mat-badge-before {\n    .mat-badge-content {\n      left: -$size;\n    }\n  }\n\n  [dir='rtl'] &.mat-badge-before {\n    .mat-badge-content {\n      left: auto;\n      right: -$size;\n    }\n  }\n\n  &.mat-badge-after {\n    .mat-badge-content {\n      right: -$size;\n    }\n  }\n\n  [dir='rtl'] &.mat-badge-after {\n    .mat-badge-content {\n      right: auto;\n      left: -$size;\n    }\n  }\n\n  &.mat-badge-overlap {\n    &.mat-badge-before {\n      .mat-badge-content {\n        left: math.div(-$size, 2);\n      }\n    }\n\n    [dir='rtl'] &.mat-badge-before {\n      .mat-badge-content {\n        left: auto;\n        right: math.div(-$size, 2);\n      }\n    }\n\n    &.mat-badge-after {\n      .mat-badge-content {\n        right: math.div(-$size, 2);\n      }\n    }\n\n    [dir='rtl'] &.mat-badge-after {\n      .mat-badge-content {\n        right: auto;\n        left: math.div(-$size, 2);\n      }\n    }\n  }\n  // stylelint-enable\n}\n\n// Structural styles for the badge. They have to be included as a part of the theme,\n// because the badge is a directive and we have no other way of attaching styles to it.\n@mixin _badge-structure {\n  .mat-badge {\n    position: relative;\n  }\n\n  .mat-badge-hidden {\n    .mat-badge-content {\n      display: none;\n    }\n  }\n\n  .mat-badge-content {\n    position: absolute;\n    text-align: center;\n    display: inline-block;\n    border-radius: 50%;\n    transition: transform 200ms ease-in-out;\n    transform: scale(0.6);\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    pointer-events: none;\n  }\n\n  .ng-animate-disabled .mat-badge-content,\n  .mat-badge-content._mat-animation-noopable {\n    transition: none;\n  }\n\n  // The active class is added after the element is added\n  // so it can animate scale to default\n  .mat-badge-content.mat-badge-active {\n    // Scale to `none` instead of `1` to avoid blurry text in some browsers.\n    transform: none;\n  }\n\n  .mat-badge-small {\n    @include _badge-size($small-size);\n  }\n\n  .mat-badge-medium {\n    @include _badge-size($default-size);\n  }\n\n  .mat-badge-large {\n    @include _badge-size($large-size);\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $primary: map.get($config, primary);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-badge-content {\n    color: theming.get-color-from-palette($primary, default-contrast);\n    background: theming.get-color-from-palette($primary);\n\n    @include a11y.high-contrast(active, off) {\n      outline: solid 1px;\n      border-radius: 0;\n    }\n  }\n\n  .mat-badge-accent {\n    .mat-badge-content {\n      background: theming.get-color-from-palette($accent);\n      color: theming.get-color-from-palette($accent, default-contrast);\n    }\n  }\n\n  .mat-badge-warn {\n    .mat-badge-content {\n      color: theming.get-color-from-palette($warn, default-contrast);\n      background: theming.get-color-from-palette($warn);\n    }\n  }\n\n  .mat-badge-disabled {\n    .mat-badge-content {\n      $app-background: theming.get-color-from-palette($background, 'background');\n      $badge-color: theming.get-color-from-palette($foreground, disabled-button);\n\n      // The disabled color usually has some kind of opacity, but because the badge is overlayed\n      // on top of something else, it won't look good if it's opaque. If it is a color *type*,\n      // we convert it into a solid color by taking the opacity from the rgba value and using\n      // the value to determine the percentage of the background to put into foreground when\n      // mixing the colors together.\n      @if (meta.type-of($badge-color) == color and meta.type-of($app-background) == color) {\n        $badge-opacity: opacity($badge-color);\n        background: color.mix($app-background, rgba($badge-color, 1), (1 - $badge-opacity) * 100%);\n      }\n      @else {\n        background: $badge-color;\n      }\n\n      color: theming.get-color-from-palette($foreground, disabled-text);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-badge-content {\n    font-weight: $font-weight;\n    font-size: $font-size;\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-badge-small .mat-badge-content {\n    // Set the font size to 75% of the original.\n    font-size: $font-size * 0.75;\n  }\n\n  .mat-badge-large .mat-badge-content {\n    font-size: $font-size * 2;\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-badge') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    // Try to reduce the number of times that the structural styles are emitted.\n    @if not $_badge-structure-emitted {\n      @include _badge-structure;\n\n      // Only flip the flag if the mixin is included at the top level. Otherwise the first\n      // inclusion might be inside of a theme class which will exclude the structural styles\n      // from all other themes.\n      @if not & {\n        $_badge-structure-emitted: true !global;\n      }\n    }\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'typography-utils';\n@use '../theming/theming';\n\n/// Defines a typography level from the Material Design spec.\n/// @param {String} $font-size The font-size for this level.\n/// @param {String | Number} $line-height The line-height for this level.\n/// @param {String | Number} $font-weight The font-weight for this level.\n/// @param {String} $font-family The font-family for this level.\n/// @param {String} $letter-spacing The letter-spacing for this level.\n/// @returns {Map} A map representing the definition of this typpographic level.\n@function define-typography-level(\n  $font-size,\n  $line-height: $font-size,\n  $font-weight: 400,\n  $font-family: null,\n  $letter-spacing: normal) {\n\n  @return (\n    font-size: $font-size,\n    line-height: $line-height,\n    font-weight: $font-weight,\n    font-family: $font-family,\n    letter-spacing: $letter-spacing\n  );\n}\n\n/// Defines a collection of typography levels to configure typography for an application.\n/// Any level not specified defaults to the values defined in the Material Design specification:\n/// https://material.io/guidelines/style/typography.html.\n///\n/// Note that the Material Design specification does not describe explicit letter-spacing values.\n/// The values here come from reverse engineering the Material Design examples.\n/// @param {String} $font-family Default font-family for levels that don't specify font-family.\n/// @param {Map} $display-4 Configuration for the \"display-4\" typographic level.\n/// @param {Map} $display-3 Configuration for the \"display-3\" typographic level.\n/// @param {Map} $display-2 Configuration for the \"display-2\" typographic level.\n/// @param {Map} $display-1 Configuration for the \"display-1\" typographic level.\n/// @param {Map} $headline Configuration for the \"headline\" typographic level.\n/// @param {Map} $title Configuration for the \"title\" typographic level.\n/// @param {Map} $subheading-2 Configuration for the \"subheading-2\" typographic level.\n/// @param {Map} $subheading-1 Configuration for the \"subheading-1\" typographic level.\n/// @param {Map} $body-2 Configuration for the \"body-2\" typographic level.\n/// @param {Map} $body-1 Configuration for the \"body-1\" typographic level.\n/// @param {Map} $caption Configuration for the \"caption\" typographic level.\n/// @param {Map} $button Configuration for the \"button\" typographic level.\n/// @param {Map} $input Configuration for the \"input\" typographic level.\n/// @returns {Map} A typography config for the application.\n@function define-typography-config(\n  $font-family:   'Roboto, \"Helvetica Neue\", sans-serif',\n  $display-4:     define-typography-level(112px, 112px, 300, $letter-spacing: -0.05em),\n  $display-3:     define-typography-level(56px, 56px, 400, $letter-spacing: -0.02em),\n  $display-2:     define-typography-level(45px, 48px, 400, $letter-spacing: -0.005em),\n  $display-1:     define-typography-level(34px, 40px, 400),\n  $headline:      define-typography-level(24px, 32px, 400),\n  $title:         define-typography-level(20px, 32px, 500),\n  $subheading-2:  define-typography-level(16px, 28px, 400),\n  $subheading-1:  define-typography-level(15px, 24px, 400),\n  $body-2:        define-typography-level(14px, 24px, 500),\n  $body-1:        define-typography-level(14px, 20px, 400),\n  $caption:       define-typography-level(12px, 20px, 400),\n  $button:        define-typography-level(14px, 14px, 500),\n  // Line-height must be unit-less fraction of the font-size.\n  $input:         define-typography-level(inherit, 1.125, 400)\n) {\n\n  // Declare an initial map with all of the levels.\n  $config: (\n    display-4:      $display-4,\n    display-3:      $display-3,\n    display-2:      $display-2,\n    display-1:      $display-1,\n    headline:       $headline,\n    title:          $title,\n    subheading-2:   $subheading-2,\n    subheading-1:   $subheading-1,\n    body-2:         $body-2,\n    body-1:         $body-1,\n    caption:        $caption,\n    button:         $button,\n    input:          $input,\n  );\n\n  // Loop through the levels and set the `font-family` of the ones that don't have one to the base.\n  // Note that Sass can't modify maps in place, which means that we need to merge and re-assign.\n  @each $key, $level in $config {\n    @if map.get($level, font-family) == null {\n      $new-level: map.merge($level, (font-family: $font-family));\n      $config: map.merge($config, ($key: $new-level));\n    }\n  }\n\n  // Add the base font family to the config.\n  @return map.merge($config, (font-family: $font-family));\n}\n\n// Whether a config is for the Material Design 2018 typography system.\n@function private-typography-is-2018-config($config) {\n  @return map.get($config, headline-1) != null;\n}\n\n// Whether a config is for the Material Design 2014 typography system.\n@function private-typography-is-2014-config($config) {\n  @return map.get($config, headline) != null;\n}\n\n// Given a config for either the 2014 or 2018 Material Design typography system,\n// produces a normalized typography config for the 2014 Material Design typography system.\n// 2014 - https://material.io/archive/guidelines/style/typography.html#typography-styles\n// 2018 - https://material.io/design/typography/the-type-system.html#type-scale\n//\n// Components using this function should be migrated to normalize to the 2018 style config instead.\n// New components should not use this function.\n@function private-typography-to-2014-config($config) {\n  @if $config == null {\n    @return null;\n  }\n  @if not private-typography-is-2014-config($config) {\n    $args: (\n        display-4: map.get($config, headline-1),\n        display-3: map.get($config, headline-2),\n        display-2: map.get($config, headline-3),\n        display-1: map.get($config, headline-4),\n        headline: map.get($config, headline-5),\n        title: map.get($config, headline-6),\n        subheading-2: map.get($config, subtitle-1),\n        subheading-1: map.get($config, subtitle-2),\n        body-2: map.get($config, body-1),\n        body-1: map.get($config, body-2),\n        button: map.get($config, button),\n        caption: map.get($config, caption),\n    );\n    $non-null-args: ();\n    @each $key, $value in $args {\n      @if $value != null {\n        $non-null-args: map.merge($non-null-args, ($key: $value));\n      }\n    }\n    @return define-typography-config($non-null-args...);\n  }\n  @return $config;\n}\n\n// Given a config for either the 2014 or 2018 Material Design typography system,\n// produces a normalized typography config for the 2018 Material Design typography system.\n// 2014 - https://material.io/archive/guidelines/style/typography.html#typography-styles\n// 2018 - https://material.io/design/typography/the-type-system.html#type-scale\n@function private-typography-to-2018-config($config) {\n  @if $config == null {\n    @return null;\n  }\n  @if not private-typography-is-2018-config($config) {\n    @return (\n        headline-1: map.get($config, display-4),\n        headline-2: map.get($config, display-3),\n        headline-3: map.get($config, display-2),\n        headline-4: map.get($config, display-1),\n        headline-5: map.get($config, headline),\n        headline-6: map.get($config, title),\n        subtitle-1: map.get($config, subheading-2),\n\n        // These mappings are odd, but body-2 in the 2014 system actually looks closer to subtitle-2\n        // in the 2018 system, and subeading-1 in the 2014 system looks more like body-1 in the 2018\n        // system.\n        subtitle-2: map.get($config, body-2),\n        body-1: map.get($config, subheading-1),\n\n        body-2: map.get($config, body-1),\n        button: map.get($config, button),\n        caption: map.get($config, caption),\n        overline: if(map.get($config, overline), map.get($config, overline),\n            define-typography-level(12px, 32px, 500)\n        )\n    );\n  }\n  @return $config;\n}\n\n/// Emits baseline typographic styles based on a given config.\n/// @param {Map} $config-or-theme A typography config for an entire theme.\n/// @param {String} $selector Ancestor selector under which native elements, such as h1, will\n///     be styled.\n@mixin typography-hierarchy($config-or-theme, $selector: '.mat-typography') {\n  $config: private-typography-to-2014-config(theming.get-typography-config($config-or-theme));\n\n  .mat-h1, .mat-headline, #{$selector} h1 {\n    @include typography-utils.typography-level($config, headline);\n    margin: 0 0 16px;\n  }\n\n  .mat-h2, .mat-title, #{$selector} h2 {\n    @include typography-utils.typography-level($config, title);\n    margin: 0 0 16px;\n  }\n\n  .mat-h3, .mat-subheading-2, #{$selector} h3 {\n    @include typography-utils.typography-level($config, subheading-2);\n    margin: 0 0 16px;\n  }\n\n  .mat-h4, .mat-subheading-1, #{$selector} h4 {\n    @include typography-utils.typography-level($config, subheading-1);\n    margin: 0 0 16px;\n  }\n\n  // Note: the spec doesn't have anything that would correspond to h5 and h6, but we add these for\n  // consistency. The font sizes come from the Chrome user agent styles which have h5 at 0.83em\n  // and h6 at 0.67em.\n  .mat-h5, #{$selector} h5 {\n    @include typography-utils.font-shorthand(\n       // calc is used here to support css variables\n      calc(#{typography-utils.font-size($config, body-1)} * 0.83),\n      typography-utils.font-weight($config, body-1),\n      typography-utils.line-height($config, body-1),\n      typography-utils.font-family($config, body-1)\n    );\n\n    margin: 0 0 12px;\n  }\n\n  .mat-h6, #{$selector} h6 {\n    @include typography-utils.font-shorthand(\n       // calc is used here to support css variables\n      calc(#{typography-utils.font-size($config, body-1)} * 0.67),\n      typography-utils.font-weight($config, body-1),\n      typography-utils.line-height($config, body-1),\n      typography-utils.font-family($config, body-1)\n    );\n\n    margin: 0 0 12px;\n  }\n\n  .mat-body-strong, .mat-body-2 {\n    @include typography-utils.typography-level($config, body-2);\n  }\n\n  .mat-body, .mat-body-1, #{$selector} {\n    @include typography-utils.typography-level($config, body-1);\n\n    p {\n      margin: 0 0 12px;\n    }\n  }\n\n  .mat-small, .mat-caption {\n    @include typography-utils.typography-level($config, caption);\n  }\n\n  .mat-display-4, #{$selector} .mat-display-4 {\n    @include typography-utils.typography-level($config, display-4);\n    margin: 0 0 56px;\n  }\n\n  .mat-display-3, #{$selector} .mat-display-3 {\n    @include typography-utils.typography-level($config, display-3);\n    margin: 0 0 64px;\n  }\n\n  .mat-display-2, #{$selector} .mat-display-2 {\n    @include typography-utils.typography-level($config, display-2);\n    margin: 0 0 64px;\n  }\n\n  .mat-display-1, #{$selector} .mat-display-1 {\n    @include typography-utils.typography-level($config, display-1);\n    margin: 0 0 64px;\n  }\n}\n","@use 'sass:list';\n@use 'sass:map';\n@use 'sass:math';\n@use 'sass:meta';\n@use 'sass:string';\n\n\n// Utility for fetching a nested value from a typography config.\n@function _mat-get-type-value($config, $level, $name) {\n  @return map.get(map.get($config, $level), $name);\n}\n\n/// Gets the font size for a level inside a typography config.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function font-size($config, $level) {\n  @return _mat-get-type-value($config, $level, font-size);\n}\n\n/// Gets the line height for a level inside a typography config.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function line-height($config, $level) {\n  @return _mat-get-type-value($config, $level, line-height);\n}\n\n/// Gets the font weight for a level inside a typography config.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function font-weight($config, $level) {\n  @return _mat-get-type-value($config, $level, font-weight);\n}\n\n/// Gets the letter spacing for a level inside a typography config.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function letter-spacing($config, $level) {\n  @return _mat-get-type-value($config, $level, letter-spacing);\n}\n\n/// Gets the font-family from a typography config and removes the quotes around it.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function font-family($config, $level: null) {\n  $font-family: map.get($config, font-family);\n\n  @if $level != null {\n    $font-family: _mat-get-type-value($config, $level, font-family);\n  }\n\n  // Guard against unquoting non-string values, because it's deprecated.\n  @return if(meta.type-of($font-family) == string, string.unquote($font-family), $font-family);\n}\n\n/// Outputs the shorthand `font` CSS property, based on a set of typography values. Falls back to\n/// the individual properties if a value that isn't allowed in the shorthand is passed in.\n/// @param {String} $font-size The font-size value.\n/// @param {String | Number} $font-weight The font-weight value.\n/// @param {String | Number} $line-height The line-height value.\n/// @param {String} $font-family The font-family value.\n/// @returns {String} The `font` shorthand value combining the given parts.\n@mixin font-shorthand($font-size, $font-weight, $line-height, $font-family) {\n  // If any of the values are set to `inherit`, we can't use the shorthand\n  // so we fall back to passing in the individual properties.\n  @if ($font-size == inherit or\n       $font-weight == inherit or\n       $line-height == inherit or\n       $font-family == inherit or\n       $font-size == null or\n       $font-weight == null or\n       $line-height == null or\n       $font-family == null) {\n\n    font-size: $font-size;\n    font-weight: $font-weight;\n    line-height: $line-height;\n    font-family: $font-family;\n  }\n  @else {\n    // Otherwise use the shorthand `font`, because it's the least amount of bytes.\n    font: $font-weight list.slash($font-size, $line-height) $font-family;\n  }\n}\n\n/// Emits CSS styles for the given typography level.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@mixin typography-level($config, $level) {\n  $font-size: font-size($config, $level);\n  $font-weight: font-weight($config, $level);\n  $line-height: line-height($config, $level);\n  $font-family: font-family($config, $level);\n\n  @include font-shorthand($font-size, $font-weight, $line-height, $font-family);\n  letter-spacing: letter-spacing($config, $level);\n}\n\n/// Coerce a value to `em` if it is a unitless number, otherwise returns\n/// the value provided.\n@function private-coerce-unitless-to-em($value) {\n  @return if(math.is-unitless($value), 1em * $value, $value);\n}\n","@use 'sass:map';\n@use '../core/style/private';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-bottom-sheet-container {\n    @include private.private-theme-elevation(16, $config);\n    background: theming.get-color-from-palette($background, dialog);\n    color: theming.get-color-from-palette($foreground, text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-bottom-sheet-container {\n    @include typography-utils.typography-level($config, body-1);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-bottom-sheet') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '../core/theming/theming';\n@use '../core/style/private';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n$_ripple-opacity: 0.1;\n\n// Applies a focus style to an mat-button element for each of the supported palettes.\n@mixin _focus-overlay-color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n\n  &.mat-primary .mat-button-focus-overlay {\n    background-color: theming.get-color-from-palette($primary);\n  }\n\n  &.mat-accent .mat-button-focus-overlay {\n    background-color: theming.get-color-from-palette($accent);\n  }\n\n  &.mat-warn .mat-button-focus-overlay {\n    background-color: theming.get-color-from-palette($warn);\n  }\n\n  &.mat-button-disabled .mat-button-focus-overlay {\n    background-color: transparent;\n  }\n}\n\n// Applies the background color for a ripple. If the value provided is not a Sass color,\n// we assume that we've been given a CSS variable. Since we can't perform alpha-blending\n// on a CSS variable, we instead add the opacity directly to the ripple element.\n@mixin _ripple-background($palette, $hue, $opacity) {\n  $background-color: theming.get-color-from-palette($palette, $hue, $opacity);\n  background-color: $background-color;\n  @if (meta.type-of($background-color) != color) {\n    opacity: $opacity;\n  }\n}\n\n@mixin _ripple-color($theme, $hue, $opacity: $_ripple-opacity) {\n  $primary: map.get($theme, primary);\n  $accent: map.get($theme, accent);\n  $warn: map.get($theme, warn);\n\n  &.mat-primary .mat-ripple-element {\n    @include _ripple-background($primary, $hue, $opacity);\n  }\n\n  &.mat-accent .mat-ripple-element {\n    @include _ripple-background($accent, $hue, $opacity);\n  }\n\n  &.mat-warn .mat-ripple-element {\n    @include _ripple-background($warn, $hue, $opacity);\n  }\n}\n\n// Applies a property to an mat-button element for each of the supported palettes.\n@mixin _theme-property($theme, $property, $hue) {\n  $primary: map.get($theme, primary);\n  $accent: map.get($theme, accent);\n  $warn: map.get($theme, warn);\n  $background: map.get($theme, background);\n  $foreground: map.get($theme, foreground);\n\n  &.mat-primary {\n    #{$property}: theming.get-color-from-palette($primary, $hue);\n  }\n  &.mat-accent {\n    #{$property}: theming.get-color-from-palette($accent, $hue);\n  }\n  &.mat-warn {\n    #{$property}: theming.get-color-from-palette($warn, $hue);\n  }\n\n  &.mat-primary, &.mat-accent, &.mat-warn, &.mat-button-disabled {\n    &.mat-button-disabled {\n      $palette: if($property == 'color', $foreground, $background);\n      #{$property}: theming.get-color-from-palette($palette, disabled-button);\n    }\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-button, .mat-icon-button, .mat-stroked-button {\n    // Buttons without a background color should inherit the font color. This is necessary to\n    // ensure that the button is readable on custom background colors. It's wrong to always assume\n    // that those buttons are always placed inside of containers with the default background\n    // color of the theme (e.g. themed toolbars).\n    color: inherit;\n    background: transparent;\n\n    @include _theme-property($config, 'color', text);\n    @include _focus-overlay-color($config);\n\n    // Setup the ripple color to be based on the text color. This ensures that the ripples\n    // are matching with the current theme palette and are in contrast to the background color\n    // (e.g in themed toolbars).\n    .mat-ripple-element {\n      opacity: $_ripple-opacity;\n      background-color: currentColor;\n    }\n  }\n\n  .mat-button-focus-overlay {\n    background: map.get($foreground, base);\n  }\n\n  // Note: this needs a bit extra specificity, because we're not guaranteed the inclusion\n  // order of the theme styles and the button reset may end up resetting this as well.\n  .mat-stroked-button:not(.mat-button-disabled) {\n    border-color: theming.get-color-from-palette($foreground, divider);\n  }\n\n  .mat-flat-button, .mat-raised-button, .mat-fab, .mat-mini-fab {\n    // Default font and background color when not using any color palette.\n    color: theming.get-color-from-palette($foreground, text);\n    background-color: theming.get-color-from-palette($background, raised-button);\n\n    @include _theme-property($config, 'color', default-contrast);\n    @include _theme-property($config, 'background-color', default);\n    @include _ripple-color($config, default-contrast);\n  }\n\n  .mat-stroked-button, .mat-flat-button {\n    @include private.private-theme-overridable-elevation(0, $config);\n  }\n\n  .mat-raised-button {\n    @include private.private-theme-overridable-elevation(2, $config);\n\n    &:not(.mat-button-disabled):active {\n      @include private.private-theme-overridable-elevation(8, $config);\n    }\n\n    &.mat-button-disabled {\n      @include private.private-theme-overridable-elevation(0, $config);\n    }\n  }\n\n  .mat-fab, .mat-mini-fab {\n    @include private.private-theme-overridable-elevation(6, $config);\n\n    &:not(.mat-button-disabled):active {\n      @include private.private-theme-overridable-elevation(12, $config);\n    }\n\n    &.mat-button-disabled {\n      @include private.private-theme-overridable-elevation(0, $config);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-button, .mat-raised-button, .mat-icon-button, .mat-stroked-button,\n  .mat-flat-button, .mat-fab, .mat-mini-fab {\n    font: {\n      family: typography-utils.font-family($config, button);\n      size: typography-utils.font-size($config, button);\n      weight: typography-utils.font-weight($config, button);\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-button') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/style/private';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/density/private/compatibility';\n@use './button-toggle-variables';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n  $divider-color: theming.get-color-from-palette($foreground, divider);\n\n  .mat-button-toggle-standalone,\n  .mat-button-toggle-group {\n    @include private.private-theme-elevation(2, $config);\n  }\n\n  .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n  .mat-button-toggle-group-appearance-standard {\n    box-shadow: none;\n  }\n\n  .mat-button-toggle {\n    color: theming.get-color-from-palette($foreground, hint-text);\n\n    .mat-button-toggle-focus-overlay {\n      background-color: theming.get-color-from-palette($background, focused-button);\n    }\n  }\n\n  .mat-button-toggle-appearance-standard {\n    color: theming.get-color-from-palette($foreground, text);\n    background: theming.get-color-from-palette($background, card);\n\n    .mat-button-toggle-focus-overlay {\n      background-color: theming.get-color-from-palette($background, focused-button, 1);\n    }\n  }\n\n  .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n    border-left: solid 1px $divider-color;\n  }\n\n  [dir='rtl'] .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n    border-left: none;\n    border-right: solid 1px $divider-color;\n  }\n\n  .mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical {\n    .mat-button-toggle + .mat-button-toggle {\n      border-left: none;\n      border-right: none;\n      border-top: solid 1px $divider-color;\n    }\n  }\n\n  .mat-button-toggle-checked {\n    background-color: theming.get-color-from-palette($background, selected-button);\n    color: theming.get-color-from-palette($foreground, secondary-text);\n\n    &.mat-button-toggle-appearance-standard {\n      color: theming.get-color-from-palette($foreground, text);\n    }\n  }\n\n  .mat-button-toggle-disabled {\n    color: theming.get-color-from-palette($foreground, disabled-button);\n    background-color: theming.get-color-from-palette($background, disabled-button-toggle);\n\n    &.mat-button-toggle-appearance-standard {\n      background: theming.get-color-from-palette($background, card);\n    }\n\n    &.mat-button-toggle-checked {\n      background-color: theming.get-color-from-palette($background, selected-disabled-button);\n    }\n  }\n\n  .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n  .mat-button-toggle-group-appearance-standard {\n    border: solid 1px $divider-color;\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-button-toggle {\n    font-family: typography-utils.font-family($config);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $standard-height: compatibility.private-density-prop-value(\n      button-toggle-variables.$standard-density-config, $density-scale, height);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    .mat-button-toggle-appearance-standard .mat-button-toggle-label-content {\n      line-height: $standard-height;\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-button-toggle') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/style/private';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-card {\n    @include private.private-theme-overridable-elevation(1, $config);\n    background: theming.get-color-from-palette($background, card);\n    color: theming.get-color-from-palette($foreground, text);\n\n    // Needs extra specificity to be able to override the elevation selectors.\n    &.mat-card-flat {\n      @include private.private-theme-overridable-elevation(0, $config);\n    }\n  }\n\n  .mat-card-subtitle {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-card {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-card-title {\n    font: {\n      size: typography-utils.font-size($config, headline);\n      weight: typography-utils.font-weight($config, title);\n    }\n  }\n\n  .mat-card-header .mat-card-title {\n    font-size: typography-utils.font-size($config, title);\n  }\n\n  .mat-card-subtitle,\n  .mat-card-content {\n    font-size: typography-utils.font-size($config, body-1);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-card') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $is-dark-theme: map.get($config, is-dark);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n\n  // The color of the checkbox's checkmark / mixedmark.\n  $checkbox-mark-color: theming.get-color-from-palette($background, background);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n\n  .mat-checkbox-frame {\n    border-color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-checkbox-checkmark {\n    fill: $checkbox-mark-color;\n  }\n\n  .mat-checkbox-checkmark-path {\n    // !important is needed here because a stroke must be set as an\n    // attribute on the SVG in order for line animation to work properly.\n    stroke: $checkbox-mark-color !important;\n  }\n\n  .mat-checkbox-mixedmark {\n    background-color: $checkbox-mark-color;\n  }\n\n  .mat-checkbox-indeterminate, .mat-checkbox-checked {\n    &.mat-primary .mat-checkbox-background {\n      background-color: theming.get-color-from-palette($primary);\n    }\n\n    &.mat-accent .mat-checkbox-background {\n      background-color: theming.get-color-from-palette($accent);\n    }\n\n    &.mat-warn .mat-checkbox-background {\n      background-color: theming.get-color-from-palette($warn);\n    }\n  }\n\n  .mat-checkbox-disabled {\n    &.mat-checkbox-checked,\n    &.mat-checkbox-indeterminate {\n      .mat-checkbox-background {\n        background-color: $disabled-color;\n      }\n    }\n\n    &:not(.mat-checkbox-checked) {\n      .mat-checkbox-frame {\n        border-color: $disabled-color;\n      }\n    }\n\n    .mat-checkbox-label {\n      color: theming.get-color-from-palette($foreground, secondary-text);\n    }\n  }\n\n  // Switch this to a solid color since we're using `opacity`\n  // to control how opaque the ripple should be.\n  .mat-checkbox .mat-ripple-element {\n    background-color: map.get(map.get($config, foreground), base);\n  }\n\n  .mat-checkbox-checked:not(.mat-checkbox-disabled),\n  .mat-checkbox:active:not(.mat-checkbox-disabled) {\n    &.mat-primary .mat-ripple-element {\n      background: theming.get-color-from-palette($primary);\n    }\n\n    &.mat-accent .mat-ripple-element {\n      background: theming.get-color-from-palette($accent);\n    }\n\n    &.mat-warn .mat-ripple-element {\n      background: theming.get-color-from-palette($warn);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-checkbox {\n    font-family: typography-utils.font-family($config);\n  }\n\n  // TODO(kara): Remove this style when fixing vertical baseline\n  .mat-checkbox-layout .mat-checkbox-label {\n    line-height: typography-utils.line-height($config, body-2);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-checkbox') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '../core/style/private';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n$chip-remove-font-size: 18px;\n\n@mixin _element-color($foreground, $background) {\n  background-color: $background;\n  color: $foreground;\n\n  .mat-chip-remove {\n    color: $foreground;\n    opacity: 0.4;\n  }\n}\n\n\n// Applies the background color for a ripple element.\n// If the color value provided is not a Sass color,\n// we assume that we've been given a CSS variable.\n// Since we can't perform alpha-blending on a CSS variable,\n// we instead add the opacity directly to the ripple element.\n@mixin _ripple-background($palette, $default-contrast, $opacity) {\n  $background-color: theming.get-color-from-palette($palette, $default-contrast, $opacity);\n  background-color: $background-color;\n  @if (meta.type-of($background-color) != color) {\n    opacity: $opacity;\n  }\n}\n\n@mixin _palette-styles($palette) {\n  @include _element-color(theming.get-color-from-palette($palette, default-contrast),\n    theming.get-color-from-palette($palette));\n\n  .mat-ripple-element {\n    @include _ripple-background($palette, default-contrast, 0.1);\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $is-dark-theme: map.get($config, is-dark);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  $unselected-background: theming.get-color-from-palette($background, unselected-chip);\n  $unselected-foreground: theming.get-color-from-palette($foreground, text);\n\n  .mat-chip.mat-standard-chip {\n    @include _element-color($unselected-foreground, $unselected-background);\n\n    &:not(.mat-chip-disabled) {\n      &:active {\n        @include private.private-theme-elevation(3, $config);\n      }\n\n      .mat-chip-remove:hover {\n        opacity: 0.54;\n      }\n    }\n\n    &.mat-chip-disabled {\n      opacity: 0.4;\n    }\n\n    &::after {\n      background: map.get($foreground, base);\n    }\n  }\n\n  .mat-chip.mat-standard-chip.mat-chip-selected {\n    &.mat-primary {\n      @include _palette-styles($primary);\n    }\n\n    &.mat-warn {\n      @include _palette-styles($warn);\n    }\n\n    &.mat-accent {\n      @include _palette-styles($accent);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-chip {\n    font-size: typography-utils.font-size($config, body-2);\n    font-weight: typography-utils.font-weight($config, body-2);\n\n    .mat-chip-trailing-icon.mat-icon,\n    .mat-chip-remove.mat-icon {\n      font-size: $chip-remove-font-size;\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-chips') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-table {\n    background: theming.get-color-from-palette($background, 'card');\n  }\n\n  .mat-table thead, .mat-table tbody, .mat-table tfoot,\n  mat-header-row, mat-row, mat-footer-row,\n  [mat-header-row], [mat-row], [mat-footer-row],\n  .mat-table-sticky {\n    background: inherit;\n  }\n\n  mat-row, mat-header-row, mat-footer-row,\n  th.mat-header-cell, td.mat-cell, td.mat-footer-cell {\n    border-bottom-color: theming.get-color-from-palette($foreground, divider);\n  }\n\n  .mat-header-cell {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-cell, .mat-footer-cell {\n    color: theming.get-color-from-palette($foreground, text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-table {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-header-cell {\n    font-size: typography-utils.font-size($config, caption);\n    font-weight: typography-utils.font-weight($config, body-2);\n  }\n\n  .mat-cell, .mat-footer-cell {\n    font-size: typography-utils.font-size($config, body-1);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-table') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:color';\n@use 'sass:map';\n@use 'sass:math';\n@use 'sass:meta';\n@use '../core/style/private';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n$selected-today-box-shadow-width: 1px;\n$selected-fade-amount: 0.6;\n$range-fade-amount: 0.2;\n$today-fade-amount: 0.2;\n$calendar-body-font-size: 13px !default;\n$calendar-weekday-table-font-size: 11px !default;\n\n@mixin _color($palette) {\n  @include date-range-colors(\n    theming.get-color-from-palette($palette, default, $range-fade-amount));\n\n  .mat-calendar-body-selected {\n    background-color: theming.get-color-from-palette($palette);\n    color: theming.get-color-from-palette($palette, default-contrast);\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-selected {\n    $background: theming.get-color-from-palette($palette);\n\n    @if (meta.type-of($background) == color) {\n      background-color: color.adjust($background, $alpha: -$selected-fade-amount);\n    }\n    @else {\n      // If we couldn't resolve to background to a color (e.g. it's a CSS variable),\n      // fall back to fading the content out via `opacity`.\n      opacity: $today-fade-amount;\n    }\n  }\n\n  .mat-calendar-body-today.mat-calendar-body-selected {\n    box-shadow: inset 0 0 0 $selected-today-box-shadow-width\n                theming.get-color-from-palette($palette, default-contrast);\n  }\n\n  .cdk-keyboard-focused .mat-calendar-body-active,\n  .cdk-program-focused .mat-calendar-body-active {\n    @include _highlighted-cell($palette);\n  }\n\n  @media (hover: hover) {\n    .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover {\n      @include _highlighted-cell($palette);\n    }\n  }\n}\n\n// Utility mixin to target cells that aren't selected. Used to make selector easier to follow.\n@mixin _unselected-cell {\n  &:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    @content;\n  }\n}\n\n// Styles for a highlighted calendar cell (e.g. hovered or focused).\n@mixin _highlighted-cell($palette) {\n  & > .mat-calendar-body-cell-content {\n    @include _unselected-cell {\n      background-color: theming.get-color-from-palette($palette, 0.3);\n    }\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n  $disabled-color: theming.get-color-from-palette($foreground, disabled-text);\n\n  .mat-calendar-arrow {\n    fill: theming.get-color-from-palette($foreground, icon);\n  }\n\n  // The prev/next buttons need a bit more specificity to\n  // avoid being overwritten by the .mat-icon-button.\n  .mat-datepicker-toggle,\n  .mat-datepicker-content .mat-calendar-next-button,\n  .mat-datepicker-content .mat-calendar-previous-button {\n    color: theming.get-color-from-palette($foreground, icon);\n  }\n\n  .mat-calendar-table-header-divider::after {\n    background: theming.get-color-from-palette($foreground, divider);\n  }\n\n  .mat-calendar-table-header,\n  .mat-calendar-body-label {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-calendar-body-cell-content,\n  .mat-date-range-input-separator {\n    color: theming.get-color-from-palette($foreground, text);\n    border-color: transparent;\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-cell-content {\n    @include _unselected-cell {\n      color: $disabled-color;\n    }\n  }\n\n  .mat-form-field-disabled .mat-date-range-input-separator {\n    color: $disabled-color;\n  }\n\n  .mat-calendar-body-in-preview {\n    $divider-color: theming.get-color-from-palette($foreground, divider);\n\n    @if meta.type-of($divider-color) == color {\n      // The divider color is set under the assumption that it'll be used\n      // for a solid border, but because we're using a dashed border for the\n      // preview range, we need to bump its opacity to ensure that it's visible.\n      color: rgba($divider-color, math.min(opacity($divider-color) * 2, 1));\n    }\n    @else {\n      color: $divider-color;\n    }\n  }\n\n  .mat-calendar-body-today {\n    @include _unselected-cell {\n      // Note: though it's not text, the border is a hint about the fact that this is today's date,\n      // so we use the hint color.\n      border-color: theming.get-color-from-palette($foreground, hint-text);\n    }\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-today {\n    @include _unselected-cell {\n      $color: theming.get-color-from-palette($foreground, hint-text);\n\n      @if (meta.type-of($color) == color) {\n        border-color: color.adjust($color, $alpha: -$today-fade-amount);\n      }\n      @else {\n        // If the color didn't resolve to a color value, but something like a CSS variable, we can't\n        // fade it out so we fall back to reducing the element opacity. Note that we don't use the\n        // $mat-datepicker-today-fade-amount, because hint text usually has some opacity applied\n        // to it already and we don't want them to stack on top of each other.\n        opacity: 0.5;\n      }\n    }\n  }\n\n  @include _color(map.get($config, primary));\n\n  .mat-datepicker-content {\n    @include private.private-theme-elevation(4, $config);\n    background-color: theming.get-color-from-palette($background, card);\n    color: theming.get-color-from-palette($foreground, text);\n\n    &.mat-accent {\n      @include _color(map.get($config, accent));\n    }\n\n    &.mat-warn {\n      @include _color(map.get($config, warn));\n    }\n  }\n\n  .mat-datepicker-content-touch {\n    @include private.private-theme-elevation(24, $config);\n  }\n\n  .mat-datepicker-toggle-active {\n    color: theming.get-color-from-palette(map.get($config, primary), text);\n\n    &.mat-accent {\n      color: theming.get-color-from-palette(map.get($config, accent), text);\n    }\n\n    &.mat-warn {\n      color: theming.get-color-from-palette(map.get($config, warn), text);\n    }\n  }\n\n  .mat-date-range-input-inner[disabled] {\n    color: theming.get-color-from-palette($foreground, disabled-text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-calendar {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-calendar-body {\n    font-size: $calendar-body-font-size;\n  }\n\n  .mat-calendar-body-label,\n  .mat-calendar-period-button {\n    font: {\n      size: typography-utils.font-size($config, button);\n      weight: typography-utils.font-weight($config, button);\n    }\n  }\n\n  .mat-calendar-table-header th {\n    font: {\n      size: $calendar-weekday-table-font-size;\n      weight: typography-utils.font-weight($config, body-1);\n    }\n  }\n}\n\n@mixin date-range-colors(\n  $range-color,\n  $comparison-color: rgba(#f9ab00, $range-fade-amount),\n  $overlap-color: #a8dab5,\n  $overlap-selected-color: color.adjust($overlap-color, $lightness: -30%)) {\n\n  .mat-calendar-body-in-range::before {\n    background: $range-color;\n  }\n\n  .mat-calendar-body-comparison-identical,\n  .mat-calendar-body-in-comparison-range::before {\n    background: $comparison-color;\n  }\n\n  .mat-calendar-body-comparison-bridge-start::before,\n  [dir='rtl'] .mat-calendar-body-comparison-bridge-end::before {\n    background: linear-gradient(to right, $range-color 50%, $comparison-color 50%);\n  }\n\n  .mat-calendar-body-comparison-bridge-end::before,\n  [dir='rtl'] .mat-calendar-body-comparison-bridge-start::before {\n    background: linear-gradient(to left, $range-color 50%, $comparison-color 50%);\n  }\n\n  .mat-calendar-body-in-range > .mat-calendar-body-comparison-identical,\n  .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after {\n    background: $overlap-color;\n  }\n\n  .mat-calendar-body-comparison-identical.mat-calendar-body-selected,\n  .mat-calendar-body-in-comparison-range > .mat-calendar-body-selected {\n    background: $overlap-selected-color;\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-datepicker') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/style/private';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-dialog-container {\n    @include private.private-theme-elevation(24, $config);\n    background: theming.get-color-from-palette($background, dialog);\n    color: theming.get-color-from-palette($foreground, text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-dialog-title {\n    @include typography-utils.typography-level($config, title);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-dialog') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/density/private/compatibility';\n@use '../core/theming/theming';\n@use '../core/style/private';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use './expansion-variables';\n@use './expansion-mixins';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-expansion-panel {\n    @include private.private-theme-overridable-elevation(2, $config);\n    background: theming.get-color-from-palette($background, card);\n    color: theming.get-color-from-palette($foreground, text);\n  }\n\n  .mat-action-row {\n    border-top-color: theming.get-color-from-palette($foreground, divider);\n  }\n\n  @include expansion-mixins.private-expansion-focus {\n    background: theming.get-color-from-palette($background, hover);\n  }\n\n  // Disable the hover on touch devices since it can appear like it is stuck. We can't use\n  // `@media (hover)` above, because the desktop support browser support isn't great.\n  @media (hover: none) {\n    .mat-expansion-panel:not(.mat-expanded):not([aria-disabled='true'])\n      .mat-expansion-panel-header:hover {\n      background: theming.get-color-from-palette($background, card);\n    }\n  }\n\n  .mat-expansion-panel-header-title {\n    color: theming.get-color-from-palette($foreground, text);\n  }\n\n  .mat-expansion-panel-header-description,\n  .mat-expansion-indicator::after {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-expansion-panel-header[aria-disabled='true'] {\n    color: theming.get-color-from-palette($foreground, disabled-button);\n\n    .mat-expansion-panel-header-title,\n    .mat-expansion-panel-header-description {\n      color: inherit;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-expansion-panel-header {\n    font: {\n      family: typography-utils.font-family($config, subheading-1);\n      size: typography-utils.font-size($config, subheading-1);\n      weight: typography-utils.font-weight($config, subheading-1);\n    }\n  }\n\n  .mat-expansion-panel-content {\n    @include typography-utils.typography-level($config, body-1);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $expanded-height: compatibility.private-density-prop-value(\n        expansion-variables.$header-density-config, $density-scale, expanded-height);\n  $collapsed-height: compatibility.private-density-prop-value(\n      expansion-variables.$header-density-config, $density-scale, collapsed-height);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    .mat-expansion-panel-header {\n      height: $collapsed-height;\n\n      &.mat-expanded {\n        height: $expanded-height;\n      }\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-expansion') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n@use './form-field-fill-theme.scss';\n@use './form-field-legacy-theme.scss';\n@use './form-field-outline-theme.scss';\n@use './form-field-standard-theme.scss';\n\n// Color styles that apply to all appearances of the form-field.\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n  $is-dark-theme: map.get($config, is-dark);\n\n  // Label colors. Required is used for the `*` star shown in the label.\n  $label-color:\n    theming.get-color-from-palette($foreground, secondary-text, if($is-dark-theme, 0.7, 0.6));\n  $focused-label-color: theming.get-color-from-palette($primary, text);\n  $required-label-color: theming.get-color-from-palette($accent, text);\n\n  // Underline colors.\n  $underline-color-base:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 1, 0.87));\n  $underline-color-accent: theming.get-color-from-palette($accent, text);\n  $underline-color-warn: theming.get-color-from-palette($warn, text);\n  $underline-focused-color: theming.get-color-from-palette($primary, text);\n\n  .mat-form-field-label {\n    color: $label-color;\n  }\n\n  .mat-hint {\n    color: $label-color;\n  }\n\n  .mat-form-field.mat-focused .mat-form-field-label {\n    color: $focused-label-color;\n\n    &.mat-accent {\n      color: $underline-color-accent;\n    }\n\n    &.mat-warn {\n      color: $underline-color-warn;\n    }\n  }\n\n  .mat-focused .mat-form-field-required-marker {\n    color: $required-label-color;\n  }\n\n  .mat-form-field-ripple {\n    background-color: $underline-color-base;\n  }\n\n  .mat-form-field.mat-focused {\n    .mat-form-field-ripple {\n      background-color: $underline-focused-color;\n\n      &.mat-accent {\n        background-color: $underline-color-accent;\n      }\n\n      &.mat-warn {\n        background-color: $underline-color-warn;\n      }\n    }\n  }\n\n  .mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid) {\n    .mat-form-field-infix::after {\n      color: $underline-focused-color;\n    }\n\n    &.mat-accent .mat-form-field-infix::after {\n      color: $underline-color-accent;\n    }\n\n    &.mat-warn .mat-form-field-infix::after {\n      color: $underline-color-warn;\n    }\n  }\n\n  // Styling for the error state of the form field. Note that while the same can be\n  // achieved with the ng-* classes, we use this approach in order to ensure that the same\n  // logic is used to style the error state and to show the error messages.\n  .mat-form-field.mat-form-field-invalid {\n    .mat-form-field-label {\n      color: $underline-color-warn;\n\n      &.mat-accent,\n      .mat-form-field-required-marker {\n        color: $underline-color-warn;\n      }\n    }\n\n    .mat-form-field-ripple,\n    .mat-form-field-ripple.mat-accent {\n      background-color: $underline-color-warn;\n    }\n  }\n\n  .mat-error {\n    color: $underline-color-warn;\n  }\n\n  @include form-field-legacy-theme.legacy-color($config);\n  @include form-field-standard-theme.standard-color($config);\n  @include form-field-fill-theme.fill-color($config);\n  @include form-field-outline-theme.outline-color($config);\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $dedupe)\n             scale($font-scale);\n  width: math.div(100%, $font-scale) + $dedupe;\n\n  $dedupe: $dedupe + 0.00001 !global;\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  // The unit-less line-height from the font config.\n  $line-height: typography-utils.line-height($config, input);\n\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The amount to scale the font for the prefix and suffix icons.\n  $prefix-suffix-icon-font-scale: 1.5;\n\n  // The padding on the infix. Mocks show half of the text size.\n  $infix-padding: 0.5em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  // If the line-height is given as a unitless number, coerce it to `em`.\n  $infix-margin-top: $subscript-font-scale *\n      typography-utils.private-coerce-unitless-to-em($line-height);\n  // Font size to use for the label and subscript text.\n  $subscript-font-size: $subscript-font-scale * 100%;\n  // Font size to use for the for the prefix and suffix icons.\n  $prefix-suffix-icon-font-size: $prefix-suffix-icon-font-scale * 100%;\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size.\n  $subscript-margin-top: math.div(0.5em, $subscript-font-scale);\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n\n  .mat-form-field {\n    @include typography-utils.typography-level($config, input);\n  }\n\n  .mat-form-field-wrapper {\n    padding-bottom: $wrapper-padding-bottom;\n  }\n\n  .mat-form-field-prefix,\n  .mat-form-field-suffix {\n    // Allow icons in a prefix or suffix to adapt to the correct size.\n    .mat-icon {\n      font-size: $prefix-suffix-icon-font-size;\n      line-height: $line-height;\n    }\n\n    // Allow icon buttons in a prefix or suffix to adapt to the correct size.\n    .mat-icon-button {\n      height: $prefix-suffix-icon-font-scale * 1em;\n      width: $prefix-suffix-icon-font-scale * 1em;\n\n      .mat-icon {\n        height: typography-utils.private-coerce-unitless-to-em($line-height);\n        line-height: $line-height;\n      }\n    }\n  }\n\n  .mat-form-field-infix {\n    padding: $infix-padding 0;\n    // Throws off the baseline if we do it as a real margin, so we do it as a border instead.\n    border-top: $infix-margin-top solid transparent;\n  }\n\n  .mat-form-field-can-float {\n    &.mat-form-field-should-float .mat-form-field-label,\n    .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n      @include _label-floating(\n              $subscript-font-scale, $infix-padding, $infix-margin-top);\n    }\n\n    // Server-side rendered matInput with a label attribute but label not shown\n    // (used as a pure CSS stand-in for mat-form-field-should-float).\n    .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n      @include _label-floating(\n              $subscript-font-scale, $infix-padding, $infix-margin-top);\n    }\n  }\n\n  .mat-form-field-label-wrapper {\n    top: -$infix-margin-top;\n    padding-top: $infix-margin-top;\n  }\n\n  .mat-form-field-label {\n    top: $infix-margin-top + $infix-padding;\n  }\n\n  .mat-form-field-underline {\n    // We want the underline to start at the end of the content box, not the padding box,\n    // so we move it up by the padding amount.\n    bottom: $wrapper-padding-bottom;\n  }\n\n  .mat-form-field-subscript-wrapper {\n    font-size: $subscript-font-size;\n    margin-top: $subscript-margin-top;\n\n    // We want the subscript to start at the end of the content box, not the padding box,\n    // so we move it up by the padding amount (adjusted for the smaller font size);\n    top: calc(100% - #{math.div($wrapper-padding-bottom, $subscript-font-scale)});\n  }\n\n  @include form-field-legacy-theme.legacy-typography($config);\n  @include form-field-standard-theme.standard-typography($config);\n  @include form-field-fill-theme.fill-typography($config);\n  @include form-field-outline-theme.outline-typography($config);\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  @include form-field-legacy-theme.private-form-field-legacy-density($density-scale);\n  @include form-field-standard-theme.private-form-field-standard-density($density-scale);\n  @include form-field-fill-theme.private-form-field-fill-density($density-scale);\n  @include form-field-outline-theme.private-form-field-outline-density($density-scale);\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-form-field') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '../core/theming/theming';\n@use '../core/style/form-common';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n// Theme styles that only apply to the legacy appearance of the form-field.\n\n@mixin legacy-color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $is-dark-theme: map.get($config, is-dark);\n\n  $label-color: theming.get-color-from-palette($foreground, secondary-text);\n  $underline-color:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 0.7, 0.42));\n\n  .mat-form-field-appearance-legacy {\n    .mat-form-field-label {\n      color: $label-color;\n    }\n\n    .mat-hint {\n      color: $label-color;\n    }\n\n    .mat-form-field-underline {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-underline {\n      @include form-common.private-control-disabled-underline($underline-color);\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$legacy-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  // We use perspective to fix the text blurriness as described here:\n  // http://www.useragentman.com/blog/2014/05/04/fixing-typography-inside-of-2-d-css-transforms/\n  // This results in a small jitter after the label floats on Firefox, which the\n  // translateZ fixes.\n  transform: translateY(-$infix-margin-top - $infix-padding) scale($font-scale) perspective(100px)\n  translateZ(0.001px + $legacy-dedupe);\n  width: math.div(100%, $font-scale) + $legacy-dedupe;\n\n  $legacy-dedupe: $legacy-dedupe + 0.00001 !global;\n}\n\n// Same as mixin above, but omits the translateZ for printing purposes.\n@mixin _label-floating-print($font-scale, $infix-padding, $infix-margin-top) {\n  // This results in a small jitter after the label floats on Firefox, which the\n  // translateZ fixes.\n  transform: translateY(-$infix-margin-top - $infix-padding + $legacy-dedupe)\n                  scale($font-scale);\n  // The tricks above used to smooth out the animation on chrome and firefox actually make things\n  // worse on IE, so we don't include them in the IE version.\n  $legacy-dedupe: $legacy-dedupe + 0.00001 !global;\n}\n\n@mixin legacy-typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  // The unit-less line-height from the font config.\n  $line-height: typography-utils.line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The amount of space between the top of the line and the top of the actual text\n  // (as a fraction of the font-size).\n  $line-spacing: math.div($line-height - 1, 2);\n  // The padding on the infix. Mocks show half of the text size, but seem to measure from the edge\n  // of the text itself, not the edge of the line; therefore we subtract off the line spacing.\n  $infix-padding: 0.5em - $line-spacing;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  // If the line-height is given as a unitless number, coerce it to `em`.\n  $infix-margin-top:\n      $subscript-font-scale * typography-utils.private-coerce-unitless-to-em($line-height);\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size. We again need to subtract off the line spacing since the mocks measure to the edge of the\n  // text, not the  edge of the line.\n  $subscript-margin-top: math.div(0.5em, $subscript-font-scale) - ($line-spacing * 2);\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n\n  .mat-form-field-appearance-legacy {\n    .mat-form-field-wrapper {\n      padding-bottom: $wrapper-padding-bottom;\n    }\n\n    .mat-form-field-infix {\n      padding: $infix-padding 0;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n\n      // @breaking-change 8.0.0 will rely on AutofillMonitor instead.\n      .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding;\n    }\n\n    .mat-form-field-underline {\n      // We want the underline to start at the end of the content box, not the padding box,\n      // so we move it up by the padding amount.\n      bottom: $wrapper-padding-bottom;\n    }\n\n    .mat-form-field-subscript-wrapper {\n      margin-top: $subscript-margin-top;\n\n      // We want the subscript to start at the end of the content box, not the padding box,\n      // so we move it up by the padding amount (adjusted for the smaller font size);\n      top: calc(100% - #{math.div($wrapper-padding-bottom, $subscript-font-scale)});\n    }\n  }\n\n  // translateZ causes the label to not appear while printing, so we override it to not\n  // apply translateZ while printing\n  @media print {\n    .mat-form-field-appearance-legacy {\n      &.mat-form-field-can-float {\n        &.mat-form-field-should-float .mat-form-field-label,\n        .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n          @include _label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n\n        // @breaking-change 8.0.0 will rely on AutofillMonitor instead.\n        .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n          @include _label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n\n        // Server-side rendered matInput with a label attribute but label not shown\n        // (used as a pure CSS stand-in for mat-form-field-should-float).\n        .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n          @include _label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n      }\n    }\n  }\n}\n\n@mixin private-form-field-legacy-density($config-or-theme) {}\n\n@mixin legacy-theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-form-field-legacy') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include legacy-color($color);\n    }\n    @if $density != null {\n      @include private-form-field-legacy-density($density);\n    }\n    @if $typography != null {\n      @include legacy-typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n// Theme styles that only apply to the fill appearance of the form-field.\n\n@mixin fill-color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $is-dark-theme: map.get($config, is-dark);\n\n  $fill-background:\n    theming.get-color-from-palette($foreground, base, if($is-dark-theme, 0.1, 0.04));\n  $fill-disabled-background:\n    theming.get-color-from-palette($foreground, base, if($is-dark-theme, 0.05, 0.02));\n  $underline-color:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 0.5, 0.42));\n  $label-disabled-color: theming.get-color-from-palette($foreground, disabled-text);\n\n  .mat-form-field-appearance-fill {\n    .mat-form-field-flex {\n      background-color: $fill-background;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-flex {\n      background-color: $fill-disabled-background;\n    }\n\n    .mat-form-field-underline::before {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled {\n      .mat-form-field-label {\n        color: $label-disabled-color;\n      }\n\n      .mat-form-field-underline::before {\n        background-color: transparent;\n      }\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$fill-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $fill-dedupe)\n             scale($font-scale);\n  width: math.div(100%, $font-scale) + $fill-dedupe;\n\n  $fill-dedupe: $fill-dedupe + 0.00001 !global;\n}\n\n@mixin fill-typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  // The unit-less line-height from the font config.\n  $line-height: typography-utils.line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The padding on top of the infix.\n  $infix-padding-top: 0.25em;\n  // The padding below the infix.\n  $infix-padding-bottom: 0.75em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top:\n      $subscript-font-scale * typography-utils.private-coerce-unitless-to-em($line-height);\n  // The amount we offset the label from the input text in the fill appearance.\n  $fill-appearance-label-offset: -0.5em;\n\n  .mat-form-field-appearance-fill {\n    .mat-form-field-infix {\n      padding: $infix-padding-top 0 $infix-padding-bottom 0;\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding-top;\n      margin-top: $fill-appearance-label-offset;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding-top + $fill-appearance-label-offset,\n                $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding-top + $fill-appearance-label-offset,\n                $infix-margin-top);\n      }\n    }\n  }\n}\n\n@mixin private-form-field-fill-density($config-or-theme) {}\n\n@mixin fill-theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-form-field-fill') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include fill-color($color);\n    }\n    @if $density != null {\n      @include private-form-field-fill-density($density);\n    }\n    @if $typography != null {\n      @include fill-typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n// Theme styles that only apply to the outline appearance of the form-field.\n\n@mixin outline-color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $foreground: map.get($config, foreground);\n  $is-dark-theme: map.get($config, is-dark);\n\n  $label-disabled-color: theming.get-color-from-palette($foreground, disabled-text);\n  $outline-color:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 0.3, 0.12));\n  $outline-color-hover:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 1, 0.87));\n  $outline-color-primary: theming.get-color-from-palette($primary);\n  $outline-color-accent: theming.get-color-from-palette($accent);\n  $outline-color-warn: theming.get-color-from-palette($warn);\n  $outline-color-disabled:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 0.15, 0.06));\n\n  .mat-form-field-appearance-outline {\n    .mat-form-field-outline {\n      color: $outline-color;\n    }\n\n    .mat-form-field-outline-thick {\n      color: $outline-color-hover;\n    }\n\n    &.mat-focused {\n      .mat-form-field-outline-thick {\n        color: $outline-color-primary;\n      }\n\n      &.mat-accent .mat-form-field-outline-thick {\n        color: $outline-color-accent;\n      }\n\n      &.mat-warn .mat-form-field-outline-thick {\n        color: $outline-color-warn;\n      }\n    }\n\n    // Class repeated so that rule is specific enough to override focused accent color case.\n    &.mat-form-field-invalid.mat-form-field-invalid {\n      .mat-form-field-outline-thick {\n        color: $outline-color-warn;\n      }\n    }\n\n    &.mat-form-field-disabled {\n      .mat-form-field-label {\n        color: $label-disabled-color;\n      }\n\n      .mat-form-field-outline {\n        color: $outline-color-disabled;\n      }\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$outline-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $outline-dedupe)\n  scale($font-scale);\n  width: math.div(100%, $font-scale) + $outline-dedupe;\n\n  $outline-dedupe: $outline-dedupe + 0.00001 !global;\n}\n\n@mixin outline-typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  // The unit-less line-height from the font config.\n  $line-height: typography-utils.line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The padding above and below the infix.\n  $infix-padding: 1em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top:\n      $subscript-font-scale * typography-utils.private-coerce-unitless-to-em($line-height);\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size.\n  $subscript-margin-top: math.div(0.5em, $subscript-font-scale);\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n  // The amount we offset the label from the input text in the outline appearance.\n  $outline-appearance-label-offset: -0.25em;\n\n  .mat-form-field-appearance-outline {\n    .mat-form-field-infix {\n      padding: $infix-padding 0 $infix-padding 0;\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding;\n      margin-top: $outline-appearance-label-offset;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding + $outline-appearance-label-offset,\n                $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding + $outline-appearance-label-offset,\n                $infix-margin-top);\n      }\n    }\n  }\n}\n\n@mixin private-form-field-outline-density($config-or-theme) {}\n\n@mixin outline-theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-form-field-outline') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include outline-color($color);\n    }\n    @if $density != null {\n      @include private-form-field-outline-density($density);\n    }\n    @if $typography != null {\n      @include outline-typography($typography);\n    }\n  }\n}\n\n","@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/style/list-common';\n\n\n// Include this empty mixin for consistency with the other components.\n@mixin color($config-or-theme) {}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-grid-tile-header,\n  .mat-grid-tile-footer {\n    @include list-common.base(typography-utils.font-size($config, caption));\n    font-size: typography-utils.font-size($config, body-1);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-grid-list') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","// This mixin will ensure that lines that overflow the container will hide the overflow and\n// truncate neatly with an ellipsis.\n@mixin truncate-line() {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n// Mixin to provide all mat-line styles, changing secondary font size based on whether the list\n// is in dense mode.\n@mixin base($secondary-font-size) {\n  .mat-line {\n    @include truncate-line();\n    display: block;\n    box-sizing: border-box;\n\n    // all lines but the top line should have smaller text\n    &:nth-child(n+2) {\n      font-size: $secondary-font-size;\n    }\n  }\n}\n\n// This mixin normalizes default element styles, e.g. font weight for heading text.\n@mixin normalize-text() {\n  & > * {\n    margin: 0;\n    padding: 0;\n    font-weight: normal;\n    font-size: inherit;\n  }\n}\n\n// This mixin provides base styles for the wrapper around mat-line elements in a list.\n@mixin wrapper-base() {\n  @include normalize-text();\n\n  display: flex;\n  flex-direction: column;\n  flex: auto;\n  box-sizing: border-box;\n  overflow: hidden;\n\n  // Must remove wrapper when lines are empty or it takes up horizontal\n  // space and pushes other elements to the right.\n  &:empty {\n    display: none;\n  }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '../core/theming/palette';\n@use '../core/theming/theming';\n@use '../core/style/form-common';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/style/vendor-prefixes';\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $foreground: map.get($config, foreground);\n\n  .mat-form-field-type-mat-native-select .mat-form-field-infix::after {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-input-element:disabled,\n  .mat-form-field-type-mat-native-select.mat-form-field-disabled .mat-form-field-infix::after {\n    color: theming.get-color-from-palette($foreground, disabled-text);\n  }\n\n  .mat-input-element {\n    caret-color: theming.get-color-from-palette($primary, text);\n\n    @include vendor-prefixes.input-placeholder {\n      color: form-common.private-control-placeholder-color($config);\n    }\n\n    // On dark themes we set the native `select` color to some shade of white,\n    // however the color propagates to all of the `option` elements, which are\n    // always on a white background inside the dropdown, causing them to blend in.\n    // Since we can't change background of the dropdown, we need to explicitly\n    // reset the color of the options to something dark.\n    @if (map.get($config, is-dark)) {\n      &:not(.mat-native-select-inline) {\n        option {\n          color: palette.$dark-primary-text;\n        }\n\n        option:disabled {\n          color: palette.$dark-disabled-text;\n        }\n      }\n    }\n  }\n\n  .mat-form-field.mat-accent .mat-input-element {\n    caret-color: theming.get-color-from-palette($accent, text);\n  }\n\n  .mat-form-field.mat-warn .mat-input-element,\n  .mat-form-field-invalid .mat-input-element {\n    caret-color: theming.get-color-from-palette($warn, text);\n  }\n\n  .mat-form-field-type-mat-native-select.mat-form-field-invalid .mat-form-field-infix::after {\n    color: theming.get-color-from-palette($warn, text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  // The unit-less line-height from the font config.\n  $line-height: typography-utils.line-height($config, input);\n\n  // The amount of space between the top of the line and the top of the actual text\n  // (as a fraction of the font-size).\n  $line-spacing: math.div($line-height - 1, 2);\n\n  // <input> elements seem to have their height set slightly too large on Safari causing the text to\n  // be misaligned w.r.t. the placeholder. Adding this margin corrects it.\n  input.mat-input-element {\n    margin-top: typography-utils.private-coerce-unitless-to-em(-$line-spacing);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-input') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/style/private';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-menu-panel {\n    @include private.private-theme-overridable-elevation(4, $config);\n    background: theming.get-color-from-palette($background, 'card');\n  }\n\n  .mat-menu-item {\n    background: transparent;\n    color: theming.get-color-from-palette($foreground, 'text');\n\n    &[disabled] {\n      &,\n      .mat-menu-submenu-icon,\n      .mat-icon-no-color {\n        color: theming.get-color-from-palette($foreground, 'disabled');\n      }\n    }\n  }\n\n  .mat-menu-item .mat-icon-no-color,\n  .mat-menu-submenu-icon {\n    color: theming.get-color-from-palette($foreground, 'icon');\n  }\n\n  .mat-menu-item:hover,\n  .mat-menu-item.cdk-program-focused,\n  .mat-menu-item.cdk-keyboard-focused,\n  .mat-menu-item-highlighted {\n    &:not([disabled]) {\n      background: theming.get-color-from-palette($background, 'hover');\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-menu-item {\n    font: {\n      family: typography-utils.font-family($config, body-1);\n      size: typography-utils.font-size($config, body-1);\n      weight: typography-utils.font-weight($config, body-1);\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-menu') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/density/private/compatibility';\n@use './paginator-variables';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n\n  .mat-paginator {\n    background: theming.get-color-from-palette($background, 'card');\n  }\n\n  .mat-paginator,\n  .mat-paginator-page-size .mat-select-trigger {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-paginator-decrement,\n  .mat-paginator-increment {\n    border-top: 2px solid theming.get-color-from-palette($foreground, 'icon');\n    border-right: 2px solid theming.get-color-from-palette($foreground, 'icon');\n  }\n\n  .mat-paginator-first,\n  .mat-paginator-last {\n    border-top: 2px solid theming.get-color-from-palette($foreground, 'icon');\n  }\n\n  .mat-icon-button[disabled] {\n    .mat-paginator-decrement,\n    .mat-paginator-increment,\n    .mat-paginator-first,\n    .mat-paginator-last {\n      border-color: theming.get-color-from-palette($foreground, 'disabled');\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-paginator,\n  .mat-paginator-page-size .mat-select-trigger {\n    font: {\n      family: typography-utils.font-family($config, caption);\n      size: typography-utils.font-size($config, caption);\n    }\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $height: compatibility.private-density-prop-value(paginator-variables.$density-config,\n    $density-scale, height);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    .mat-paginator-container {\n      min-height: $height;\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-paginator') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n@mixin _color($palette) {\n  &.mat-radio-checked .mat-radio-outer-circle {\n    border-color: theming.get-color-from-palette($palette);\n  }\n\n  .mat-radio-inner-circle,\n  .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),\n  &.mat-radio-checked .mat-radio-persistent-ripple,\n  &:active .mat-radio-persistent-ripple {\n    background-color: theming.get-color-from-palette($palette);\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-radio-outer-circle {\n    border-color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-radio-button {\n    &.mat-primary {\n      @include _color($primary);\n    }\n\n    &.mat-accent {\n      @include _color($accent);\n    }\n\n    &.mat-warn {\n      @include _color($warn);\n    }\n\n    // This needs extra specificity, because the classes above are combined\n    // (e.g. `.mat-radio-button.mat-accent`) which increases their specificity a lot.\n    // TODO: consider making the selectors into descendants (`.mat-primary .mat-radio-button`).\n    &.mat-radio-disabled {\n      &.mat-radio-checked .mat-radio-outer-circle,\n      .mat-radio-outer-circle {\n        border-color: theming.get-color-from-palette($foreground, disabled);\n      }\n\n      .mat-radio-ripple .mat-ripple-element,\n      .mat-radio-inner-circle {\n        background-color: theming.get-color-from-palette($foreground, disabled);\n      }\n\n      .mat-radio-label-content {\n        color: theming.get-color-from-palette($foreground, disabled);\n      }\n    }\n\n    // Switch this to a solid color since we're using `opacity`\n    // to control how opaque the ripple should be.\n    .mat-ripple-element {\n      background-color: map.get($foreground, base);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-radio-button {\n    font-family: typography-utils.font-family($config);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-radio') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/style/private';\n@use '../core/style/form-common';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n\n  .mat-select-value {\n    color: theming.get-color-from-palette($foreground, text);\n  }\n\n  .mat-select-placeholder {\n    color: form-common.private-control-placeholder-color($config);\n  }\n\n  .mat-select-disabled .mat-select-value {\n    color: theming.get-color-from-palette($foreground, disabled-text);\n  }\n\n  .mat-select-arrow {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-select-panel {\n    background: theming.get-color-from-palette($background, card);\n    @include private.private-theme-overridable-elevation(4, $config);\n\n    .mat-option.mat-selected:not(.mat-option-multiple) {\n      background: theming.get-color-from-palette($background, hover, 0.12);\n    }\n  }\n\n  .mat-form-field {\n    &.mat-focused {\n      &.mat-primary .mat-select-arrow {\n        color: theming.get-color-from-palette($primary, text);\n      }\n\n      &.mat-accent .mat-select-arrow {\n        color: theming.get-color-from-palette($accent, text);\n      }\n\n      &.mat-warn .mat-select-arrow {\n        color: theming.get-color-from-palette($warn, text);\n      }\n    }\n\n    .mat-select.mat-select-invalid .mat-select-arrow {\n      color: theming.get-color-from-palette($warn, text);\n    }\n\n    .mat-select.mat-select-disabled .mat-select-arrow {\n      color: theming.get-color-from-palette($foreground, disabled-text);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  // The unit-less line-height from the font config.\n  $line-height: typography-utils.line-height($config, input);\n\n  .mat-select {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-select-trigger {\n    height: typography-utils.private-coerce-unitless-to-em($line-height);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-select') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/style/private';\n@use '../core/theming/palette';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n@mixin _checked-color($palette, $thumb-checked-hue) {\n  &.mat-checked {\n    .mat-slide-toggle-thumb {\n      background-color: theming.get-color-from-palette($palette, $thumb-checked-hue);\n    }\n\n    .mat-slide-toggle-bar {\n      // Opacity is determined from the specs for the selection controls.\n      // See: https://material.io/design/components/selection-controls.html#specs\n      background-color: theming.get-color-from-palette($palette, $thumb-checked-hue, 0.54);\n    }\n\n    .mat-ripple-element {\n      // Set no opacity for the ripples because the ripple opacity will be adjusted dynamically\n      // based on the type of interaction with the slide-toggle (e.g. for hover, focus)\n      background-color: theming.get-color-from-palette($palette, $thumb-checked-hue);\n    }\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $is-dark: map.get($config, is-dark);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  // Color hues are based on the specs which briefly show the hues that are applied to a switch.\n  // The 2018 specs no longer describe how dark switches should look like. Due to the lack of\n  // information for dark themed switches, we partially keep the old behavior that is based on\n  // the previous specifications. For the checked color we always use the `default` hue because\n  // that follows MDC and also makes it easier for people to create a custom theme without needing\n  // to specify each hue individually.\n  $thumb-unchecked-hue: if($is-dark, 400, 50);\n  $thumb-checked-hue: default;\n\n  $bar-unchecked-color: theming.get-color-from-palette($foreground, disabled);\n  $ripple-unchecked-color: theming.get-color-from-palette($foreground, base);\n\n  .mat-slide-toggle {\n    @include _checked-color($accent, $thumb-checked-hue);\n\n    &.mat-primary {\n      @include _checked-color($primary, $thumb-checked-hue);\n    }\n\n    &.mat-warn {\n      @include _checked-color($warn, $thumb-checked-hue);\n    }\n\n    &:not(.mat-checked) .mat-ripple-element {\n      // Set no opacity for the ripples because the ripple opacity will be adjusted dynamically\n      // based on the type of interaction with the slide-toggle (e.g. for hover, focus)\n      background-color: $ripple-unchecked-color;\n    }\n  }\n\n  .mat-slide-toggle-thumb {\n    @include private.private-theme-elevation(1, $config);\n    background-color: theming.get-color-from-palette(palette.$grey-palette, $thumb-unchecked-hue);\n  }\n\n  .mat-slide-toggle-bar {\n    background-color: $bar-unchecked-color;\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-slide-toggle-content {\n    font-family: typography-utils.font-family($config);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-slide-toggle') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use 'sass:map';\n@use 'sass:meta';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n@mixin _inner-content-theme($palette) {\n  .mat-slider-track-fill,\n  .mat-slider-thumb,\n  .mat-slider-thumb-label {\n    background-color: theming.get-color-from-palette($palette);\n  }\n\n  .mat-slider-thumb-label-text {\n    color: theming.get-color-from-palette($palette, default-contrast);\n  }\n\n  .mat-slider-focus-ring {\n    $opacity: 0.2;\n    $color: theming.get-color-from-palette($palette, default, $opacity);\n    background-color: $color;\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (meta.type-of($color) != color) {\n      opacity: $opacity;\n    }\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  $mat-slider-off-color: theming.get-color-from-palette($foreground, slider-off);\n  $mat-slider-off-focused-color: theming.get-color-from-palette($foreground, slider-off-active);\n  $mat-slider-disabled-color: theming.get-color-from-palette($foreground, slider-off);\n  $mat-slider-labeled-min-value-thumb-color:\n    theming.get-color-from-palette($foreground, slider-min);\n  $mat-slider-labeled-min-value-thumb-label-color:\n    theming.get-color-from-palette($foreground, slider-off);\n  $mat-slider-tick-opacity: 0.7;\n  $mat-slider-tick-color:\n    theming.get-color-from-palette($foreground, base, $mat-slider-tick-opacity);\n  $mat-slider-tick-size: 2px;\n\n  .mat-slider-track-background {\n    background-color: $mat-slider-off-color;\n  }\n\n  .mat-slider {\n    &.mat-primary {\n      @include _inner-content-theme($primary);\n    }\n\n    &.mat-accent {\n      @include _inner-content-theme($accent);\n    }\n\n    &.mat-warn {\n      @include _inner-content-theme($warn);\n    }\n  }\n\n  .mat-slider:hover,\n  .mat-slider.cdk-focused {\n    .mat-slider-track-background {\n      background-color: $mat-slider-off-focused-color;\n    }\n  }\n\n  .mat-slider.mat-slider-disabled {\n    .mat-slider-track-background,\n    .mat-slider-track-fill,\n    .mat-slider-thumb {\n      background-color: $mat-slider-disabled-color;\n    }\n\n    &:hover {\n      .mat-slider-track-background {\n        background-color: $mat-slider-disabled-color;\n      }\n    }\n  }\n\n  .mat-slider.mat-slider-min-value {\n    .mat-slider-focus-ring {\n      $opacity: 0.12;\n      $color: theming.get-color-from-palette($foreground, base, $opacity);\n      background-color: $color;\n\n      // `mat-color` uses `rgba` for the opacity which won't work with\n      // CSS variables so we need to use `opacity` as a fallback.\n      @if (meta.type-of($color) != color) {\n        opacity: $opacity;\n      }\n    }\n\n    &.mat-slider-thumb-label-showing {\n      .mat-slider-thumb,\n      .mat-slider-thumb-label {\n        background-color: $mat-slider-labeled-min-value-thumb-color;\n      }\n\n      &.cdk-focused {\n        .mat-slider-thumb,\n        .mat-slider-thumb-label {\n          background-color: $mat-slider-labeled-min-value-thumb-label-color;\n        }\n      }\n    }\n\n    &:not(.mat-slider-thumb-label-showing) {\n      .mat-slider-thumb {\n        border-color: $mat-slider-off-color;\n        background-color: transparent;\n      }\n\n      &:hover,\n      &.cdk-focused {\n        .mat-slider-thumb {\n          border-color: $mat-slider-off-focused-color;\n        }\n\n        &.mat-slider-disabled .mat-slider-thumb {\n          border-color: $mat-slider-disabled-color;\n        }\n      }\n    }\n  }\n\n  .mat-slider-has-ticks .mat-slider-wrapper::after {\n    border-color: $mat-slider-tick-color;\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (meta.type-of($mat-slider-tick-color) != color) {\n      opacity: $mat-slider-tick-opacity;\n    }\n  }\n\n  .mat-slider-horizontal .mat-slider-ticks {\n    background-image: repeating-linear-gradient(to right, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n    // Firefox doesn't draw the gradient correctly with 'to right'\n    // (see https://bugzilla.mozilla.org/show_bug.cgi?id=1314319).\n    background-image: -moz-repeating-linear-gradient(0.0001deg, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (meta.type-of($mat-slider-tick-color) != color) {\n      opacity: $mat-slider-tick-opacity;\n    }\n  }\n\n  .mat-slider-vertical .mat-slider-ticks {\n    background-image: repeating-linear-gradient(to bottom, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (meta.type-of($mat-slider-tick-color) != color) {\n      opacity: $mat-slider-tick-opacity;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-slider-thumb-label-text {\n    font: {\n      family: typography-utils.font-family($config);\n      size: typography-utils.font-size($config, caption);\n      weight: typography-utils.font-weight($config, body-2);\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-slider') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/density/private/compatibility';\n@use './stepper-variables';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n\n  .mat-step-header {\n    &.cdk-keyboard-focused,\n    &.cdk-program-focused,\n    &:hover:not([aria-disabled]),\n    &:hover[aria-disabled='false'] {\n      background-color: theming.get-color-from-palette($background, hover);\n    }\n\n    &:hover[aria-disabled='true'] {\n      cursor: default;\n    }\n\n    // On touch devices the :hover state will linger on the element after a tap.\n    // Reset it via `@media` after the declaration, because the media query isn't\n    // supported by all browsers yet.\n    @media (hover: none) {\n      &:hover {\n        background: none;\n      }\n    }\n\n    .mat-step-label,\n    .mat-step-optional {\n      // TODO(josephperrott): Update to using a corrected disabled-text contrast\n      // instead of secondary-text.\n      color: theming.get-color-from-palette($foreground, secondary-text);\n    }\n\n    .mat-step-icon {\n      // TODO(josephperrott): Update to using a corrected disabled-text contrast\n      // instead of secondary-text.\n      background-color: theming.get-color-from-palette($foreground, secondary-text);\n      color: theming.get-color-from-palette($primary, default-contrast);\n    }\n\n    .mat-step-icon-selected,\n    .mat-step-icon-state-done,\n    .mat-step-icon-state-edit {\n      background-color: theming.get-color-from-palette($primary);\n      color: theming.get-color-from-palette($primary, default-contrast);\n    }\n\n    &.mat-accent {\n      .mat-step-icon {\n        color: theming.get-color-from-palette($accent, default-contrast);\n      }\n\n      .mat-step-icon-selected,\n      .mat-step-icon-state-done,\n      .mat-step-icon-state-edit {\n        background-color: theming.get-color-from-palette($accent);\n        color: theming.get-color-from-palette($accent, default-contrast);\n      }\n    }\n\n    &.mat-warn {\n      .mat-step-icon {\n        color: theming.get-color-from-palette($warn, default-contrast);\n      }\n\n      .mat-step-icon-selected,\n      .mat-step-icon-state-done,\n      .mat-step-icon-state-edit {\n        background-color: theming.get-color-from-palette($warn);\n        color: theming.get-color-from-palette($warn, default-contrast);\n      }\n    }\n\n    .mat-step-icon-state-error {\n      background-color: transparent;\n      color: theming.get-color-from-palette($warn, text);\n    }\n\n    .mat-step-label.mat-step-label-active {\n      color: theming.get-color-from-palette($foreground, text);\n    }\n\n    .mat-step-label.mat-step-label-error {\n      color: theming.get-color-from-palette($warn, text);\n    }\n  }\n\n  .mat-stepper-horizontal, .mat-stepper-vertical {\n    background-color: theming.get-color-from-palette($background, card);\n  }\n\n  .mat-stepper-vertical-line::before {\n    border-left-color: theming.get-color-from-palette($foreground, divider);\n  }\n\n  .mat-horizontal-stepper-header::before,\n  .mat-horizontal-stepper-header::after,\n  .mat-stepper-horizontal-line {\n    border-top-color: theming.get-color-from-palette($foreground, divider);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-stepper-vertical, .mat-stepper-horizontal {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-step-label {\n    font: {\n      size: typography-utils.font-size($config, body-1);\n      weight: typography-utils.font-weight($config, body-1);\n    };\n  }\n\n  .mat-step-sub-label-error {\n    font-weight: normal;\n  }\n\n  .mat-step-label-error {\n    font-size: typography-utils.font-size($config, body-2);\n  }\n\n  .mat-step-label-selected {\n    font: {\n      size: typography-utils.font-size($config, body-2);\n      weight: typography-utils.font-weight($config, body-2);\n    };\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $height: compatibility.private-density-prop-value(stepper-variables.$density-config,\n    $density-scale, height);\n  $vertical-padding: math.div($height - stepper-variables.$label-header-height, 2);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    .mat-horizontal-stepper-header {\n      height: $height;\n    }\n\n    .mat-stepper-label-position-bottom .mat-horizontal-stepper-header,\n    .mat-vertical-stepper-header {\n      padding: $vertical-padding stepper-variables.$side-gap;\n    }\n\n    // Ensures that the vertical lines for the step content exceed into the step\n    // headers with a given distance (`$mat-stepper-line-gap`) to the step icon.\n    .mat-stepper-vertical-line::before {\n      top: stepper-variables.$line-gap - $vertical-padding;\n      bottom: stepper-variables.$line-gap - $vertical-padding;\n    }\n\n    // Ensures that the horizontal lines for the step header are centered vertically.\n    .mat-stepper-label-position-bottom .mat-horizontal-stepper-header {\n      &::after, &::before {\n        top: $vertical-padding + math.div(stepper-variables.$label-header-height, 2);\n      }\n    }\n\n    // Ensures that the horizontal line for the step content is aligned centered vertically.\n    .mat-stepper-label-position-bottom .mat-stepper-horizontal-line {\n      top: $vertical-padding + math.div(stepper-variables.$label-header-height, 2);\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-stepper') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n  $header-border: 1px solid theming.get-color-from-palette($foreground, divider);\n\n  .mat-tab-nav-bar,\n  .mat-tab-header {\n    border-bottom: $header-border;\n  }\n\n  .mat-tab-group-inverted-header {\n    .mat-tab-nav-bar,\n    .mat-tab-header {\n      border-top: $header-border;\n      border-bottom: none;\n    }\n  }\n\n  .mat-tab-label, .mat-tab-link {\n    color: theming.get-color-from-palette($foreground, text);\n\n    &.mat-tab-disabled {\n      color: theming.get-color-from-palette($foreground, disabled-text);\n    }\n  }\n\n  .mat-tab-header-pagination-chevron {\n    border-color: theming.get-color-from-palette($foreground, text);\n  }\n\n  .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n    border-color: theming.get-color-from-palette($foreground, disabled-text);\n  }\n\n  // Remove header border when there is a background color\n  .mat-tab-group[class*='mat-background-'] > .mat-tab-header,\n  .mat-tab-nav-bar[class*='mat-background-'] {\n    border-bottom: none;\n    border-top: none;\n  }\n\n  .mat-tab-group, .mat-tab-nav-bar {\n    $theme-colors: (\n      primary: $primary,\n      accent: $accent,\n      warn: $warn\n    );\n\n    @each $name, $color in $theme-colors {\n      // Set the foreground color of the tabs\n      &.mat-#{$name} {\n        @include _label-focus-color($color);\n        @include _ink-bar-color($color);\n\n        // Override ink bar when background color is the same\n        &.mat-background-#{$name} {\n          > .mat-tab-header, > .mat-tab-link-container {\n            @include _ink-bar-color($color, default-contrast);\n          }\n        }\n      }\n    }\n\n    @each $name, $color in $theme-colors {\n      // Set background color of the tabs and override focus color\n      &.mat-background-#{$name} {\n        @include _label-focus-color($color);\n        @include _tabs-background($color);\n      }\n    }\n  }\n}\n\n@mixin _ink-bar-color($color, $hue: default) {\n  .mat-ink-bar {\n    background-color: theming.get-color-from-palette($color, $hue);\n  }\n}\n\n@mixin _label-focus-color($tab-focus-color) {\n  .mat-tab-label,\n  .mat-tab-link {\n    &.cdk-keyboard-focused,\n    &.cdk-program-focused {\n      &:not(.mat-tab-disabled) {\n        background-color: theming.get-color-from-palette($tab-focus-color, lighter, 0.3);\n      }\n    }\n  }\n}\n\n@mixin _tabs-background($background-color) {\n  // Note that these selectors target direct descendants so\n  // that the styles don't apply to any nested tab groups.\n\n  // Set background color for the tab group\n  > .mat-tab-header, > .mat-tab-link-container, > .mat-tab-header-pagination {\n    background-color: theming.get-color-from-palette($background-color);\n  }\n\n  // Set labels to contrast against background\n  > .mat-tab-header .mat-tab-label, > .mat-tab-link-container .mat-tab-link {\n    color: theming.get-color-from-palette($background-color, default-contrast);\n\n    &.mat-tab-disabled {\n      color: theming.get-color-from-palette($background-color, default-contrast, 0.4);\n    }\n  }\n\n  // Set pagination chevrons to contrast background\n  > .mat-tab-header .mat-tab-header-pagination-chevron,\n  > .mat-tab-header-pagination .mat-tab-header-pagination-chevron,\n  > .mat-tab-link-container .mat-focus-indicator::before,\n  > .mat-tab-header .mat-focus-indicator::before {\n    border-color: theming.get-color-from-palette($background-color, default-contrast);\n  }\n\n  > .mat-tab-header .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron,\n  > .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n    // Set the color opacity via `opacity`, rather than `rgba`, because it may be a CSS variable.\n    border-color: theming.get-color-from-palette($background-color, default-contrast, 1);\n    opacity: 0.4;\n  }\n\n  // Set ripples color to be the contrast color of the new background. Otherwise the ripple\n  // color will be based on the app background color.\n  > .mat-tab-header .mat-ripple-element,\n  > .mat-tab-link-container .mat-ripple-element,\n  > .mat-tab-header-pagination .mat-ripple-element {\n    // Set the color opacity via `opacity`, rather than `rgba`, because it may be a CSS variable.\n    background-color: theming.get-color-from-palette($background-color, default-contrast, 1);\n    opacity: 0.12;\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-tab-group {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-tab-label, .mat-tab-link {\n    font: {\n      family: typography-utils.font-family($config, button);\n      size: typography-utils.font-size($config, button);\n      weight: typography-utils.font-weight($config, button);\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-tabs') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/density/private/compatibility';\n@use '../core/style/variables';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use './toolbar-variables';\n\n@mixin _height($height) {\n  .mat-toolbar-multiple-rows {\n    min-height: $height;\n  }\n  .mat-toolbar-row, .mat-toolbar-single-row {\n    height: $height;\n  }\n}\n\n@mixin _palette-styles($palette) {\n  background: theming.get-color-from-palette($palette);\n  color: theming.get-color-from-palette($palette, default-contrast);\n}\n\n@mixin _form-field-overrides {\n  .mat-form-field-underline,\n  .mat-form-field-ripple,\n  .mat-focused .mat-form-field-ripple {\n    background-color: currentColor;\n  }\n\n  .mat-form-field-label,\n  .mat-focused .mat-form-field-label,\n  .mat-select-value,\n  .mat-select-arrow,\n  .mat-form-field.mat-focused .mat-select-arrow {\n    color: inherit;\n  }\n\n  .mat-input-element {\n    caret-color: currentColor;\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-toolbar {\n    background: theming.get-color-from-palette($background, app-bar);\n    color: theming.get-color-from-palette($foreground, text);\n\n    &.mat-primary {\n      @include _palette-styles($primary);\n    }\n\n    &.mat-accent {\n      @include _palette-styles($accent);\n    }\n\n    &.mat-warn {\n      @include _palette-styles($warn);\n    }\n\n    @include _form-field-overrides;\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-toolbar,\n  .mat-toolbar h1,\n  .mat-toolbar h2,\n  .mat-toolbar h3,\n  .mat-toolbar h4,\n  .mat-toolbar h5,\n  .mat-toolbar h6 {\n    @include typography-utils.typography-level($config, title);\n    margin: 0;\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $height-desktop: compatibility.private-density-prop-value(\n      toolbar-variables.$desktop-density-config, $density-scale, height);\n  $height-mobile: compatibility.private-density-prop-value(\n      toolbar-variables.$mobile-density-config, $density-scale, height);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    // Set the default height for the toolbar.\n    @include _height($height-desktop);\n\n    // As per specs, toolbars should have a different height in mobile devices. This has been\n    // specified in the old guidelines and is still observable in the new specifications by\n    // looking at the spec images. See: https://material.io/design/components/app-bars-top.html#anatomy\n    @media (variables.$xsmall) {\n      @include _height($height-mobile);\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-toolbar') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n$target-height: 22px;\n$font-size: 10px;\n$vertical-padding: math.div($target-height - $font-size, 2);\n\n$handset-target-height: 30px;\n$handset-font-size: 14px;\n$handset-vertical-padding: math.div($handset-target-height - $handset-font-size, 2);\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n\n  .mat-tooltip {\n    background: theming.get-color-from-palette($background, tooltip, 0.9);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-tooltip {\n    font-family: typography-utils.font-family($config);\n    font-size: $font-size;\n    padding-top: $vertical-padding;\n    padding-bottom: $vertical-padding;\n  }\n\n  .mat-tooltip-handset {\n    font-size: $handset-font-size;\n    padding-top: $handset-vertical-padding;\n    padding-bottom: $handset-vertical-padding;\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-tooltip') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/style/list-common';\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-list-base {\n    .mat-list-item {\n      color: theming.get-color-from-palette($foreground, text);\n    }\n\n    .mat-list-option {\n      color: theming.get-color-from-palette($foreground, text);\n    }\n\n    .mat-subheader {\n      color: theming.get-color-from-palette($foreground, secondary-text);\n    }\n\n    .mat-list-item-disabled {\n      background-color: theming.get-color-from-palette($background, disabled-list-option);\n      color: theming.get-color-from-palette($foreground, disabled-text);\n    }\n  }\n\n  .mat-list-option,\n  .mat-nav-list .mat-list-item,\n  .mat-action-list .mat-list-item {\n    &:hover, &:focus {\n      background: theming.get-color-from-palette($background, 'hover');\n    }\n  }\n\n  .mat-list-single-selected-option {\n    &, &:hover, &:focus {\n      background: theming.get-color-from-palette($background, hover, 0.12);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  $font-family: typography-utils.font-family($config);\n\n  .mat-list-item {\n    font-family: $font-family;\n  }\n\n  .mat-list-option {\n    font-family: $font-family;\n  }\n\n  // Default list\n  .mat-list-base {\n    .mat-list-item {\n      font-size: typography-utils.font-size($config, subheading-2);\n      @include list-common.base(typography-utils.font-size($config, body-1));\n    }\n\n    .mat-list-option {\n      font-size: typography-utils.font-size($config, subheading-2);\n      @include list-common.base(typography-utils.font-size($config, body-1));\n    }\n\n    .mat-subheader {\n      font-family: typography-utils.font-family($config, body-2);\n      font-size: typography-utils.font-size($config, body-2);\n      font-weight: typography-utils.font-weight($config, body-2);\n    }\n  }\n\n  // Dense list\n  .mat-list-base[dense] {\n    .mat-list-item {\n      font-size: typography-utils.font-size($config, caption);\n      @include list-common.base(typography-utils.font-size($config, caption));\n    }\n\n    .mat-list-option {\n      font-size: typography-utils.font-size($config, caption);\n      @include list-common.base(typography-utils.font-size($config, caption));\n    }\n\n    .mat-subheader {\n      font-family: $font-family;\n      font-size: typography-utils.font-size($config, caption);\n      font-weight: typography-utils.font-weight($config, body-2);\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-list') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../theming/theming';\n@use '../typography/typography';\n@use '../typography/typography-utils';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n\n  .mat-option {\n    color: theming.get-color-from-palette($foreground, text);\n\n    &:hover:not(.mat-option-disabled),\n    &:focus:not(.mat-option-disabled) {\n      background: theming.get-color-from-palette($background, hover);\n    }\n\n    // In multiple mode there is a checkbox to show that the option is selected.\n    &.mat-selected:not(.mat-option-multiple):not(.mat-option-disabled) {\n      background: theming.get-color-from-palette($background, hover);\n    }\n\n    &.mat-active {\n      background: theming.get-color-from-palette($background, hover);\n      color: theming.get-color-from-palette($foreground, text);\n    }\n\n    &.mat-option-disabled {\n      color: theming.get-color-from-palette($foreground, hint-text);\n    }\n  }\n\n  .mat-primary .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: theming.get-color-from-palette($primary, text);\n  }\n\n  .mat-accent .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: theming.get-color-from-palette($accent, text);\n  }\n\n  .mat-warn .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: theming.get-color-from-palette($warn, text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-option {\n    font: {\n      family: typography-utils.font-family($config);\n      size: typography-utils.font-size($config, subheading-2);\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-option') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../theming/theming';\n@use '../typography/typography';\n@use '../typography/typography-utils';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n\n  .mat-optgroup-label {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-optgroup-disabled .mat-optgroup-label {\n    color: theming.get-color-from-palette($foreground, hint-text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-optgroup-label {\n    @include typography-utils.typography-level($config, body-2);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-optgroup') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/theming/theming';\n@use '../core/theming/palette';\n@use '../core/style/private';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $is-dark-theme: map.get($config, is-dark);\n  $accent: map.get($config, accent);\n\n  .mat-snack-bar-container {\n    // Use the primary text on the dark theme, even though the lighter one uses\n    // a secondary, because the contrast on the light primary text is poor.\n    color: if($is-dark-theme, palette.$dark-primary-text, palette.$light-secondary-text);\n    background: if($is-dark-theme, map.get(palette.$grey-palette, 50), #323232);\n\n    @include private.private-theme-elevation(6, $config);\n  }\n\n  .mat-simple-snackbar-action {\n    color: if($is-dark-theme, inherit, theming.get-color-from-palette($accent, text));\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-simple-snackbar {\n    font: {\n      family: typography-utils.font-family($config, body-1);\n      size: typography-utils.font-size($config, body-1);\n    }\n  }\n\n  .mat-simple-snackbar-action {\n    line-height: 1;\n    font: {\n      family: inherit;\n      size: inherit;\n      weight: typography-utils.font-weight($config, button);\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-snack-bar') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/density/private/compatibility';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use './tree-variables';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-tree {\n    background: theming.get-color-from-palette($background, 'card');\n  }\n\n  .mat-tree-node,\n  .mat-nested-tree-node {\n    color: theming.get-color-from-palette($foreground, text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-tree {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-tree-node,\n  .mat-nested-tree-node {\n    font-weight: typography-utils.font-weight($config, body-1);\n    font-size: typography-utils.font-size($config, body-1);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $height: compatibility.private-density-prop-value(tree-variables.$density-config,\n    $density-scale, height);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    .mat-tree-node {\n      min-height: $height;\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-tree') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use '../../../cdk/a11y';\n\n@mixin ripple() {\n  // The host element of an mat-ripple directive should always have a position of \"absolute\" or\n  // \"relative\" so that the ripples inside are correctly positioned relatively to the container.\n  .mat-ripple {\n    overflow: hidden;\n\n    // By default, every ripple container should have position: relative in favor of creating an\n    // easy API for developers using the MatRipple directive.\n    position: relative;\n\n    // Promote containers that have ripples to a new layer. We want to target `:not(:empty)`,\n    // because we don't want all ripple containers to have their own layer since they're used in a\n    // lot of places and the layer is only relevant while animating. Note that ideally we'd use\n    // the `contain` property here (see #13175), because `:empty` can be broken by having extra\n    // text inside the element, but it isn't very well supported yet.\n    &:not(:empty) {\n      transform: translateZ(0);\n    }\n  }\n\n  .mat-ripple.mat-ripple-unbounded {\n    overflow: visible;\n  }\n\n  .mat-ripple-element {\n    position: absolute;\n    border-radius: 50%;\n    pointer-events: none;\n\n    transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\n    transform: scale(0);\n\n    // In high contrast mode the ripple is opaque, causing it to obstruct the content.\n    @include a11y.high-contrast(active, off) {\n      display: none;\n    }\n  }\n}\n","/// Emits a CSS class, `.cdk-visually-hidden`. This class can be applied to an element\n/// to make that element visually hidden while remaining available to assistive technology.\n@mixin a11y-visually-hidden() {\n  .cdk-visually-hidden {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n\n    // This works around a Chrome bug that can cause the tab to crash when large amounts of\n    // non-English text get wrapped: https://bugs.chromium.org/p/chromium/issues/detail?id=1201444\n    white-space: nowrap;\n\n    // Avoid browsers rendering the focus ring in some cases.\n    outline: 0;\n\n    // Avoid some cases where the browser will still render the native controls (see #9049).\n    -webkit-appearance: none;\n    -moz-appearance: none;\n  }\n}\n\n/// @deprecated Use `a11y-visually-hidden`.\n@mixin a11y() {\n  @include a11y-visually-hidden;\n}\n\n/// Emits the mixin's content nested under `$selector-context` if `$selector-context`\n/// is non-empty.\n/// @param {String} selector-context The selector under which to nest the mixin's content.\n@mixin _optionally-nest-content($selector-context) {\n  @if ($selector-context == '') {\n    @content;\n  }\n  @else {\n    #{$selector-context} {\n      @content;\n    }\n  }\n}\n\n/// Applies styles for users in high contrast mode. Note that this only applies\n/// to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\n/// attribute, however Chrome handles high contrast differently.\n///\n/// @param {String} target Type of high contrast setting to target. Defaults to `active`, can be\n///     `white-on-black` or `black-on-white`.\n/// @param {String} encapsulation Whether to emit styles for view encapsulation. Values are:\n///     * `on` - works for `Emulated`, `Native`, and `ShadowDom`\n///     * `off` - works for `None`\n///     * `any` - works for all encapsulation modes by emitting the CSS twice (default).\n@mixin high-contrast($target: active, $encapsulation: 'any') {\n  @if ($target != 'active' and $target != 'black-on-white' and $target != 'white-on-black') {\n    @error 'Unknown cdk-high-contrast value \"#{$target}\" provided. ' +\n           'Allowed values are \"active\", \"black-on-white\", and \"white-on-black\"';\n  }\n\n  @if ($encapsulation != 'on' and $encapsulation != 'off' and $encapsulation != 'any') {\n    @error 'Unknown cdk-high-contrast encapsulation \"#{$encapsulation}\" provided. ' +\n           'Allowed values are \"on\", \"off\", and \"any\"';\n  }\n\n  // If the selector context has multiple parts, such as `.section, .region`, just doing\n  // `.cdk-high-contrast-xxx #{&}` will only apply the parent selector to the first part of the\n  // context. We address this by nesting the selector context under .cdk-high-contrast.\n  @at-root {\n    $selector-context: #{&};\n\n    @if ($encapsulation != 'on') {\n      // Note that if this selector is updated, the same change has to be made inside\n      // `_overlay.scss` which can't depend on this mixin due to some infrastructure limitations.\n      .cdk-high-contrast-#{$target} {\n        @include _optionally-nest-content($selector-context) {\n          @content;\n        }\n      }\n    }\n\n    @if ($encapsulation != 'off') {\n      .cdk-high-contrast-#{$target} :host {\n        @include _optionally-nest-content($selector-context) {\n          @content;\n        }\n      }\n    }\n  }\n}\n","// We want overlays to always appear over user content, so set a baseline\n// very high z-index for the overlay container, which is where we create the new\n// stacking context for all overlays.\n$overlay-container-z-index: 1000 !default;\n$overlay-z-index: 1000 !default;\n$overlay-backdrop-z-index: 1000 !default;\n\n// Background color for all of the backdrops\n$overlay-backdrop-color: rgba(0, 0, 0, 0.32) !default;\n\n// Default backdrop animation is based on the Material Design swift-ease-out.\n$backdrop-animation-duration: 400ms !default;\n$backdrop-animation-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\n\n/// Emits structural styles required for cdk/overlay to function.\n@mixin overlay() {\n  .cdk-overlay-container, .cdk-global-overlay-wrapper {\n    // Disable events from being captured on the overlay container.\n    pointer-events: none;\n\n    // The container should be the size of the viewport.\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n  }\n\n  // The overlay-container is an invisible element which contains all individual overlays.\n  .cdk-overlay-container {\n    position: fixed;\n    z-index: $overlay-container-z-index;\n\n    &:empty {\n      // Hide the element when it doesn't have any child nodes. This doesn't\n      // include overlays that have been detached, rather than disposed.\n      display: none;\n    }\n  }\n\n  // We use an extra wrapper element in order to use make the overlay itself a flex item.\n  // This makes centering the overlay easy without running into the subpixel rendering\n  // problems tied to using `transform` and without interfering with the other position\n  // strategies.\n  .cdk-global-overlay-wrapper {\n    display: flex;\n    position: absolute;\n    z-index: $overlay-z-index;\n  }\n\n  // A single overlay pane.\n  .cdk-overlay-pane {\n    // Note: it's important for this one to start off `absolute`,\n    // in order for us to be able to measure it correctly.\n    position: absolute;\n    pointer-events: auto;\n    box-sizing: border-box;\n    z-index: $overlay-z-index;\n\n    // For connected-position overlays, we set `display: flex` in\n    // order to force `max-width` and `max-height` to take effect.\n    display: flex;\n    max-width: 100%;\n    max-height: 100%;\n  }\n\n  .cdk-overlay-backdrop {\n    // TODO(jelbourn): reuse sidenav fullscreen mixin.\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n\n    z-index: $overlay-backdrop-z-index;\n    pointer-events: auto;\n    -webkit-tap-highlight-color: transparent;\n    transition: opacity $backdrop-animation-duration $backdrop-animation-timing-function;\n    opacity: 0;\n\n    &.cdk-overlay-backdrop-showing {\n      opacity: 1;\n\n      // Note that we can't import and use the `high-contrast` mixin from `_a11y.scss`, because\n      // this file will be copied to the top-level `cdk` package when putting together the files\n      // for npm. Any relative import paths we use here will become invalid once the file is copied.\n      .cdk-high-contrast-active & {\n        // In high contrast mode the rgba background will become solid\n        // so we need to fall back to making it opaque using `opacity`.\n        opacity: 0.6;\n      }\n    }\n  }\n\n  .cdk-overlay-dark-backdrop {\n    background: $overlay-backdrop-color;\n  }\n\n  .cdk-overlay-transparent-backdrop {\n    // Note: as of Firefox 57, having the backdrop be `background: none` will prevent it from\n    // capturing the user's mouse scroll events. Since we also can't use something like\n    // `rgba(0, 0, 0, 0)`, we work around the inconsistency by not setting the background at\n    // all and using `opacity` to make the element transparent.\n    &, &.cdk-overlay-backdrop-showing {\n      opacity: 0;\n    }\n  }\n\n  // Overlay parent element used with the connected position strategy. Used to constrain the\n  // overlay element's size to fit within the viewport.\n  .cdk-overlay-connected-position-bounding-box {\n    position: absolute;\n    z-index: $overlay-z-index;\n\n    // We use `display: flex` on this element exclusively for centering connected overlays.\n    // When *not* centering, a top/left/bottom/right will be set which overrides the normal\n    // flex layout.\n    display: flex;\n\n    // We use the `column` direction here to avoid some flexbox issues in Edge\n    // when using the \"grow after open\" options.\n    flex-direction: column;\n\n    // Add some dimensions so the element has an `innerText` which some people depend on in tests.\n    min-width: 1px;\n    min-height: 1px;\n  }\n\n  // Used when disabling global scrolling.\n  .cdk-global-scrollblock {\n    position: fixed;\n\n    // Necessary for the content not to lose its width. Note that we're using 100%, instead of\n    // 100vw, because 100vw includes the width plus the scrollbar, whereas 100% is the width\n    // that the element had before we made it `fixed`.\n    width: 100%;\n\n    // Note: this will always add a scrollbar to whatever element it is on, which can\n    // potentially result in double scrollbars. It shouldn't be an issue, because we won't\n    // block scrolling on a page that doesn't have a scrollbar in the first place.\n    overflow-y: scroll;\n  }\n}\n","// Structural styles for the autosize text fields.\n@mixin text-field-autosize() {\n  // Remove the resize handle on autosizing textareas, because whatever height\n  // the user resized to will be overwritten once they start typing again.\n  textarea.cdk-textarea-autosize {\n    resize: none;\n  }\n\n  // This class is temporarily applied to the textarea when it is being measured. It is immediately\n  // removed when measuring is complete. We use `!important` rules here to make sure user-specified\n  // rules do not interfere with the measurement.\n  textarea.cdk-textarea-autosize-measuring {\n    @include _autosize-measuring-base;\n    height: auto !important;\n    overflow: hidden !important;\n  }\n\n  // Similar to the `cdk-textarea-autosize-measuring` class, but only applied on Firefox. We need\n  // to use this class, because Firefox has a bug where changing the `overflow` breaks the user's\n  // ability to undo/redo what they were typing (see #16629). This class is only scoped to Firefox,\n  // because the measurements there don't seem to be affected by the `height: 0`, whereas on other\n  // browsers they are, e.g. Chrome detects longer text and IE does't resize back to normal.\n  // Identical issue report: https://bugzilla.mozilla.org/show_bug.cgi?id=448784\n  textarea.cdk-textarea-autosize-measuring-firefox {\n    @include _autosize-measuring-base;\n    height: 0 !important;\n  }\n}\n\n// Core styles that enable monitoring autofill state of text fields.\n@mixin text-field-autofill() {\n  // Keyframes that apply no styles, but allow us to monitor when an text field becomes autofilled\n  // by watching for the animation events that are fired when they start. Note: the /*!*/ comment is\n  // needed to prevent LibSass from stripping the keyframes out.\n  // Based on: https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n  @keyframes cdk-text-field-autofill-start {/*!*/}\n  @keyframes cdk-text-field-autofill-end {/*!*/}\n\n  .cdk-text-field-autofill-monitored:-webkit-autofill {\n    // Since Chrome 80 we need a 1ms delay, or the animationstart event won't fire.\n    animation: cdk-text-field-autofill-start 0s 1ms;\n  }\n\n  .cdk-text-field-autofill-monitored:not(:-webkit-autofill) {\n    // Since Chrome 80 we need a 1ms delay, or the animationstart event won't fire.\n    animation: cdk-text-field-autofill-end 0s 1ms;\n  }\n}\n\n@mixin _autosize-measuring-base {\n  // Having 2px top and bottom padding seems to fix a bug where Chrome gets an incorrect\n  // measurement. We just have to account for it later and subtract it off the final result.\n  padding: 2px 0 !important;\n  box-sizing: content-box !important;\n}\n\n// Used to generate UIDs for keyframes used to change the text field autofill styles.\n$autofill-color-frame-count: 0;\n\n// Mixin used to apply custom background and foreground colors to an autofilled text field.\n// Based on: https://stackoverflow.com/questions/2781549/\n// removing-input-background-colour-for-chrome-autocomplete#answer-37432260\n@mixin text-field-autofill-color($background, $foreground:'') {\n  @keyframes cdk-text-field-autofill-color-#{$autofill-color-frame-count} {\n    to {\n      background: $background;\n      @if $foreground != '' { color: $foreground; }\n    }\n  }\n\n  &:-webkit-autofill {\n    animation: cdk-text-field-autofill-color-#{$autofill-color-frame-count} both;\n  }\n\n  &.cdk-text-field-autofill-monitored:-webkit-autofill {\n    // Since Chrome 80 we need a 1ms delay for cdk-text-field-autofill-start, or the animationstart\n    // event won't fire.\n    animation: cdk-text-field-autofill-start 0s 1ms,\n               cdk-text-field-autofill-color-#{$autofill-color-frame-count} both;\n  }\n\n  $autofill-color-frame-count: $autofill-color-frame-count + 1 !global;\n}\n\n// @deprecated Use `autosize` and `autofill` instead.\n@mixin text-field {\n  @include text-field-autosize();\n  @include text-field-autofill();\n}\n","@use 'sass:map';\n@use '../style/layout-common';\n\n/// Mixin that turns on strong focus indicators.\n///\n/// @example\n///   .my-app {\n///     @include mat-strong-focus-indicators($config);\n///   }\n@mixin strong-focus-indicators($config: ()) {\n  // Default focus indicator config.\n  $default-config: (\n    border-style: solid,\n    border-width: 3px,\n    border-radius: 4px,\n  );\n\n  // Merge default config with user config.\n  $config: map.merge($default-config, $config);\n  $border-style: map.get($config, border-style);\n  $border-width: map.get($config, border-width);\n  $border-radius: map.get($config, border-radius);\n\n  // Base styles for focus indicators.\n  .mat-focus-indicator::before {\n    @include layout-common.fill();\n    box-sizing: border-box;\n    pointer-events: none;\n    border: $border-width $border-style transparent;\n    border-radius: $border-radius;\n\n    .cdk-high-contrast-active & {\n      display: none;\n    }\n  }\n\n  // By default, all focus indicators are flush with the bounding box of their\n  // host element. For particular elements (listed below), default inset/offset\n  // values are necessary to ensure that the focus indicator is sufficiently\n  // contrastive and renders appropriately.\n\n  .mat-focus-indicator.mat-flat-button::before,\n  .mat-focus-indicator.mat-raised-button::before,\n  .mat-focus-indicator.mat-fab::before,\n  .mat-focus-indicator.mat-mini-fab::before,\n  .mat-focus-indicator.mat-chip::before,\n  .mat-focus-indicator.mat-sort-header-container::before {\n    margin: -($border-width + 2px);\n  }\n\n  .mat-focus-indicator.mat-stroked-button::before,\n  .mat-focus-indicator.mat-calendar-body-cell-content::before {\n    margin: -($border-width + 3px);\n  }\n\n  .mat-focus-indicator.mat-tab-link::before,\n  .mat-focus-indicator.mat-tab-label::before {\n    margin: 5px;\n  }\n\n  // Render the focus indicator on focus. Defining a pseudo element's\n  // content will cause it to render.\n\n  // Checkboxes, radios, and slide toggles render focus indicators when the\n  // associated visually-hidden input is focused.\n  .mat-checkbox-input:focus ~ .mat-focus-indicator::before,\n  .mat-radio-input:focus ~ .mat-focus-indicator::before,\n  .mat-slide-toggle-input:focus ~ .mat-slide-toggle-thumb-container .mat-focus-indicator::before,\n\n  // For options, render the focus indicator when the class .mat-active\n  // is present.\n  .mat-focus-indicator.mat-option.mat-active::before,\n\n  // For calendar cells, render the focus indicator when the parent cell is\n  // focused.\n  .mat-calendar-body-cell:focus .mat-focus-indicator::before,\n\n  // Stepper headers have the focus indicator as a descendant,\n  // because `::before` is used for other styling.\n  .mat-step-header:focus .mat-focus-indicator::before,\n\n  // For all other components, render the focus indicator on focus.\n  .mat-focus-indicator:focus::before {\n    content: '';\n  }\n}\n\n// Mixin that ensures focus indicator host elements are positioned so that the focus indicator\n// pseudo element within is positioned relative to the host. Private mixin included within\n// `mat-core`.\n@mixin private-strong-focus-indicators-positioning() {\n  .mat-focus-indicator {\n    position: relative;\n  }\n}\n","@use '../../cdk/overlay';\n@use '../../cdk/a11y';\n@use '../../cdk/text-field';\n\n// Core styles that can be used to apply material design treatments to any element.\n@use './ripple/ripple';\n@use './focus-indicators/focus-indicators';\n@use './typography/all-typography';\n\n// Mixin that renders all of the core styles that are not theme-dependent.\n@mixin core($typography-config: null) {\n  @include all-typography.all-component-typographies($typography-config);\n  @include ripple.ripple();\n  @include a11y.a11y-visually-hidden();\n  @include overlay.overlay();\n  @include text-field.text-field-autosize();\n  @include text-field.text-field-autofill();\n\n  @include focus-indicators.private-strong-focus-indicators-positioning();\n  @include _mdc-core();\n}\n\n// Mixin that renders all of the core MDC styles. Private mixin included with `mat-core`.\n@mixin _mdc-core() {\n  @include _mdc-strong-focus-indicators-positioning();\n}\n\n// Mixin that ensures focus indicator host elements are positioned so that the focus indicator\n// pseudo element within is positioned relative to the host. Private mixin included within\n// `_mat-mdc-core`.\n@mixin _mdc-strong-focus-indicators-positioning() {\n  .mat-mdc-focus-indicator {\n    position: relative;\n  }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '../theming/theming';\n\n// Colors for the ripple elements.\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $foreground-base: map.get($foreground, base);\n  $color-opacity: 0.1;\n\n  .mat-ripple-element {\n    // If the ripple color is resolves to a color *type*, we can use it directly, otherwise\n    // (e.g. it resolves to a CSS variable) we fall back to using the color and setting an opacity.\n    @if (meta.type-of($foreground-base) == color) {\n      background-color: rgba($foreground-base, $color-opacity);\n    }\n    @else {\n      background-color: $foreground-base;\n      opacity: $color-opacity;\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-ripple') {\n    $color: theming.get-color-config($theme);\n    @if $color != null {\n      @include color($color);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../../theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $is-dark-theme: map.get($config, is-dark);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n  $colored-box-selector: '.mat-pseudo-checkbox-checked, .mat-pseudo-checkbox-indeterminate';\n\n  .mat-pseudo-checkbox {\n    color: theming.get-color-from-palette(map.get($config, foreground), secondary-text);\n\n    &::after {\n      color: theming.get-color-from-palette($background, background);\n    }\n  }\n\n  .mat-pseudo-checkbox-disabled {\n    color: $disabled-color;\n  }\n\n  .mat-primary .mat-pseudo-checkbox-checked,\n  .mat-primary .mat-pseudo-checkbox-indeterminate {\n    background: theming.get-color-from-palette(map.get($config, primary));\n  }\n\n  // Default to the accent color. Note that the pseudo checkboxes are meant to inherit the\n  // theme from their parent, rather than implementing their own theming, which is why we\n  // don't attach to the `mat-*` classes. Also note that this needs to be below `.mat-primary`\n  // in order to allow for the color to be overwritten if the checkbox is inside a parent that\n  // has `mat-accent` and is placed inside another parent that has `mat-primary`.\n  .mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-indeterminate,\n  .mat-accent .mat-pseudo-checkbox-checked,\n  .mat-accent .mat-pseudo-checkbox-indeterminate {\n    background: theming.get-color-from-palette(map.get($config, accent));\n  }\n\n  .mat-warn .mat-pseudo-checkbox-checked,\n  .mat-warn .mat-pseudo-checkbox-indeterminate {\n    background: theming.get-color-from-palette(map.get($config, warn));\n  }\n\n  .mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-indeterminate {\n    &.mat-pseudo-checkbox-disabled {\n      background: $disabled-color;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-pseudo-checkbox') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'theming/theming';\n@use './style/private';\n@use './ripple/ripple-theme';\n@use './option/option-theme';\n@use './option/optgroup-theme';\n@use './selection/pseudo-checkbox/pseudo-checkbox-theme';\n@use './style/elevation';\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  // Wrapper element that provides the theme background when the user's content isn't\n  // inside of a `mat-sidenav-container`. Note that we need to exclude the ampersand\n  // selector in case the mixin is included at the top level.\n  .mat-app-background#{if(&, ', &.mat-app-background', '')} {\n    $background: map.get($config, background);\n    $foreground: map.get($config, foreground);\n\n    background-color: theming.get-color-from-palette($background, background);\n    color: theming.get-color-from-palette($foreground, text);\n  }\n\n  // Provides external CSS classes for each elevation value. Each CSS class is formatted as\n  // `mat-elevation-z$zValue` where `$zValue` corresponds to the z-space to which the element is\n  // elevated.\n  @for $zValue from 0 through 24 {\n    .#{elevation.$prefix}#{$zValue} {\n      @include private.private-theme-elevation($zValue, $config);\n    }\n  }\n\n  // Marker that is used to determine whether the user has added a theme to their page.\n  @at-root {\n    .mat-theme-loaded-marker {\n      display: none;\n    }\n  }\n}\n\n// Mixin that renders all of the core styles that depend on the theme.\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  // Wrap the sub-theme includes in the duplicate theme styles mixin. This ensures that\n  // there won't be multiple warnings. e.g. if `mat-core-theme` reports a warning, then\n  // the imported themes (such as `mat-ripple-theme`) should not report again.\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-core') {\n    @include ripple-theme.theme($theme);\n    @include option-theme.theme($theme);\n    @include optgroup-theme.theme($theme);\n    @include pseudo-checkbox-theme.theme($theme);\n\n    $color: theming.get-color-config($theme);\n    @if $color != null {\n      @include color($color);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use 'sass:meta';\n@use 'variables';\n\n\n// A collection of mixins and CSS classes that can be used to apply elevation to a material\n// element.\n// See: https://material.io/design/environment/elevation.html\n// Examples:\n//\n//\n// .mat-foo {\n//   @include $mat-elevation(2);\n//\n//   &:active {\n//     @include $mat-elevation(8);\n//   }\n// }\n//\n// <div id=\"external-card\" class=\"mat-elevation-z2\"><p>Some content</p></div>\n//\n// For an explanation of the design behind how elevation is implemented, see the design doc at\n// https://goo.gl/Kq0k9Z.\n\n// Colors for umbra, penumbra, and ambient shadows. As described in the design doc, each elevation\n// level is created using a set of 3 shadow values, one for umbra (the shadow representing the\n// space completely obscured by an object relative to its light source), one for penumbra (the\n// space partially obscured by an object), and one for ambient (the space which contains the object\n// itself). For a further explanation of these terms and their meanings, see\n// https://en.wikipedia.org/wiki/Umbra,_penumbra_and_antumbra.\n\n// Maps for the different shadow sets and their values within each z-space. These values were\n// created by taking a few reference shadow sets created by Google's Designers and interpolating\n// all of the values between them.\n\n@function _get-umbra-map($color, $opacity) {\n  $shadow-color: if(meta.type-of($color) == color, rgba($color, $opacity * 0.2), $color);\n\n  @return (\n    0: '0px 0px 0px 0px #{$shadow-color}',\n    1: '0px 2px 1px -1px #{$shadow-color}',\n    2: '0px 3px 1px -2px #{$shadow-color}',\n    3: '0px 3px 3px -2px #{$shadow-color}',\n    4: '0px 2px 4px -1px #{$shadow-color}',\n    5: '0px 3px 5px -1px #{$shadow-color}',\n    6: '0px 3px 5px -1px #{$shadow-color}',\n    7: '0px 4px 5px -2px #{$shadow-color}',\n    8: '0px 5px 5px -3px #{$shadow-color}',\n    9: '0px 5px 6px -3px #{$shadow-color}',\n    10: '0px 6px 6px -3px #{$shadow-color}',\n    11: '0px 6px 7px -4px #{$shadow-color}',\n    12: '0px 7px 8px -4px #{$shadow-color}',\n    13: '0px 7px 8px -4px #{$shadow-color}',\n    14: '0px 7px 9px -4px #{$shadow-color}',\n    15: '0px 8px 9px -5px #{$shadow-color}',\n    16: '0px 8px 10px -5px #{$shadow-color}',\n    17: '0px 8px 11px -5px #{$shadow-color}',\n    18: '0px 9px 11px -5px #{$shadow-color}',\n    19: '0px 9px 12px -6px #{$shadow-color}',\n    20: '0px 10px 13px -6px #{$shadow-color}',\n    21: '0px 10px 13px -6px #{$shadow-color}',\n    22: '0px 10px 14px -6px #{$shadow-color}',\n    23: '0px 11px 14px -7px #{$shadow-color}',\n    24: '0px 11px 15px -7px #{$shadow-color}'\n  );\n}\n\n@function _get-penumbra-map($color, $opacity) {\n  $shadow-color: if(meta.type-of($color) == color, rgba($color, $opacity * 0.14), $color);\n\n  @return (\n    0: '0px 0px 0px 0px #{$shadow-color}',\n    1: '0px 1px 1px 0px #{$shadow-color}',\n    2: '0px 2px 2px 0px #{$shadow-color}',\n    3: '0px 3px 4px 0px #{$shadow-color}',\n    4: '0px 4px 5px 0px #{$shadow-color}',\n    5: '0px 5px 8px 0px #{$shadow-color}',\n    6: '0px 6px 10px 0px #{$shadow-color}',\n    7: '0px 7px 10px 1px #{$shadow-color}',\n    8: '0px 8px 10px 1px #{$shadow-color}',\n    9: '0px 9px 12px 1px #{$shadow-color}',\n    10: '0px 10px 14px 1px #{$shadow-color}',\n    11: '0px 11px 15px 1px #{$shadow-color}',\n    12: '0px 12px 17px 2px #{$shadow-color}',\n    13: '0px 13px 19px 2px #{$shadow-color}',\n    14: '0px 14px 21px 2px #{$shadow-color}',\n    15: '0px 15px 22px 2px #{$shadow-color}',\n    16: '0px 16px 24px 2px #{$shadow-color}',\n    17: '0px 17px 26px 2px #{$shadow-color}',\n    18: '0px 18px 28px 2px #{$shadow-color}',\n    19: '0px 19px 29px 2px #{$shadow-color}',\n    20: '0px 20px 31px 3px #{$shadow-color}',\n    21: '0px 21px 33px 3px #{$shadow-color}',\n    22: '0px 22px 35px 3px #{$shadow-color}',\n    23: '0px 23px 36px 3px #{$shadow-color}',\n    24: '0px 24px 38px 3px #{$shadow-color}'\n  );\n}\n\n@function _get-ambient-map($color, $opacity) {\n  $shadow-color: if(meta.type-of($color) == color, rgba($color, $opacity * 0.12), $color);\n\n  @return (\n    0: '0px 0px 0px 0px #{$shadow-color}',\n    1: '0px 1px 3px 0px #{$shadow-color}',\n    2: '0px 1px 5px 0px #{$shadow-color}',\n    3: '0px 1px 8px 0px #{$shadow-color}',\n    4: '0px 1px 10px 0px #{$shadow-color}',\n    5: '0px 1px 14px 0px #{$shadow-color}',\n    6: '0px 1px 18px 0px #{$shadow-color}',\n    7: '0px 2px 16px 1px #{$shadow-color}',\n    8: '0px 3px 14px 2px #{$shadow-color}',\n    9: '0px 3px 16px 2px #{$shadow-color}',\n    10: '0px 4px 18px 3px #{$shadow-color}',\n    11: '0px 4px 20px 3px #{$shadow-color}',\n    12: '0px 5px 22px 4px #{$shadow-color}',\n    13: '0px 5px 24px 4px #{$shadow-color}',\n    14: '0px 5px 26px 4px #{$shadow-color}',\n    15: '0px 6px 28px 5px #{$shadow-color}',\n    16: '0px 6px 30px 5px #{$shadow-color}',\n    17: '0px 6px 32px 5px #{$shadow-color}',\n    18: '0px 7px 34px 6px #{$shadow-color}',\n    19: '0px 7px 36px 6px #{$shadow-color}',\n    20: '0px 8px 38px 7px #{$shadow-color}',\n    21: '0px 8px 40px 7px #{$shadow-color}',\n    22: '0px 8px 42px 7px #{$shadow-color}',\n    23: '0px 9px 44px 8px #{$shadow-color}',\n    24: '0px 9px 46px 8px #{$shadow-color}'\n  );\n}\n\n// The default duration value for elevation transitions.\n$transition-duration: 280ms !default;\n\n// The default easing value for elevation transitions.\n$transition-timing-function: variables.$fast-out-slow-in-timing-function;\n\n// The default color for elevation shadows.\n$color: black !default;\n\n// The default opacity scaling value for elevation shadows.\n$opacity: 1 !default;\n\n// Prefix for elevation-related selectors.\n$prefix: 'mat-elevation-z';\n\n// Applies the correct css rules to an element to give it the elevation specified by $zValue.\n// The $zValue must be between 0 and 24.\n@mixin elevation($zValue, $color: $color, $opacity: $opacity) {\n  @if meta.type-of($zValue) != number or not math.is-unitless($zValue) {\n    @error '$zValue must be a unitless number';\n  }\n  @if $zValue < 0 or $zValue > 24 {\n    @error '$zValue must be between 0 and 24';\n  }\n\n  box-shadow: #{map.get(_get-umbra-map($color, $opacity), $zValue)},\n              #{map.get(_get-penumbra-map($color, $opacity), $zValue)},\n              #{map.get(_get-ambient-map($color, $opacity), $zValue)};\n}\n\n// Applies the elevation to an element in a manner that allows\n// consumers to override it via the Material elevation classes.\n@mixin overridable-elevation(\n    $zValue,\n    $color: $color,\n    $opacity: $opacity) {\n  &:not([class*='#{$prefix}']) {\n    @include elevation($zValue, $color, $opacity);\n  }\n}\n\n// Returns a string that can be used as the value for a transition property for elevation.\n// Calling this function directly is useful in situations where a component needs to transition\n// more than one property.\n//\n// .foo {\n//   transition: mat-elevation-transition-property-value(), opacity 100ms ease;\n// }\n@function private-transition-property-value(\n    $duration: $transition-duration,\n    $easing: $transition-timing-function) {\n  @return box-shadow #{$duration} #{$easing};\n}\n\n// Applies the correct css rules needed to have an element transition between elevations.\n// This mixin should be applied to elements whose elevation values will change depending on their\n// context (e.g. when active or disabled).\n//\n// NOTE(traviskaufman): Both this mixin and the above function use default parameters so they can\n// be used in the same way by clients.\n@mixin elevation-transition(\n    $duration: $transition-duration,\n    $easing: $transition-timing-function) {\n  transition: private-transition-property-value($duration, $easing);\n}\n","@use 'sass:map';\n@use '../core/style/private';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n\n  .mat-autocomplete-panel {\n    @include private.private-theme-overridable-elevation(4, $config);\n    background: theming.get-color-from-palette($background, card);\n    color: theming.get-color-from-palette($foreground, text);\n\n    // Selected options in autocompletes should not be gray, but we\n    // only want to override the background for selected options if\n    // they are *not* in hover or focus state. This change has to be\n    // made here because base option styles are shared between the\n    // autocomplete and the select.\n    .mat-option.mat-selected:not(.mat-active):not(:hover) {\n      background: theming.get-color-from-palette($background, card);\n\n      &:not(.mat-option-disabled) {\n        color: theming.get-color-from-palette($foreground, text);\n      }\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-autocomplete') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n\n  .mat-divider {\n    border-top-color: theming.get-color-from-palette($foreground, divider);\n  }\n\n  .mat-divider-vertical {\n    border-right-color: theming.get-color-from-palette($foreground, divider);\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-divider') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@mixin private-expansion-focus {\n  .mat-expansion-panel {\n    & .mat-expansion-panel-header.cdk-keyboard-focused,\n    & .mat-expansion-panel-header.cdk-program-focused,\n    &:not(.mat-expanded) .mat-expansion-panel-header:hover {\n      &:not([aria-disabled='true']) {\n        @content;\n      }\n    }\n  }\n}\n","@use 'sass:map';\n@use '../theming/theming';\n\n// Renders a gradient for showing the dashed line when the input is disabled.\n// Unlike using a border, a gradient allows us to adjust the spacing of the dotted line\n// to match the Material Design spec.\n@mixin private-control-disabled-underline($color) {\n  background-image: linear-gradient(to right, $color 0%, $color 33%, transparent 0%);\n  background-size: 4px 100%;\n  background-repeat: repeat-x;\n}\n\n// Figures out the color of the placeholder for a form control.\n// Used primarily to prevent the various form controls from\n// becoming out of sync since these colors aren't in a palette.\n@function private-control-placeholder-color($config) {\n  $foreground: map.get($config, foreground);\n  $is-dark-theme: map.get($config, is-dark);\n  @return theming.get-color-from-palette($foreground, secondary-text,\n    if($is-dark-theme, 0.5, 0.42));\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/style/form-common';\n\n\n// Theme styles that only apply to the standard appearance of the form-field.\n\n@mixin standard-color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $is-dark-theme: map.get($config, is-dark);\n  $underline-color:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 0.7, 0.42));\n\n  .mat-form-field-appearance-standard {\n    .mat-form-field-underline {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-underline {\n      @include form-common.private-control-disabled-underline($underline-color);\n    }\n  }\n}\n\n@mixin standard-typography($config-or-theme) {}\n\n@mixin private-form-field-standard-density($config-or-theme) {}\n\n@mixin standard-theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-form-field-standard') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include standard-color($color);\n    }\n    @if $density != null {\n      @include private-form-field-standard-density($density);\n    }\n    @if $typography != null {\n      @include standard-typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-icon {\n    &.mat-primary {\n      color: theming.get-color-from-palette($primary, text);\n    }\n\n    &.mat-accent {\n      color: theming.get-color-from-palette($accent, text);\n    }\n\n    &.mat-warn {\n      color: theming.get-color-from-palette($warn, text);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-icon') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","// stylelint-disable material/no-prefixes\n@mixin user-select($value) {\n  -webkit-user-select: $value;\n  -moz-user-select: $value;\n  user-select: $value;\n}\n\n@mixin input-placeholder {\n  &::placeholder {\n    @content;\n  }\n\n  &::-moz-placeholder {\n    @content;\n  }\n\n  &::-webkit-input-placeholder {\n    @content;\n  }\n\n  // Note: this isn't necessary anymore since we don't support\n  // IE, but it caused some presubmit failures in #23416.\n  &:-ms-input-placeholder {\n    @content;\n  }\n}\n\n@mixin cursor-grab {\n  cursor: -webkit-grab;\n  cursor: grab;\n}\n\n@mixin cursor-grabbing {\n  cursor: -webkit-grabbing;\n  cursor: grabbing;\n}\n\n@mixin backface-visibility($value) {\n  -webkit-backface-visibility: $value;\n  backface-visibility: $value;\n}\n\n@mixin position-sticky($important: false) {\n  position: -webkit-sticky #{if($important, '!important', '')};\n  position: sticky #{if($important, '!important', '')};\n}\n\n@mixin private-color-adjust($value) {\n  -webkit-print-color-adjust: $value;\n  color-adjust: $value;\n}\n\n@mixin private-background-clip($value) {\n  -webkit-background-clip: $value;\n  background-clip: $value;\n}\n// stylelint-enable\n","@use 'sass:map';\n@use 'sass:meta';\n@use 'sass:color';\n@use '../core/theming/theming';\n\n// Approximates the correct buffer color by using a mix between the theme color\n// and the theme's background color.\n@function _get-buffer-color($theme, $background) {\n  $theme-color: theming.get-color-from-palette($theme);\n  // Return fallback color if the theme uses variables to define colors.\n  @if (meta.type-of($theme-color) != 'color' or meta.type-of($background) != 'color') {\n    @return theming.get-color-from-palette($theme, lighter);\n  }\n  @return color.mix($theme-color, $background, $weight: 25%);\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get(map.get($config, background), background);\n\n  .mat-progress-bar-background {\n    fill: _get-buffer-color($primary, $background);\n  }\n\n  .mat-progress-bar-buffer {\n    background-color: _get-buffer-color($primary, $background);\n  }\n\n  .mat-progress-bar-fill::after {\n    background-color: theming.get-color-from-palette($primary);\n  }\n\n  .mat-progress-bar.mat-accent {\n    .mat-progress-bar-background {\n      fill: _get-buffer-color($accent, $background);\n    }\n\n    .mat-progress-bar-buffer {\n      background-color: _get-buffer-color($accent, $background);\n    }\n\n    .mat-progress-bar-fill::after {\n      background-color: theming.get-color-from-palette($accent);\n    }\n  }\n\n  .mat-progress-bar.mat-warn {\n    .mat-progress-bar-background {\n      fill: _get-buffer-color($warn, $background);\n    }\n\n    .mat-progress-bar-buffer {\n      background-color: _get-buffer-color($warn, $background);\n    }\n\n    .mat-progress-bar-fill::after {\n      background-color: theming.get-color-from-palette($warn);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-progress-bar') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use 'sass:map';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n\n  .mat-progress-spinner, .mat-spinner {\n    circle {\n      stroke: theming.get-color-from-palette($primary);\n    }\n\n    &.mat-accent circle {\n      stroke: theming.get-color-from-palette($accent);\n    }\n\n    &.mat-warn circle {\n      stroke: theming.get-color-from-palette($warn);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-progress-spinner') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:color';\n@use 'sass:map';\n@use 'sass:meta';\n@use '../core/style/private';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  $drawer-background-color: theming.get-color-from-palette($background, dialog);\n  $drawer-container-background-color:  theming.get-color-from-palette($background, background);\n  $drawer-push-background-color: theming.get-color-from-palette($background, dialog);\n  $drawer-side-border: solid 1px theming.get-color-from-palette($foreground, divider);\n\n  .mat-drawer-container {\n    background-color: $drawer-container-background-color;\n    color: theming.get-color-from-palette($foreground, text);\n  }\n\n  .mat-drawer {\n    background-color: $drawer-background-color;\n    color: theming.get-color-from-palette($foreground, text);\n\n    &.mat-drawer-push {\n      background-color: $drawer-push-background-color;\n    }\n\n    &:not(.mat-drawer-side) {\n      // The elevation of z-16 is noted in the design specifications.\n      // See https://material.io/design/components/navigation-drawer.html\n      @include private.private-theme-elevation(16, $config);\n    }\n  }\n\n  .mat-drawer-side {\n    border-right: $drawer-side-border;\n\n    &.mat-drawer-end {\n      border-left: $drawer-side-border;\n      border-right: none;\n    }\n  }\n\n  [dir='rtl'] .mat-drawer-side {\n    border-left: $drawer-side-border;\n    border-right: none;\n\n    &.mat-drawer-end {\n      border-left: none;\n      border-right: $drawer-side-border;\n    }\n  }\n\n  .mat-drawer-backdrop.mat-drawer-shown {\n    $opacity: 0.6;\n    $backdrop-color: theming.get-color-from-palette($background, card, $opacity);\n\n    @if (meta.type-of($backdrop-color) == color) {\n      // We use invert() here to have the darken the background color expected to be used. If the\n      // background is light, we use a dark backdrop. If the background is dark,\n      // we use a light backdrop.\n      background-color: color.invert($backdrop-color);\n    }\n    @else {\n      // If we couldn't resolve the backdrop color to a color value, fall back to using\n      // `opacity` to make it opaque since its end value could be a solid color.\n      background-color: $backdrop-color;\n      opacity: $opacity;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-sidenav') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:color';\n@use 'sass:map';\n@use 'sass:meta';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-sort-header-arrow {\n    $table-background: theming.get-color-from-palette($background, 'card');\n    $text-color: theming.get-color-from-palette($foreground, secondary-text);\n\n    // Because the arrow is made up of multiple elements that are stacked on top of each other,\n    // we can't use the semi-transparent color from the theme directly. If the value is a color\n    // *type*, we convert it into a solid color by taking the opacity from the rgba value and\n    // using the value to determine the percentage of the background to put into foreground\n    // when mixing the colors together. Otherwise, if it resolves to something different\n    // (e.g. it resolves to a CSS variable), we use the color directly.\n    @if (meta.type-of($table-background) == color and meta.type-of($text-color) == color) {\n      $text-opacity: opacity($text-color);\n      color: color.mix($table-background, rgba($text-color, 1), (1 - $text-opacity) * 100%);\n    }\n    @else {\n      color: $text-color;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-sort') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n// Color palettes from the Material Design spec.\n// See https://material.io/design/color/\n//\n// Contrast colors are hard-coded because it is too difficult (probably impossible) to\n// calculate them. These contrast colors are pulled from the public Material Design spec swatches.\n// While the contrast colors in the spec are not prescriptive, we use them for convenience.\n\n\n// @deprecated renamed to $dark-primary-text.\n// @breaking-change 8.0.0\n$black-87-opacity: rgba(black, 0.87);\n// @deprecated renamed to $light-primary-text.\n// @breaking-change 8.0.0\n$white-87-opacity: rgba(white, 0.87);\n// @deprecated use $dark-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$black-12-opacity: rgba(black, 0.12);\n// @deprecated use $light-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$white-12-opacity: rgba(white, 0.12);\n// @deprecated use $dark-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$black-6-opacity: rgba(black, 0.06);\n// @deprecated use $light-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$white-6-opacity: rgba(white, 0.06);\n\n$dark-primary-text: rgba(black, 0.87);\n$dark-secondary-text: rgba(black, 0.54);\n$dark-disabled-text: rgba(black, 0.38);\n$dark-dividers: rgba(black, 0.12);\n$dark-focused: rgba(black, 0.12);\n$light-primary-text: white;\n$light-secondary-text: rgba(white, 0.7);\n$light-disabled-text: rgba(white, 0.5);\n$light-dividers: rgba(white, 0.12);\n$light-focused: rgba(white, 0.12);\n\n$red-palette: (\n  50: #ffebee,\n  100: #ffcdd2,\n  200: #ef9a9a,\n  300: #e57373,\n  400: #ef5350,\n  500: #f44336,\n  600: #e53935,\n  700: #d32f2f,\n  800: #c62828,\n  900: #b71c1c,\n  A100: #ff8a80,\n  A200: #ff5252,\n  A400: #ff1744,\n  A700: #d50000,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$pink-palette: (\n  50: #fce4ec,\n  100: #f8bbd0,\n  200: #f48fb1,\n  300: #f06292,\n  400: #ec407a,\n  500: #e91e63,\n  600: #d81b60,\n  700: #c2185b,\n  800: #ad1457,\n  900: #880e4f,\n  A100: #ff80ab,\n  A200: #ff4081,\n  A400: #f50057,\n  A700: #c51162,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$purple-palette: (\n  50: #f3e5f5,\n  100: #e1bee7,\n  200: #ce93d8,\n  300: #ba68c8,\n  400: #ab47bc,\n  500: #9c27b0,\n  600: #8e24aa,\n  700: #7b1fa2,\n  800: #6a1b9a,\n  900: #4a148c,\n  A100: #ea80fc,\n  A200: #e040fb,\n  A400: #d500f9,\n  A700: #aa00ff,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$deep-purple-palette: (\n  50: #ede7f6,\n  100: #d1c4e9,\n  200: #b39ddb,\n  300: #9575cd,\n  400: #7e57c2,\n  500: #673ab7,\n  600: #5e35b1,\n  700: #512da8,\n  800: #4527a0,\n  900: #311b92,\n  A100: #b388ff,\n  A200: #7c4dff,\n  A400: #651fff,\n  A700: #6200ea,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$indigo-palette: (\n  50: #e8eaf6,\n  100: #c5cae9,\n  200: #9fa8da,\n  300: #7986cb,\n  400: #5c6bc0,\n  500: #3f51b5,\n  600: #3949ab,\n  700: #303f9f,\n  800: #283593,\n  900: #1a237e,\n  A100: #8c9eff,\n  A200: #536dfe,\n  A400: #3d5afe,\n  A700: #304ffe,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$blue-palette: (\n  50: #e3f2fd,\n  100: #bbdefb,\n  200: #90caf9,\n  300: #64b5f6,\n  400: #42a5f5,\n  500: #2196f3,\n  600: #1e88e5,\n  700: #1976d2,\n  800: #1565c0,\n  900: #0d47a1,\n  A100: #82b1ff,\n  A200: #448aff,\n  A400: #2979ff,\n  A700: #2962ff,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$light-blue-palette: (\n  50: #e1f5fe,\n  100: #b3e5fc,\n  200: #81d4fa,\n  300: #4fc3f7,\n  400: #29b6f6,\n  500: #03a9f4,\n  600: #039be5,\n  700: #0288d1,\n  800: #0277bd,\n  900: #01579b,\n  A100: #80d8ff,\n  A200: #40c4ff,\n  A400: #00b0ff,\n  A700: #0091ea,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$cyan-palette: (\n  50: #e0f7fa,\n  100: #b2ebf2,\n  200: #80deea,\n  300: #4dd0e1,\n  400: #26c6da,\n  500: #00bcd4,\n  600: #00acc1,\n  700: #0097a7,\n  800: #00838f,\n  900: #006064,\n  A100: #84ffff,\n  A200: #18ffff,\n  A400: #00e5ff,\n  A700: #00b8d4,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$teal-palette: (\n  50: #e0f2f1,\n  100: #b2dfdb,\n  200: #80cbc4,\n  300: #4db6ac,\n  400: #26a69a,\n  500: #009688,\n  600: #00897b,\n  700: #00796b,\n  800: #00695c,\n  900: #004d40,\n  A100: #a7ffeb,\n  A200: #64ffda,\n  A400: #1de9b6,\n  A700: #00bfa5,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$green-palette: (\n  50: #e8f5e9,\n  100: #c8e6c9,\n  200: #a5d6a7,\n  300: #81c784,\n  400: #66bb6a,\n  500: #4caf50,\n  600: #43a047,\n  700: #388e3c,\n  800: #2e7d32,\n  900: #1b5e20,\n  A100: #b9f6ca,\n  A200: #69f0ae,\n  A400: #00e676,\n  A700: #00c853,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$light-green-palette: (\n  50: #f1f8e9,\n  100: #dcedc8,\n  200: #c5e1a5,\n  300: #aed581,\n  400: #9ccc65,\n  500: #8bc34a,\n  600: #7cb342,\n  700: #689f38,\n  800: #558b2f,\n  900: #33691e,\n  A100: #ccff90,\n  A200: #b2ff59,\n  A400: #76ff03,\n  A700: #64dd17,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$lime-palette: (\n  50: #f9fbe7,\n  100: #f0f4c3,\n  200: #e6ee9c,\n  300: #dce775,\n  400: #d4e157,\n  500: #cddc39,\n  600: #c0ca33,\n  700: #afb42b,\n  800: #9e9d24,\n  900: #827717,\n  A100: #f4ff81,\n  A200: #eeff41,\n  A400: #c6ff00,\n  A700: #aeea00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $dark-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$yellow-palette: (\n  50: #fffde7,\n  100: #fff9c4,\n  200: #fff59d,\n  300: #fff176,\n  400: #ffee58,\n  500: #ffeb3b,\n  600: #fdd835,\n  700: #fbc02d,\n  800: #f9a825,\n  900: #f57f17,\n  A100: #ffff8d,\n  A200: #ffff00,\n  A400: #ffea00,\n  A700: #ffd600,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $dark-primary-text,\n    900: $dark-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$amber-palette: (\n  50: #fff8e1,\n  100: #ffecb3,\n  200: #ffe082,\n  300: #ffd54f,\n  400: #ffca28,\n  500: #ffc107,\n  600: #ffb300,\n  700: #ffa000,\n  800: #ff8f00,\n  900: #ff6f00,\n  A100: #ffe57f,\n  A200: #ffd740,\n  A400: #ffc400,\n  A700: #ffab00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $dark-primary-text,\n    900: $dark-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$orange-palette: (\n  50: #fff3e0,\n  100: #ffe0b2,\n  200: #ffcc80,\n  300: #ffb74d,\n  400: #ffa726,\n  500: #ff9800,\n  600: #fb8c00,\n  700: #f57c00,\n  800: #ef6c00,\n  900: #e65100,\n  A100: #ffd180,\n  A200: #ffab40,\n  A400: #ff9100,\n  A700: #ff6d00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: black,\n  )\n);\n\n$deep-orange-palette: (\n  50: #fbe9e7,\n  100: #ffccbc,\n  200: #ffab91,\n  300: #ff8a65,\n  400: #ff7043,\n  500: #ff5722,\n  600: #f4511e,\n  700: #e64a19,\n  800: #d84315,\n  900: #bf360c,\n  A100: #ff9e80,\n  A200: #ff6e40,\n  A400: #ff3d00,\n  A700: #dd2c00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$brown-palette: (\n  50: #efebe9,\n  100: #d7ccc8,\n  200: #bcaaa4,\n  300: #a1887f,\n  400: #8d6e63,\n  500: #795548,\n  600: #6d4c41,\n  700: #5d4037,\n  800: #4e342e,\n  900: #3e2723,\n  A100: #d7ccc8,\n  A200: #bcaaa4,\n  A400: #8d6e63,\n  A700: #5d4037,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$grey-palette: (\n  50: #fafafa,\n  100: #f5f5f5,\n  200: #eeeeee,\n  300: #e0e0e0,\n  400: #bdbdbd,\n  500: #9e9e9e,\n  600: #757575,\n  700: #616161,\n  800: #424242,\n  900: #212121,\n  A100: #ffffff,\n  A200: #eeeeee,\n  A400: #bdbdbd,\n  A700: #616161,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n// Alias for alternate spelling.\n$gray-palette: $grey-palette;\n\n$blue-grey-palette: (\n  50: #eceff1,\n  100: #cfd8dc,\n  200: #b0bec5,\n  300: #90a4ae,\n  400: #78909c,\n  500: #607d8b,\n  600: #546e7a,\n  700: #455a64,\n  800: #37474f,\n  900: #263238,\n  A100: #cfd8dc,\n  A200: #b0bec5,\n  A400: #78909c,\n  A700: #455a64,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n// Alias for alternate spelling.\n$blue-gray-palette: $blue-grey-palette;\n\n\n// Background palette for light themes.\n$light-theme-background-palette: (\n  status-bar: map.get($grey-palette, 300),\n  app-bar:    map.get($grey-palette, 100),\n  background: map.get($grey-palette, 50),\n  hover:      rgba(black, 0.04), // TODO(kara): check style with Material Design UX\n  card:       white,\n  dialog:     white,\n  disabled-button: rgba(black, 0.12),\n  raised-button: white,\n  focused-button: $dark-focused,\n  selected-button: map.get($grey-palette, 300),\n  selected-disabled-button: map.get($grey-palette, 400),\n  disabled-button-toggle: map.get($grey-palette, 200),\n  unselected-chip: map.get($grey-palette, 300),\n  disabled-list-option: map.get($grey-palette, 200),\n  tooltip: map.get($grey-palette, 700),\n);\n\n// Background palette for dark themes.\n$dark-theme-background-palette: (\n  status-bar: black,\n  app-bar:    map.get($grey-palette, 900),\n  background: #303030,\n  hover:      rgba(white, 0.04), // TODO(kara): check style with Material Design UX\n  card:       map.get($grey-palette, 800),\n  dialog:     map.get($grey-palette, 800),\n  disabled-button: rgba(white, 0.12),\n  raised-button: map.get($grey-palette, 800),\n  focused-button: $light-focused,\n  selected-button: map.get($grey-palette, 900),\n  selected-disabled-button: map.get($grey-palette, 800),\n  disabled-button-toggle: black,\n  unselected-chip: map.get($grey-palette, 700),\n  disabled-list-option: rgba(white, 0.12),\n  tooltip: map.get($grey-palette, 700),\n);\n\n// Foreground palette for light themes.\n$light-theme-foreground-palette: (\n  base:              black,\n  divider:           $dark-dividers,\n  dividers:          $dark-dividers,\n  disabled:          $dark-disabled-text,\n  disabled-button:   rgba(black, 0.26),\n  disabled-text:     $dark-disabled-text,\n  elevation:         black,\n  hint-text:         $dark-disabled-text,\n  secondary-text:    $dark-secondary-text,\n  icon:              rgba(black, 0.54),\n  icons:             rgba(black, 0.54),\n  text:              rgba(black, 0.87),\n  slider-min:        rgba(black, 0.87),\n  slider-off:        rgba(black, 0.26),\n  slider-off-active: rgba(black, 0.38),\n);\n\n// Foreground palette for dark themes.\n$dark-theme-foreground-palette: (\n  base:              white,\n  divider:           $light-dividers,\n  dividers:          $light-dividers,\n  disabled:          $light-disabled-text,\n  disabled-button:   rgba(white, 0.3),\n  disabled-text:     $light-disabled-text,\n  elevation:         black,\n  hint-text:         $light-disabled-text,\n  secondary-text:    $light-secondary-text,\n  icon:              white,\n  icons:             white,\n  text:              white,\n  slider-min:        white,\n  slider-off:        rgba(white, 0.3),\n  slider-off-active: rgba(white, 0.3),\n);\n","/* ----------------------------------------------------------------------------------------------------- */\n/*  @ Import third party library styles here.\n/* ----------------------------------------------------------------------------------------------------- */\n\n/* Perfect scrollbar */\n@import '~perfect-scrollbar/css/perfect-scrollbar.css';\n\n/* Quill */\n@import '~quill/dist/quill.snow.css';\n","/*\r\n * Container style\r\n */\r\n.ps {\r\n  overflow: hidden !important;\r\n  overflow-anchor: none;\r\n  -ms-overflow-style: none;\r\n  touch-action: auto;\r\n  -ms-touch-action: auto;\r\n}\r\n\r\n/*\r\n * Scrollbar rail styles\r\n */\r\n.ps__rail-x {\r\n  display: none;\r\n  opacity: 0;\r\n  transition: background-color .2s linear, opacity .2s linear;\r\n  -webkit-transition: background-color .2s linear, opacity .2s linear;\r\n  height: 15px;\r\n  /* there must be 'bottom' or 'top' for ps__rail-x */\r\n  bottom: 0px;\r\n  /* please don't change 'position' */\r\n  position: absolute;\r\n}\r\n\r\n.ps__rail-y {\r\n  display: none;\r\n  opacity: 0;\r\n  transition: background-color .2s linear, opacity .2s linear;\r\n  -webkit-transition: background-color .2s linear, opacity .2s linear;\r\n  width: 15px;\r\n  /* there must be 'right' or 'left' for ps__rail-y */\r\n  right: 0;\r\n  /* please don't change 'position' */\r\n  position: absolute;\r\n}\r\n\r\n.ps--active-x > .ps__rail-x,\r\n.ps--active-y > .ps__rail-y {\r\n  display: block;\r\n  background-color: transparent;\r\n}\r\n\r\n.ps:hover > .ps__rail-x,\r\n.ps:hover > .ps__rail-y,\r\n.ps--focus > .ps__rail-x,\r\n.ps--focus > .ps__rail-y,\r\n.ps--scrolling-x > .ps__rail-x,\r\n.ps--scrolling-y > .ps__rail-y {\r\n  opacity: 0.6;\r\n}\r\n\r\n.ps .ps__rail-x:hover,\r\n.ps .ps__rail-y:hover,\r\n.ps .ps__rail-x:focus,\r\n.ps .ps__rail-y:focus,\r\n.ps .ps__rail-x.ps--clicking,\r\n.ps .ps__rail-y.ps--clicking {\r\n  background-color: #eee;\r\n  opacity: 0.9;\r\n}\r\n\r\n/*\r\n * Scrollbar thumb styles\r\n */\r\n.ps__thumb-x {\r\n  background-color: #aaa;\r\n  border-radius: 6px;\r\n  transition: background-color .2s linear, height .2s ease-in-out;\r\n  -webkit-transition: background-color .2s linear, height .2s ease-in-out;\r\n  height: 6px;\r\n  /* there must be 'bottom' for ps__thumb-x */\r\n  bottom: 2px;\r\n  /* please don't change 'position' */\r\n  position: absolute;\r\n}\r\n\r\n.ps__thumb-y {\r\n  background-color: #aaa;\r\n  border-radius: 6px;\r\n  transition: background-color .2s linear, width .2s ease-in-out;\r\n  -webkit-transition: background-color .2s linear, width .2s ease-in-out;\r\n  width: 6px;\r\n  /* there must be 'right' for ps__thumb-y */\r\n  right: 2px;\r\n  /* please don't change 'position' */\r\n  position: absolute;\r\n}\r\n\r\n.ps__rail-x:hover > .ps__thumb-x,\r\n.ps__rail-x:focus > .ps__thumb-x,\r\n.ps__rail-x.ps--clicking .ps__thumb-x {\r\n  background-color: #999;\r\n  height: 11px;\r\n}\r\n\r\n.ps__rail-y:hover > .ps__thumb-y,\r\n.ps__rail-y:focus > .ps__thumb-y,\r\n.ps__rail-y.ps--clicking .ps__thumb-y {\r\n  background-color: #999;\r\n  width: 11px;\r\n}\r\n\r\n/* MS supports */\r\n@supports (-ms-overflow-style: none) {\r\n  .ps {\r\n    overflow: auto !important;\r\n  }\r\n}\r\n\r\n@media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {\r\n  .ps {\r\n    overflow: auto !important;\r\n  }\r\n}\r\n","/*!\n * Quill Editor v1.3.7\n * https://quilljs.com/\n * Copyright (c) 2014, Jason Chen\n * Copyright (c) 2013, salesforce.com\n */\n.ql-container {\n  box-sizing: border-box;\n  font-family: Helvetica, Arial, sans-serif;\n  font-size: 13px;\n  height: 100%;\n  margin: 0px;\n  position: relative;\n}\n.ql-container.ql-disabled .ql-tooltip {\n  visibility: hidden;\n}\n.ql-container.ql-disabled .ql-editor ul[data-checked] > li::before {\n  pointer-events: none;\n}\n.ql-clipboard {\n  left: -100000px;\n  height: 1px;\n  overflow-y: hidden;\n  position: absolute;\n  top: 50%;\n}\n.ql-clipboard p {\n  margin: 0;\n  padding: 0;\n}\n.ql-editor {\n  box-sizing: border-box;\n  line-height: 1.42;\n  height: 100%;\n  outline: none;\n  overflow-y: auto;\n  padding: 12px 15px;\n  tab-size: 4;\n  -moz-tab-size: 4;\n  text-align: left;\n  white-space: pre-wrap;\n  word-wrap: break-word;\n}\n.ql-editor > * {\n  cursor: text;\n}\n.ql-editor p,\n.ql-editor ol,\n.ql-editor ul,\n.ql-editor pre,\n.ql-editor blockquote,\n.ql-editor h1,\n.ql-editor h2,\n.ql-editor h3,\n.ql-editor h4,\n.ql-editor h5,\n.ql-editor h6 {\n  margin: 0;\n  padding: 0;\n  counter-reset: list-1 list-2 list-3 list-4 list-5 list-6 list-7 list-8 list-9;\n}\n.ql-editor ol,\n.ql-editor ul {\n  padding-left: 1.5em;\n}\n.ql-editor ol > li,\n.ql-editor ul > li {\n  list-style-type: none;\n}\n.ql-editor ul > li::before {\n  content: '\\2022';\n}\n.ql-editor ul[data-checked=true],\n.ql-editor ul[data-checked=false] {\n  pointer-events: none;\n}\n.ql-editor ul[data-checked=true] > li *,\n.ql-editor ul[data-checked=false] > li * {\n  pointer-events: all;\n}\n.ql-editor ul[data-checked=true] > li::before,\n.ql-editor ul[data-checked=false] > li::before {\n  color: #777;\n  cursor: pointer;\n  pointer-events: all;\n}\n.ql-editor ul[data-checked=true] > li::before {\n  content: '\\2611';\n}\n.ql-editor ul[data-checked=false] > li::before {\n  content: '\\2610';\n}\n.ql-editor li::before {\n  display: inline-block;\n  white-space: nowrap;\n  width: 1.2em;\n}\n.ql-editor li:not(.ql-direction-rtl)::before {\n  margin-left: -1.5em;\n  margin-right: 0.3em;\n  text-align: right;\n}\n.ql-editor li.ql-direction-rtl::before {\n  margin-left: 0.3em;\n  margin-right: -1.5em;\n}\n.ql-editor ol li:not(.ql-direction-rtl),\n.ql-editor ul li:not(.ql-direction-rtl) {\n  padding-left: 1.5em;\n}\n.ql-editor ol li.ql-direction-rtl,\n.ql-editor ul li.ql-direction-rtl {\n  padding-right: 1.5em;\n}\n.ql-editor ol li {\n  counter-reset: list-1 list-2 list-3 list-4 list-5 list-6 list-7 list-8 list-9;\n  counter-increment: list-0;\n}\n.ql-editor ol li:before {\n  content: counter(list-0, decimal) '. ';\n}\n.ql-editor ol li.ql-indent-1 {\n  counter-increment: list-1;\n}\n.ql-editor ol li.ql-indent-1:before {\n  content: counter(list-1, lower-alpha) '. ';\n}\n.ql-editor ol li.ql-indent-1 {\n  counter-reset: list-2 list-3 list-4 list-5 list-6 list-7 list-8 list-9;\n}\n.ql-editor ol li.ql-indent-2 {\n  counter-increment: list-2;\n}\n.ql-editor ol li.ql-indent-2:before {\n  content: counter(list-2, lower-roman) '. ';\n}\n.ql-editor ol li.ql-indent-2 {\n  counter-reset: list-3 list-4 list-5 list-6 list-7 list-8 list-9;\n}\n.ql-editor ol li.ql-indent-3 {\n  counter-increment: list-3;\n}\n.ql-editor ol li.ql-indent-3:before {\n  content: counter(list-3, decimal) '. ';\n}\n.ql-editor ol li.ql-indent-3 {\n  counter-reset: list-4 list-5 list-6 list-7 list-8 list-9;\n}\n.ql-editor ol li.ql-indent-4 {\n  counter-increment: list-4;\n}\n.ql-editor ol li.ql-indent-4:before {\n  content: counter(list-4, lower-alpha) '. ';\n}\n.ql-editor ol li.ql-indent-4 {\n  counter-reset: list-5 list-6 list-7 list-8 list-9;\n}\n.ql-editor ol li.ql-indent-5 {\n  counter-increment: list-5;\n}\n.ql-editor ol li.ql-indent-5:before {\n  content: counter(list-5, lower-roman) '. ';\n}\n.ql-editor ol li.ql-indent-5 {\n  counter-reset: list-6 list-7 list-8 list-9;\n}\n.ql-editor ol li.ql-indent-6 {\n  counter-increment: list-6;\n}\n.ql-editor ol li.ql-indent-6:before {\n  content: counter(list-6, decimal) '. ';\n}\n.ql-editor ol li.ql-indent-6 {\n  counter-reset: list-7 list-8 list-9;\n}\n.ql-editor ol li.ql-indent-7 {\n  counter-increment: list-7;\n}\n.ql-editor ol li.ql-indent-7:before {\n  content: counter(list-7, lower-alpha) '. ';\n}\n.ql-editor ol li.ql-indent-7 {\n  counter-reset: list-8 list-9;\n}\n.ql-editor ol li.ql-indent-8 {\n  counter-increment: list-8;\n}\n.ql-editor ol li.ql-indent-8:before {\n  content: counter(list-8, lower-roman) '. ';\n}\n.ql-editor ol li.ql-indent-8 {\n  counter-reset: list-9;\n}\n.ql-editor ol li.ql-indent-9 {\n  counter-increment: list-9;\n}\n.ql-editor ol li.ql-indent-9:before {\n  content: counter(list-9, decimal) '. ';\n}\n.ql-editor .ql-indent-1:not(.ql-direction-rtl) {\n  padding-left: 3em;\n}\n.ql-editor li.ql-indent-1:not(.ql-direction-rtl) {\n  padding-left: 4.5em;\n}\n.ql-editor .ql-indent-1.ql-direction-rtl.ql-align-right {\n  padding-right: 3em;\n}\n.ql-editor li.ql-indent-1.ql-direction-rtl.ql-align-right {\n  padding-right: 4.5em;\n}\n.ql-editor .ql-indent-2:not(.ql-direction-rtl) {\n  padding-left: 6em;\n}\n.ql-editor li.ql-indent-2:not(.ql-direction-rtl) {\n  padding-left: 7.5em;\n}\n.ql-editor .ql-indent-2.ql-direction-rtl.ql-align-right {\n  padding-right: 6em;\n}\n.ql-editor li.ql-indent-2.ql-direction-rtl.ql-align-right {\n  padding-right: 7.5em;\n}\n.ql-editor .ql-indent-3:not(.ql-direction-rtl) {\n  padding-left: 9em;\n}\n.ql-editor li.ql-indent-3:not(.ql-direction-rtl) {\n  padding-left: 10.5em;\n}\n.ql-editor .ql-indent-3.ql-direction-rtl.ql-align-right {\n  padding-right: 9em;\n}\n.ql-editor li.ql-indent-3.ql-direction-rtl.ql-align-right {\n  padding-right: 10.5em;\n}\n.ql-editor .ql-indent-4:not(.ql-direction-rtl) {\n  padding-left: 12em;\n}\n.ql-editor li.ql-indent-4:not(.ql-direction-rtl) {\n  padding-left: 13.5em;\n}\n.ql-editor .ql-indent-4.ql-direction-rtl.ql-align-right {\n  padding-right: 12em;\n}\n.ql-editor li.ql-indent-4.ql-direction-rtl.ql-align-right {\n  padding-right: 13.5em;\n}\n.ql-editor .ql-indent-5:not(.ql-direction-rtl) {\n  padding-left: 15em;\n}\n.ql-editor li.ql-indent-5:not(.ql-direction-rtl) {\n  padding-left: 16.5em;\n}\n.ql-editor .ql-indent-5.ql-direction-rtl.ql-align-right {\n  padding-right: 15em;\n}\n.ql-editor li.ql-indent-5.ql-direction-rtl.ql-align-right {\n  padding-right: 16.5em;\n}\n.ql-editor .ql-indent-6:not(.ql-direction-rtl) {\n  padding-left: 18em;\n}\n.ql-editor li.ql-indent-6:not(.ql-direction-rtl) {\n  padding-left: 19.5em;\n}\n.ql-editor .ql-indent-6.ql-direction-rtl.ql-align-right {\n  padding-right: 18em;\n}\n.ql-editor li.ql-indent-6.ql-direction-rtl.ql-align-right {\n  padding-right: 19.5em;\n}\n.ql-editor .ql-indent-7:not(.ql-direction-rtl) {\n  padding-left: 21em;\n}\n.ql-editor li.ql-indent-7:not(.ql-direction-rtl) {\n  padding-left: 22.5em;\n}\n.ql-editor .ql-indent-7.ql-direction-rtl.ql-align-right {\n  padding-right: 21em;\n}\n.ql-editor li.ql-indent-7.ql-direction-rtl.ql-align-right {\n  padding-right: 22.5em;\n}\n.ql-editor .ql-indent-8:not(.ql-direction-rtl) {\n  padding-left: 24em;\n}\n.ql-editor li.ql-indent-8:not(.ql-direction-rtl) {\n  padding-left: 25.5em;\n}\n.ql-editor .ql-indent-8.ql-direction-rtl.ql-align-right {\n  padding-right: 24em;\n}\n.ql-editor li.ql-indent-8.ql-direction-rtl.ql-align-right {\n  padding-right: 25.5em;\n}\n.ql-editor .ql-indent-9:not(.ql-direction-rtl) {\n  padding-left: 27em;\n}\n.ql-editor li.ql-indent-9:not(.ql-direction-rtl) {\n  padding-left: 28.5em;\n}\n.ql-editor .ql-indent-9.ql-direction-rtl.ql-align-right {\n  padding-right: 27em;\n}\n.ql-editor li.ql-indent-9.ql-direction-rtl.ql-align-right {\n  padding-right: 28.5em;\n}\n.ql-editor .ql-video {\n  display: block;\n  max-width: 100%;\n}\n.ql-editor .ql-video.ql-align-center {\n  margin: 0 auto;\n}\n.ql-editor .ql-video.ql-align-right {\n  margin: 0 0 0 auto;\n}\n.ql-editor .ql-bg-black {\n  background-color: #000;\n}\n.ql-editor .ql-bg-red {\n  background-color: #e60000;\n}\n.ql-editor .ql-bg-orange {\n  background-color: #f90;\n}\n.ql-editor .ql-bg-yellow {\n  background-color: #ff0;\n}\n.ql-editor .ql-bg-green {\n  background-color: #008a00;\n}\n.ql-editor .ql-bg-blue {\n  background-color: #06c;\n}\n.ql-editor .ql-bg-purple {\n  background-color: #93f;\n}\n.ql-editor .ql-color-white {\n  color: #fff;\n}\n.ql-editor .ql-color-red {\n  color: #e60000;\n}\n.ql-editor .ql-color-orange {\n  color: #f90;\n}\n.ql-editor .ql-color-yellow {\n  color: #ff0;\n}\n.ql-editor .ql-color-green {\n  color: #008a00;\n}\n.ql-editor .ql-color-blue {\n  color: #06c;\n}\n.ql-editor .ql-color-purple {\n  color: #93f;\n}\n.ql-editor .ql-font-serif {\n  font-family: Georgia, Times New Roman, serif;\n}\n.ql-editor .ql-font-monospace {\n  font-family: Monaco, Courier New, monospace;\n}\n.ql-editor .ql-size-small {\n  font-size: 0.75em;\n}\n.ql-editor .ql-size-large {\n  font-size: 1.5em;\n}\n.ql-editor .ql-size-huge {\n  font-size: 2.5em;\n}\n.ql-editor .ql-direction-rtl {\n  direction: rtl;\n  text-align: inherit;\n}\n.ql-editor .ql-align-center {\n  text-align: center;\n}\n.ql-editor .ql-align-justify {\n  text-align: justify;\n}\n.ql-editor .ql-align-right {\n  text-align: right;\n}\n.ql-editor.ql-blank::before {\n  color: rgba(0,0,0,0.6);\n  content: attr(data-placeholder);\n  font-style: italic;\n  left: 15px;\n  pointer-events: none;\n  position: absolute;\n  right: 15px;\n}\n.ql-snow.ql-toolbar:after,\n.ql-snow .ql-toolbar:after {\n  clear: both;\n  content: '';\n  display: table;\n}\n.ql-snow.ql-toolbar button,\n.ql-snow .ql-toolbar button {\n  background: none;\n  border: none;\n  cursor: pointer;\n  display: inline-block;\n  float: left;\n  height: 24px;\n  padding: 3px 5px;\n  width: 28px;\n}\n.ql-snow.ql-toolbar button svg,\n.ql-snow .ql-toolbar button svg {\n  float: left;\n  height: 100%;\n}\n.ql-snow.ql-toolbar button:active:hover,\n.ql-snow .ql-toolbar button:active:hover {\n  outline: none;\n}\n.ql-snow.ql-toolbar input.ql-image[type=file],\n.ql-snow .ql-toolbar input.ql-image[type=file] {\n  display: none;\n}\n.ql-snow.ql-toolbar button:hover,\n.ql-snow .ql-toolbar button:hover,\n.ql-snow.ql-toolbar button:focus,\n.ql-snow .ql-toolbar button:focus,\n.ql-snow.ql-toolbar button.ql-active,\n.ql-snow .ql-toolbar button.ql-active,\n.ql-snow.ql-toolbar .ql-picker-label:hover,\n.ql-snow .ql-toolbar .ql-picker-label:hover,\n.ql-snow.ql-toolbar .ql-picker-label.ql-active,\n.ql-snow .ql-toolbar .ql-picker-label.ql-active,\n.ql-snow.ql-toolbar .ql-picker-item:hover,\n.ql-snow .ql-toolbar .ql-picker-item:hover,\n.ql-snow.ql-toolbar .ql-picker-item.ql-selected,\n.ql-snow .ql-toolbar .ql-picker-item.ql-selected {\n  color: #06c;\n}\n.ql-snow.ql-toolbar button:hover .ql-fill,\n.ql-snow .ql-toolbar button:hover .ql-fill,\n.ql-snow.ql-toolbar button:focus .ql-fill,\n.ql-snow .ql-toolbar button:focus .ql-fill,\n.ql-snow.ql-toolbar button.ql-active .ql-fill,\n.ql-snow .ql-toolbar button.ql-active .ql-fill,\n.ql-snow.ql-toolbar .ql-picker-label:hover .ql-fill,\n.ql-snow .ql-toolbar .ql-picker-label:hover .ql-fill,\n.ql-snow.ql-toolbar .ql-picker-label.ql-active .ql-fill,\n.ql-snow .ql-toolbar .ql-picker-label.ql-active .ql-fill,\n.ql-snow.ql-toolbar .ql-picker-item:hover .ql-fill,\n.ql-snow .ql-toolbar .ql-picker-item:hover .ql-fill,\n.ql-snow.ql-toolbar .ql-picker-item.ql-selected .ql-fill,\n.ql-snow .ql-toolbar .ql-picker-item.ql-selected .ql-fill,\n.ql-snow.ql-toolbar button:hover .ql-stroke.ql-fill,\n.ql-snow .ql-toolbar button:hover .ql-stroke.ql-fill,\n.ql-snow.ql-toolbar button:focus .ql-stroke.ql-fill,\n.ql-snow .ql-toolbar button:focus .ql-stroke.ql-fill,\n.ql-snow.ql-toolbar button.ql-active .ql-stroke.ql-fill,\n.ql-snow .ql-toolbar button.ql-active .ql-stroke.ql-fill,\n.ql-snow.ql-toolbar .ql-picker-label:hover .ql-stroke.ql-fill,\n.ql-snow .ql-toolbar .ql-picker-label:hover .ql-stroke.ql-fill,\n.ql-snow.ql-toolbar .ql-picker-label.ql-active .ql-stroke.ql-fill,\n.ql-snow .ql-toolbar .ql-picker-label.ql-active .ql-stroke.ql-fill,\n.ql-snow.ql-toolbar .ql-picker-item:hover .ql-stroke.ql-fill,\n.ql-snow .ql-toolbar .ql-picker-item:hover .ql-stroke.ql-fill,\n.ql-snow.ql-toolbar .ql-picker-item.ql-selected .ql-stroke.ql-fill,\n.ql-snow .ql-toolbar .ql-picker-item.ql-selected .ql-stroke.ql-fill {\n  fill: #06c;\n}\n.ql-snow.ql-toolbar button:hover .ql-stroke,\n.ql-snow .ql-toolbar button:hover .ql-stroke,\n.ql-snow.ql-toolbar button:focus .ql-stroke,\n.ql-snow .ql-toolbar button:focus .ql-stroke,\n.ql-snow.ql-toolbar button.ql-active .ql-stroke,\n.ql-snow .ql-toolbar button.ql-active .ql-stroke,\n.ql-snow.ql-toolbar .ql-picker-label:hover .ql-stroke,\n.ql-snow .ql-toolbar .ql-picker-label:hover .ql-stroke,\n.ql-snow.ql-toolbar .ql-picker-label.ql-active .ql-stroke,\n.ql-snow .ql-toolbar .ql-picker-label.ql-active .ql-stroke,\n.ql-snow.ql-toolbar .ql-picker-item:hover .ql-stroke,\n.ql-snow .ql-toolbar .ql-picker-item:hover .ql-stroke,\n.ql-snow.ql-toolbar .ql-picker-item.ql-selected .ql-stroke,\n.ql-snow .ql-toolbar .ql-picker-item.ql-selected .ql-stroke,\n.ql-snow.ql-toolbar button:hover .ql-stroke-miter,\n.ql-snow .ql-toolbar button:hover .ql-stroke-miter,\n.ql-snow.ql-toolbar button:focus .ql-stroke-miter,\n.ql-snow .ql-toolbar button:focus .ql-stroke-miter,\n.ql-snow.ql-toolbar button.ql-active .ql-stroke-miter,\n.ql-snow .ql-toolbar button.ql-active .ql-stroke-miter,\n.ql-snow.ql-toolbar .ql-picker-label:hover .ql-stroke-miter,\n.ql-snow .ql-toolbar .ql-picker-label:hover .ql-stroke-miter,\n.ql-snow.ql-toolbar .ql-picker-label.ql-active .ql-stroke-miter,\n.ql-snow .ql-toolbar .ql-picker-label.ql-active .ql-stroke-miter,\n.ql-snow.ql-toolbar .ql-picker-item:hover .ql-stroke-miter,\n.ql-snow .ql-toolbar .ql-picker-item:hover .ql-stroke-miter,\n.ql-snow.ql-toolbar .ql-picker-item.ql-selected .ql-stroke-miter,\n.ql-snow .ql-toolbar .ql-picker-item.ql-selected .ql-stroke-miter {\n  stroke: #06c;\n}\n@media (pointer: coarse) {\n  .ql-snow.ql-toolbar button:hover:not(.ql-active),\n  .ql-snow .ql-toolbar button:hover:not(.ql-active) {\n    color: #444;\n  }\n  .ql-snow.ql-toolbar button:hover:not(.ql-active) .ql-fill,\n  .ql-snow .ql-toolbar button:hover:not(.ql-active) .ql-fill,\n  .ql-snow.ql-toolbar button:hover:not(.ql-active) .ql-stroke.ql-fill,\n  .ql-snow .ql-toolbar button:hover:not(.ql-active) .ql-stroke.ql-fill {\n    fill: #444;\n  }\n  .ql-snow.ql-toolbar button:hover:not(.ql-active) .ql-stroke,\n  .ql-snow .ql-toolbar button:hover:not(.ql-active) .ql-stroke,\n  .ql-snow.ql-toolbar button:hover:not(.ql-active) .ql-stroke-miter,\n  .ql-snow .ql-toolbar button:hover:not(.ql-active) .ql-stroke-miter {\n    stroke: #444;\n  }\n}\n.ql-snow {\n  box-sizing: border-box;\n}\n.ql-snow * {\n  box-sizing: border-box;\n}\n.ql-snow .ql-hidden {\n  display: none;\n}\n.ql-snow .ql-out-bottom,\n.ql-snow .ql-out-top {\n  visibility: hidden;\n}\n.ql-snow .ql-tooltip {\n  position: absolute;\n  transform: translateY(10px);\n}\n.ql-snow .ql-tooltip a {\n  cursor: pointer;\n  text-decoration: none;\n}\n.ql-snow .ql-tooltip.ql-flip {\n  transform: translateY(-10px);\n}\n.ql-snow .ql-formats {\n  display: inline-block;\n  vertical-align: middle;\n}\n.ql-snow .ql-formats:after {\n  clear: both;\n  content: '';\n  display: table;\n}\n.ql-snow .ql-stroke {\n  fill: none;\n  stroke: #444;\n  stroke-linecap: round;\n  stroke-linejoin: round;\n  stroke-width: 2;\n}\n.ql-snow .ql-stroke-miter {\n  fill: none;\n  stroke: #444;\n  stroke-miterlimit: 10;\n  stroke-width: 2;\n}\n.ql-snow .ql-fill,\n.ql-snow .ql-stroke.ql-fill {\n  fill: #444;\n}\n.ql-snow .ql-empty {\n  fill: none;\n}\n.ql-snow .ql-even {\n  fill-rule: evenodd;\n}\n.ql-snow .ql-thin,\n.ql-snow .ql-stroke.ql-thin {\n  stroke-width: 1;\n}\n.ql-snow .ql-transparent {\n  opacity: 0.4;\n}\n.ql-snow .ql-direction svg:last-child {\n  display: none;\n}\n.ql-snow .ql-direction.ql-active svg:last-child {\n  display: inline;\n}\n.ql-snow .ql-direction.ql-active svg:first-child {\n  display: none;\n}\n.ql-snow .ql-editor h1 {\n  font-size: 2em;\n}\n.ql-snow .ql-editor h2 {\n  font-size: 1.5em;\n}\n.ql-snow .ql-editor h3 {\n  font-size: 1.17em;\n}\n.ql-snow .ql-editor h4 {\n  font-size: 1em;\n}\n.ql-snow .ql-editor h5 {\n  font-size: 0.83em;\n}\n.ql-snow .ql-editor h6 {\n  font-size: 0.67em;\n}\n.ql-snow .ql-editor a {\n  text-decoration: underline;\n}\n.ql-snow .ql-editor blockquote {\n  border-left: 4px solid #ccc;\n  margin-bottom: 5px;\n  margin-top: 5px;\n  padding-left: 16px;\n}\n.ql-snow .ql-editor code,\n.ql-snow .ql-editor pre {\n  background-color: #f0f0f0;\n  border-radius: 3px;\n}\n.ql-snow .ql-editor pre {\n  white-space: pre-wrap;\n  margin-bottom: 5px;\n  margin-top: 5px;\n  padding: 5px 10px;\n}\n.ql-snow .ql-editor code {\n  font-size: 85%;\n  padding: 2px 4px;\n}\n.ql-snow .ql-editor pre.ql-syntax {\n  background-color: #23241f;\n  color: #f8f8f2;\n  overflow: visible;\n}\n.ql-snow .ql-editor img {\n  max-width: 100%;\n}\n.ql-snow .ql-picker {\n  color: #444;\n  display: inline-block;\n  float: left;\n  font-size: 14px;\n  font-weight: 500;\n  height: 24px;\n  position: relative;\n  vertical-align: middle;\n}\n.ql-snow .ql-picker-label {\n  cursor: pointer;\n  display: inline-block;\n  height: 100%;\n  padding-left: 8px;\n  padding-right: 2px;\n  position: relative;\n  width: 100%;\n}\n.ql-snow .ql-picker-label::before {\n  display: inline-block;\n  line-height: 22px;\n}\n.ql-snow .ql-picker-options {\n  background-color: #fff;\n  display: none;\n  min-width: 100%;\n  padding: 4px 8px;\n  position: absolute;\n  white-space: nowrap;\n}\n.ql-snow .ql-picker-options .ql-picker-item {\n  cursor: pointer;\n  display: block;\n  padding-bottom: 5px;\n  padding-top: 5px;\n}\n.ql-snow .ql-picker.ql-expanded .ql-picker-label {\n  color: #ccc;\n  z-index: 2;\n}\n.ql-snow .ql-picker.ql-expanded .ql-picker-label .ql-fill {\n  fill: #ccc;\n}\n.ql-snow .ql-picker.ql-expanded .ql-picker-label .ql-stroke {\n  stroke: #ccc;\n}\n.ql-snow .ql-picker.ql-expanded .ql-picker-options {\n  display: block;\n  margin-top: -1px;\n  top: 100%;\n  z-index: 1;\n}\n.ql-snow .ql-color-picker,\n.ql-snow .ql-icon-picker {\n  width: 28px;\n}\n.ql-snow .ql-color-picker .ql-picker-label,\n.ql-snow .ql-icon-picker .ql-picker-label {\n  padding: 2px 4px;\n}\n.ql-snow .ql-color-picker .ql-picker-label svg,\n.ql-snow .ql-icon-picker .ql-picker-label svg {\n  right: 4px;\n}\n.ql-snow .ql-icon-picker .ql-picker-options {\n  padding: 4px 0px;\n}\n.ql-snow .ql-icon-picker .ql-picker-item {\n  height: 24px;\n  width: 24px;\n  padding: 2px 4px;\n}\n.ql-snow .ql-color-picker .ql-picker-options {\n  padding: 3px 5px;\n  width: 152px;\n}\n.ql-snow .ql-color-picker .ql-picker-item {\n  border: 1px solid transparent;\n  float: left;\n  height: 16px;\n  margin: 2px;\n  padding: 0px;\n  width: 16px;\n}\n.ql-snow .ql-picker:not(.ql-color-picker):not(.ql-icon-picker) svg {\n  position: absolute;\n  margin-top: -9px;\n  right: 0;\n  top: 50%;\n  width: 18px;\n}\n.ql-snow .ql-picker.ql-header .ql-picker-label[data-label]:not([data-label=''])::before,\n.ql-snow .ql-picker.ql-font .ql-picker-label[data-label]:not([data-label=''])::before,\n.ql-snow .ql-picker.ql-size .ql-picker-label[data-label]:not([data-label=''])::before,\n.ql-snow .ql-picker.ql-header .ql-picker-item[data-label]:not([data-label=''])::before,\n.ql-snow .ql-picker.ql-font .ql-picker-item[data-label]:not([data-label=''])::before,\n.ql-snow .ql-picker.ql-size .ql-picker-item[data-label]:not([data-label=''])::before {\n  content: attr(data-label);\n}\n.ql-snow .ql-picker.ql-header {\n  width: 98px;\n}\n.ql-snow .ql-picker.ql-header .ql-picker-label::before,\n.ql-snow .ql-picker.ql-header .ql-picker-item::before {\n  content: 'Normal';\n}\n.ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\"1\"]::before,\n.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"1\"]::before {\n  content: 'Heading 1';\n}\n.ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\"2\"]::before,\n.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"2\"]::before {\n  content: 'Heading 2';\n}\n.ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\"3\"]::before,\n.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"3\"]::before {\n  content: 'Heading 3';\n}\n.ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\"4\"]::before,\n.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"4\"]::before {\n  content: 'Heading 4';\n}\n.ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\"5\"]::before,\n.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"5\"]::before {\n  content: 'Heading 5';\n}\n.ql-snow .ql-picker.ql-header .ql-picker-label[data-value=\"6\"]::before,\n.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"6\"]::before {\n  content: 'Heading 6';\n}\n.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"1\"]::before {\n  font-size: 2em;\n}\n.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"2\"]::before {\n  font-size: 1.5em;\n}\n.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"3\"]::before {\n  font-size: 1.17em;\n}\n.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"4\"]::before {\n  font-size: 1em;\n}\n.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"5\"]::before {\n  font-size: 0.83em;\n}\n.ql-snow .ql-picker.ql-header .ql-picker-item[data-value=\"6\"]::before {\n  font-size: 0.67em;\n}\n.ql-snow .ql-picker.ql-font {\n  width: 108px;\n}\n.ql-snow .ql-picker.ql-font .ql-picker-label::before,\n.ql-snow .ql-picker.ql-font .ql-picker-item::before {\n  content: 'Sans Serif';\n}\n.ql-snow .ql-picker.ql-font .ql-picker-label[data-value=serif]::before,\n.ql-snow .ql-picker.ql-font .ql-picker-item[data-value=serif]::before {\n  content: 'Serif';\n}\n.ql-snow .ql-picker.ql-font .ql-picker-label[data-value=monospace]::before,\n.ql-snow .ql-picker.ql-font .ql-picker-item[data-value=monospace]::before {\n  content: 'Monospace';\n}\n.ql-snow .ql-picker.ql-font .ql-picker-item[data-value=serif]::before {\n  font-family: Georgia, Times New Roman, serif;\n}\n.ql-snow .ql-picker.ql-font .ql-picker-item[data-value=monospace]::before {\n  font-family: Monaco, Courier New, monospace;\n}\n.ql-snow .ql-picker.ql-size {\n  width: 98px;\n}\n.ql-snow .ql-picker.ql-size .ql-picker-label::before,\n.ql-snow .ql-picker.ql-size .ql-picker-item::before {\n  content: 'Normal';\n}\n.ql-snow .ql-picker.ql-size .ql-picker-label[data-value=small]::before,\n.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=small]::before {\n  content: 'Small';\n}\n.ql-snow .ql-picker.ql-size .ql-picker-label[data-value=large]::before,\n.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=large]::before {\n  content: 'Large';\n}\n.ql-snow .ql-picker.ql-size .ql-picker-label[data-value=huge]::before,\n.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=huge]::before {\n  content: 'Huge';\n}\n.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=small]::before {\n  font-size: 10px;\n}\n.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=large]::before {\n  font-size: 18px;\n}\n.ql-snow .ql-picker.ql-size .ql-picker-item[data-value=huge]::before {\n  font-size: 32px;\n}\n.ql-snow .ql-color-picker.ql-background .ql-picker-item {\n  background-color: #fff;\n}\n.ql-snow .ql-color-picker.ql-color .ql-picker-item {\n  background-color: #000;\n}\n.ql-toolbar.ql-snow {\n  border: 1px solid #ccc;\n  box-sizing: border-box;\n  font-family: 'Helvetica Neue', 'Helvetica', 'Arial', sans-serif;\n  padding: 8px;\n}\n.ql-toolbar.ql-snow .ql-formats {\n  margin-right: 15px;\n}\n.ql-toolbar.ql-snow .ql-picker-label {\n  border: 1px solid transparent;\n}\n.ql-toolbar.ql-snow .ql-picker-options {\n  border: 1px solid transparent;\n  box-shadow: rgba(0,0,0,0.2) 0 2px 8px;\n}\n.ql-toolbar.ql-snow .ql-picker.ql-expanded .ql-picker-label {\n  border-color: #ccc;\n}\n.ql-toolbar.ql-snow .ql-picker.ql-expanded .ql-picker-options {\n  border-color: #ccc;\n}\n.ql-toolbar.ql-snow .ql-color-picker .ql-picker-item.ql-selected,\n.ql-toolbar.ql-snow .ql-color-picker .ql-picker-item:hover {\n  border-color: #000;\n}\n.ql-toolbar.ql-snow + .ql-container.ql-snow {\n  border-top: 0px;\n}\n.ql-snow .ql-tooltip {\n  background-color: #fff;\n  border: 1px solid #ccc;\n  box-shadow: 0px 0px 5px #ddd;\n  color: #444;\n  padding: 5px 12px;\n  white-space: nowrap;\n}\n.ql-snow .ql-tooltip::before {\n  content: \"Visit URL:\";\n  line-height: 26px;\n  margin-right: 8px;\n}\n.ql-snow .ql-tooltip input[type=text] {\n  display: none;\n  border: 1px solid #ccc;\n  font-size: 13px;\n  height: 26px;\n  margin: 0px;\n  padding: 3px 5px;\n  width: 170px;\n}\n.ql-snow .ql-tooltip a.ql-preview {\n  display: inline-block;\n  max-width: 200px;\n  overflow-x: hidden;\n  text-overflow: ellipsis;\n  vertical-align: top;\n}\n.ql-snow .ql-tooltip a.ql-action::after {\n  border-right: 1px solid #ccc;\n  content: 'Edit';\n  margin-left: 16px;\n  padding-right: 8px;\n}\n.ql-snow .ql-tooltip a.ql-remove::before {\n  content: 'Remove';\n  margin-left: 8px;\n}\n.ql-snow .ql-tooltip a {\n  line-height: 26px;\n}\n.ql-snow .ql-tooltip.ql-editing a.ql-preview,\n.ql-snow .ql-tooltip.ql-editing a.ql-remove {\n  display: none;\n}\n.ql-snow .ql-tooltip.ql-editing input[type=text] {\n  display: inline-block;\n}\n.ql-snow .ql-tooltip.ql-editing a.ql-action::after {\n  border-right: 0px;\n  content: 'Save';\n  padding-right: 0px;\n}\n.ql-snow .ql-tooltip[data-mode=link]::before {\n  content: \"Enter link:\";\n}\n.ql-snow .ql-tooltip[data-mode=formula]::before {\n  content: \"Enter formula:\";\n}\n.ql-snow .ql-tooltip[data-mode=video]::before {\n  content: \"Enter video:\";\n}\n.ql-snow a {\n  color: #06c;\n}\n.ql-container.ql-snow {\n  border: 1px solid #ccc;\n}\n","/* 1. Components */\n@import 'components/example-viewer';\n@import 'components/input';\n\n/* 2. Overrides */\n@import 'overrides/angular-material';\n@import 'overrides/highlightjs';\n@import 'overrides/perfect-scrollbar';\n@import 'overrides/quill';\n","/* ----------------------------------------------------------------------------------------------------- */\n/*  @ Example viewer\n/* ----------------------------------------------------------------------------------------------------- */\n.example-viewer {\n    display: flex;\n    flex-direction: column;\n    margin: 32px 0;\n    overflow: hidden;\n    @apply rounded-2xl shadow bg-card;\n\n    .title {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        height: 88px;\n        min-height: 88px;\n        max-height: 88px;\n        padding: 0 40px;\n\n        h6 {\n            font-weight: 700;\n        }\n\n        .controls {\n            display: flex;\n            align-items: center;\n\n            > * + * {\n                margin-left: 8px;\n            }\n        }\n    }\n\n    mat-tab-group {\n\n        .mat-tab-body-content {\n\n            .fuse-highlight {\n\n                pre {\n                    margin: 0;\n                    border-radius: 0;\n                }\n            }\n        }\n    }\n}\n","input,\ntextarea {\n    background: transparent;\n\n    /* Placeholder color */\n    &::placeholder {\n        @apply text-hint;\n    }\n\n    &::-moz-placeholder {\n        @apply text-hint;\n    }\n\n    &::-webkit-input-placeholder {\n        @apply text-hint;\n    }\n\n    &:-ms-input-placeholder {\n        @apply text-hint;\n    }\n\n    &:-webkit-autofill {\n        -webkit-transition: 'background-color 9999s ease-out';\n        -webkit-transition-delay: 9999s;\n    }\n\n    &:-webkit-autofill:hover {\n        -webkit-transition: 'background-color 9999s ease-out';\n        -webkit-transition-delay: 9999s;\n    }\n\n    &:-webkit-autofill:focus {\n        -webkit-transition: 'background-color 9999s ease-out';\n        -webkit-transition-delay: 9999s;\n    }\n\n    &:-webkit-autofill:active {\n        -webkit-transition: 'background-color 9999s ease-out';\n        -webkit-transition-delay: 9999s;\n    }\n}\n","/* ----------------------------------------------------------------------------------------------------- */\n/*  @ Angular Material CDK helpers & overrides\n/* ----------------------------------------------------------------------------------------------------- */\n\n/* ----------------------------------------------------------------------------------------------------- */\n/*  @ Overlay\n/* ----------------------------------------------------------------------------------------------------- */\n.fuse-backdrop-on-mobile {\n    @apply bg-black bg-opacity-60 sm:bg-transparent #{'!important'};\n}\n\n/* ----------------------------------------------------------------------------------------------------- */\n/*  @ Angular Material helpers & overrides\n/* ----------------------------------------------------------------------------------------------------- */\n\n/* ----------------------------------------------------------------------------------------------------- */\n/*  @ Accordion\n/* ----------------------------------------------------------------------------------------------------- */\n.mat-accordion {\n\n    .mat-expansion-panel {\n        margin-bottom: 24px;\n        border-radius: 8px !important;\n        transition: box-shadow 225ms cubic-bezier(0.4, 0.0, 0.2, 1);\n        @apply shadow #{'!important'};\n\n        &:last-child {\n            margin-bottom: 0;\n        }\n\n        &.mat-expanded,\n        &:hover {\n            @apply shadow-lg #{'!important'};\n        }\n\n        &:not(.mat-expanded) {\n\n            .mat-expansion-panel-header {\n\n                &:not([aria-disabled=true]) {\n\n                    &.cdk-keyboard-focused,\n                    &.cdk-program-focused,\n                    &:hover {\n                        background: transparent !important;\n                    }\n                }\n            }\n        }\n\n        .mat-expansion-panel-header {\n            font-size: 14px;\n\n            &[aria-disabled=true] {\n\n                .mat-expansion-panel-header-description {\n                    margin-right: 28px;\n                }\n            }\n\n            .mat-expansion-indicator {\n                display: inline-flex;\n                align-items: center;\n                justify-content: center;\n                width: 12px;\n                height: 12px;\n\n                /* Do not override the border color of the expansion panel indicator */\n                &:after {\n                    border-color: currentColor !important;\n                }\n            }\n        }\n\n        .mat-expansion-panel-body {\n            line-height: 1.7;\n            @apply text-secondary #{'!important'};\n        }\n    }\n}\n\n/* ----------------------------------------------------------------------------------------------------- */\n/*  @ Buttons\n/* ----------------------------------------------------------------------------------------------------- */\n.mat-button,\n.mat-fab,\n.mat-flat-button,\n.mat-icon-button,\n.mat-mini-fab,\n.mat-raised-button,\n.mat-stroked-button {\n    display: inline-flex !important;\n    align-items: center;\n    justify-content: center;\n    height: 40px;\n    min-height: 40px;\n    max-height: 40px;\n    line-height: 1 !important;\n\n    .mat-button-wrapper {\n        position: relative;\n        display: inline-flex !important;\n        align-items: center;\n        justify-content: center;\n        height: 100%;\n        z-index: 2; /* Move mat-button-wrapper above the ripple and focus overlay */\n    }\n\n    .mat-button-focus-overlay,\n    .mat-button-ripple {\n        z-index: 1;\n    }\n\n    /* Large button */\n    &.fuse-mat-button-large {\n        height: 48px;\n        min-height: 48px;\n        max-height: 48px;\n    }\n\n    /* Lower the icon opacity on disabled buttons */\n    &.mat-button-disabled {\n\n        .mat-icon {\n            opacity: 0.38 !important;\n        }\n    }\n}\n\n.mat-fab {\n    max-height: 56px;\n}\n\n/* Rounded design */\n.mat-button,\n.mat-flat-button,\n.mat-raised-button,\n.mat-stroked-button {\n    padding: 0 20px !important;\n    border-radius: 4px !important;\n}\n\n/* Target all buttons */\n.mat-button,\n.mat-fab,\n.mat-flat-button,\n.mat-icon-button,\n.mat-fab,\n.mat-mini-fab,\n.mat-raised-button,\n.mat-stroked-button {\n\n    /* mat-progress-spinner inside buttons */\n    .mat-progress-spinner {\n\n        &.mat-progress-spinner-indeterminate-animation[mode=indeterminate] {\n\n            circle {\n                stroke: currentColor !important;\n                animation-duration: 6000ms;\n            }\n        }\n    }\n}\n\n/* Colored background buttons */\n.mat-flat-button,\n.mat-raised-button,\n.mat-fab,\n.mat-mini-fab {\n\n    .mat-icon {\n        color: currentColor !important;\n    }\n\n    /* Add hover and focus style on all buttons */\n    .mat-button-focus-overlay {\n        @apply bg-gray-400 bg-opacity-20 dark:bg-black dark:bg-opacity-5 #{'!important'};\n    }\n\n    /* On palette colored buttons, use a darker color */\n    &.mat-primary,\n    &.mat-accent,\n    &.mat-warn {\n\n        .mat-button-focus-overlay {\n            background-color: rgba(0, 0, 0, 0.1) !important;\n        }\n    }\n\n    &:hover,\n    &.cdk-keyboard-focused,\n    &.cdk-program-focused {\n\n        .mat-button-focus-overlay {\n            opacity: 1 !important;\n        }\n    }\n\n    @media (hover: none) {\n\n        &:hover {\n\n            .mat-button-focus-overlay {\n                opacity: 0 !important;\n            }\n        }\n    }\n\n    &.mat-button-disabled {\n\n        .mat-button-focus-overlay {\n            opacity: 0 !important;\n        }\n    }\n}\n\n/* Transparent background buttons */\n.mat-button,\n.mat-icon-button,\n.mat-stroked-button {\n\n    /* Apply primary color */\n    &.mat-primary:not(.mat-button-disabled) {\n\n        .mat-icon {\n            @apply text-primary #{'!important'};\n        }\n    }\n\n    /* Apply accent color */\n    &.mat-accent:not(.mat-button-disabled) {\n\n        .mat-icon {\n            @apply text-accent #{'!important'};\n        }\n    }\n\n    /* Apply warn color */\n    &.mat-warn:not(.mat-button-disabled) {\n\n        .mat-icon {\n            @apply text-warn #{'!important'};\n        }\n    }\n\n    /* Add hover and focus styles */\n    .mat-button-focus-overlay {\n        @apply bg-gray-400 bg-opacity-20 dark:bg-black dark:bg-opacity-5 #{'!important'};\n    }\n\n    /* On primary colored buttons, use the primary color as focus overlay */\n    &.mat-primary:not(.mat-button-disabled) {\n\n        .mat-button-focus-overlay {\n            @apply bg-primary #{'!important'};\n        }\n    }\n\n    /* On accent colored buttons, use the accent color as focus overlay */\n    &.mat-accent:not(.mat-button-disabled) {\n\n        .mat-button-focus-overlay {\n            @apply bg-accent #{'!important'};\n        }\n    }\n\n    /* On warn colored buttons, use the warn color as focus overlay */\n    &.mat-warn:not(.mat-button-disabled) {\n\n        .mat-button-focus-overlay {\n            @apply bg-warn #{'!important'};\n        }\n    }\n\n    &.mat-primary:not(.mat-button-disabled),\n    &.mat-accent:not(.mat-button-disabled),\n    &.mat-warn:not(.mat-button-disabled) {\n\n        &:hover,\n        &.cdk-keyboard-focused,\n        &.cdk-program-focused {\n\n            .mat-button-focus-overlay {\n                opacity: 0.1 !important;\n            }\n        }\n    }\n\n    &:hover,\n    &.cdk-keyboard-focused,\n    &.cdk-program-focused {\n\n        .mat-button-focus-overlay {\n            opacity: 1 !important;\n        }\n    }\n\n    @media (hover: none) {\n\n        &:hover {\n\n            .mat-button-focus-overlay {\n                opacity: 0 !important;\n            }\n        }\n    }\n\n    &.mat-button-disabled {\n\n        .mat-button-focus-overlay {\n            opacity: 0 !important;\n        }\n    }\n}\n\n/* Stroked buttons */\n.mat-stroked-button {\n\n    /* Border color */\n    &:not(.mat-button-disabled) {\n        @apply border-gray-300 dark:border-gray-500 #{'!important'};\n    }\n\n    &.mat-button-disabled {\n        @apply border-gray-200 dark:border-gray-600 #{'!important'};\n    }\n}\n\n/* ----------------------------------------------------------------------------------------------------- */\n/*  @ Button Toggle\n/* ----------------------------------------------------------------------------------------------------- */\n.mat-button-toggle-group {\n    border: none !important;\n    @apply space-x-1;\n\n    &.mat-button-toggle-group-appearance-standard {\n\n        .mat-button-toggle + .mat-button-toggle {\n            background-clip: padding-box;\n        }\n    }\n\n    .mat-button-toggle {\n        border-radius: 9999px;\n        overflow: hidden;\n        border: none !important;\n        font-weight: 500;\n\n        &.mat-button-toggle-checked {\n\n            .mat-button-toggle-label-content {\n                @apply text-default #{'!important'};\n            }\n        }\n\n        .mat-button-toggle-label-content {\n            padding: 0 20px;\n            @apply text-secondary;\n        }\n\n        .mat-ripple {\n            border-radius: 9999px;\n        }\n    }\n}\n\n/* ----------------------------------------------------------------------------------------------------- */\n/*  @ Checkbox\n/* ----------------------------------------------------------------------------------------------------- */\n.mat-checkbox {\n    display: inline-flex;\n\n    /* Allow multiline text */\n    .mat-checkbox-layout {\n        white-space: normal;\n\n        .mat-checkbox-inner-container {\n            display: inline-flex;\n            align-items: center;\n            margin: 0 8px 0 0;\n\n            /* Add a zero-width space character to trick the container */\n            /* into being the same height as a single line of the label */\n            &:after {\n                content: '\\200b';\n            }\n        }\n\n        .mat-checkbox-label {\n            line-height: inherit;\n        }\n    }\n}\n\n/* ----------------------------------------------------------------------------------------------------- */\n/*  @ Chip\n/* ----------------------------------------------------------------------------------------------------- */\n.mat-chip {\n    font-weight: 500 !important;\n}\n\n/* ----------------------------------------------------------------------------------------------------- */\n/*  @ Dialog\n/* ----------------------------------------------------------------------------------------------------- */\n.mat-dialog-container {\n    border-radius: 16px !important;\n}\n\n/* ----------------------------------------------------------------------------------------------------- */\n/*  @ Drawer\n/* ----------------------------------------------------------------------------------------------------- */\n.mat-drawer-backdrop.mat-drawer-shown {\n    background-color: rgba(0, 0, 0, 0.6) !important;\n}\n\n/* ----------------------------------------------------------------------------------------------------- */\n/*  @ Form fields\n/* ----------------------------------------------------------------------------------------------------- */\n\n/* Fuse only uses 'fill' style form fields and therefore */\n/* only provides fixes and tweaks for that style */\n.mat-form-field.mat-form-field-appearance-fill {\n\n    /* Disabled */\n    &.mat-form-field-disabled {\n        opacity: 0.7 !important;\n    }\n\n    /* Invalid */\n    &.mat-form-field-invalid {\n\n        .mat-form-field-wrapper {\n\n            /* Border color */\n            .mat-form-field-flex {\n                @apply border-warn dark:border-warn #{'!important'};\n            }\n        }\n    }\n\n    /* Focused */\n    &.mat-focused {\n\n        .mat-form-field-wrapper {\n\n            /* Background color */\n            .mat-form-field-flex {\n                @apply bg-card dark:bg-card #{'!important'};\n            }\n        }\n    }\n\n    /* Focused and valid fields */\n    &.mat-focused:not(.mat-form-field-invalid) {\n\n        .mat-form-field-wrapper {\n\n            /* Border color */\n            .mat-form-field-flex {\n                @apply border-primary dark:border-primary #{'!important'};\n            }\n        }\n    }\n\n    /* Disable floating mat-label */\n    &.mat-form-field-has-label.mat-form-field-can-float.mat-form-field-should-float {\n\n        .mat-form-field-label-wrapper {\n\n            .mat-form-field-label {\n                width: 100% !important;\n                transform: none !important;\n            }\n        }\n    }\n\n    /* Remove the default arrow for native select */\n    &.mat-form-field-type-mat-native-select {\n\n        .mat-form-field-infix {\n\n            select {\n                top: auto;\n                margin-top: 0;\n                margin-bottom: 0;\n                padding-top: 0;\n                padding-right: 18px;\n                background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%2364748B' viewBox='0 0 24 24'%3E%3Cpath d='M7 10l5 5 5-5H7z'/%3E%3C/svg%3E\");\n                background-repeat: no-repeat;\n                background-position: right -7px center;\n                background-size: 24px;\n\n                .dark & {\n                    background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%2397a6ba' viewBox='0 0 24 24'%3E%3Cpath d='M7 10l5 5 5-5H7z'/%3E%3C/svg%3E\");\n                }\n            }\n\n            &:after {\n                display: none;\n            }\n        }\n    }\n\n    /* Adjustments for mat-label */\n    &.mat-form-field-has-label {\n\n        .mat-form-field-wrapper {\n            margin-top: 24px;\n        }\n    }\n\n    /* Default style tweaks and enhancements */\n    .mat-form-field-wrapper {\n        margin-bottom: 16px;\n        padding-bottom: 0;\n\n        .mat-form-field-flex {\n            position: relative;\n            display: flex;\n            align-items: stretch;\n            min-height: 35px;\n            max-height: 35px;\n            border-radius: 3px;\n            padding: 0 16px;\n            border-width: 1px;\n            @apply shadow-sm bg-gray-50 border-gray-200 dark:bg-black dark:bg-opacity-5 dark:border-gray-500 #{'!important'};\n\n            .mat-form-field-prefix {\n\n                > .mat-icon {\n                    margin-right: 12px;\n                }\n\n                > .mat-icon-button {\n                    margin: 0 4px 0 -10px;\n                }\n\n                > .mat-select {\n                    margin-right: 10px;\n                }\n\n                > .mat-datepicker-toggle {\n                    margin-left: -8px;\n                }\n\n                > *:not(.mat-icon):not(.mat-icon-button):not(.mat-select):not(.mat-datepicker-toggle) {\n                    margin-right: 12px;\n                }\n            }\n\n            .mat-form-field-suffix {\n\n                > .mat-icon {\n                    margin-left: 12px;\n                }\n\n                > .mat-icon-button {\n                    margin: 0 -10px 0 4px;\n                }\n\n                > .mat-select {\n                    margin-left: 10px;\n                }\n\n                > .mat-datepicker-toggle {\n                    margin-right: -8px;\n                }\n            }\n\n            .mat-form-field-prefix,\n            .mat-form-field-suffix {\n                display: inline-flex;\n                align-items: center;\n                justify-content: center;\n                @apply text-hint #{'!important'};\n\n                .mat-icon-button {\n                    width: 40px;\n                    min-width: 40px;\n                    height: 40px;\n                    min-height: 40px;\n                }\n\n                .mat-icon,\n                .mat-icon-button:not(.mat-button-disabled),\n                .mat-select-value {\n                    @apply text-hint;\n                }\n\n                /* Remove the margins from the mat-icon if it's inside a button */\n                /* Force the icon size to 24 */\n                .mat-button,\n                .mat-raised-button,\n                .mat-icon-button,\n                .mat-stroked-button,\n                .mat-flat-button,\n                .mat-fab,\n                .mat-mini-fab {\n\n                    .mat-icon {\n                        margin: 0 !important;\n                        @apply icon-size-6;\n                    }\n                }\n\n                /* Datepicker default icon size */\n                .mat-datepicker-toggle-default-icon {\n                    @apply icon-size-6;\n                }\n\n                /* Make mat-select usable as prefix and suffix */\n                .mat-select {\n                    display: flex;\n                    align-items: center;\n\n                    &:focus {\n\n                        .mat-select-trigger {\n\n                            .mat-select-value {\n                                @apply text-primary #{'!important'};\n                            }\n\n                            .mat-select-arrow-wrapper {\n\n                                .mat-select-arrow {\n                                    border-top-color: var(--fuse-primary) !important;\n                                }\n                            }\n                        }\n                    }\n\n                    .mat-select-trigger {\n                        display: flex;\n                        align-items: center;\n\n                        .mat-select-value {\n                            display: flex;\n                            max-width: none;\n\n                            mat-select-trigger {\n\n                                .mat-icon {\n                                    margin: 0 !important;\n                                }\n                            }\n                        }\n\n                        .mat-select-arrow-wrapper {\n                            display: flex;\n                            align-items: center;\n                            transform: none;\n                            margin-left: 4px;\n\n                            .mat-select-arrow {\n                                min-height: 0;\n                                @apply text-gray-500 dark:text-gray-400 #{'!important'};\n                            }\n                        }\n                    }\n                }\n            }\n\n            .mat-form-field-infix {\n                position: static;\n                display: flex;\n                align-items: center;\n                width: 88px;\n                padding: 0;\n                border: 0;\n\n                .mat-input-element {\n                    padding: 14px 0;\n                    margin-top: 0;\n                }\n\n                /* Textarea */\n                textarea.mat-input-element {\n                    display: flex;\n                    align-self: stretch;\n                    min-height: 36px;\n                    height: auto;\n                    margin: 14px 0;\n                    padding: 0 6px 0 0;\n                    transform: none;\n                }\n\n                /* Select */\n                .mat-select {\n                    display: inline-flex;\n\n                    .mat-select-trigger {\n                        display: inline-flex;\n                        align-items: center;\n                        width: 100%;\n\n                        .mat-select-value {\n                            display: flex;\n                            position: relative;\n                            max-width: none;\n\n                            .mat-select-value-text {\n                                display: inline-flex;\n\n                                > * {\n                                    overflow: hidden;\n                                    white-space: nowrap;\n                                    text-overflow: ellipsis;\n                                }\n                            }\n                        }\n                    }\n\n                    .mat-select-arrow-wrapper {\n                        transform: translateY(0);\n\n                        .mat-select-arrow {\n                            margin: 0 0 0 8px;\n                        }\n                    }\n                }\n\n                /* Chips */\n                .mat-chip-list {\n                    width: 100%;\n                    margin: 0 -8px;\n\n                    .mat-chip-input {\n                        margin: 0 0 0 8px;\n                    }\n                }\n\n                .mat-form-field-label-wrapper {\n                    top: -25px;\n                    height: auto;\n                    padding-top: 0;\n                    overflow: visible;\n                    pointer-events: auto;\n\n                    .mat-form-field-label {\n                        position: relative;\n                        top: 0;\n                        margin-top: 0;\n                        backface-visibility: hidden;\n                        transition: none;\n                        font-weight: 500;\n                        @apply text-default #{'!important'};\n                    }\n                }\n            }\n        }\n\n        /* Remove the underline */\n        .mat-form-field-underline {\n            display: none;\n        }\n\n        /* Subscript tweaks */\n        .mat-form-field-subscript-wrapper {\n            position: relative;\n            top: auto;\n            padding: 0;\n            margin-top: 0;\n            font-size: 12px;\n            font-weight: 500;\n            line-height: 1;\n\n            > div {\n                display: contents; /* Remove the div from flow to stop the subscript animation */\n            }\n\n            .mat-error,\n            .mat-hint {\n                display: block;\n                margin-top: 4px;\n            }\n\n            .mat-hint {\n                @apply text-hint #{'!important'};\n            }\n        }\n    }\n\n    /* Adds better alignment for textarea inputs */\n    &.fuse-mat-textarea {\n\n        .mat-form-field-wrapper {\n\n            .mat-form-field-flex {\n\n                .mat-form-field-prefix,\n                .mat-form-field-suffix {\n                    align-items: flex-start;\n                }\n\n                .mat-form-field-prefix {\n                    padding-top: 12px;\n                }\n\n                .mat-form-field-suffix {\n                    padding-top: 12px;\n                }\n            }\n        }\n    }\n\n    /* Removes subscript space */\n    &.fuse-mat-no-subscript {\n\n        .mat-form-field-wrapper {\n            padding-bottom: 0;\n            margin-bottom: 0;\n\n            .mat-form-field-subscript-wrapper {\n                display: none !important;\n                height: 0 !important;\n            }\n        }\n    }\n\n    /* Rounded */\n    &.fuse-mat-rounded {\n\n        .mat-form-field-wrapper {\n\n            .mat-form-field-flex {\n                border-radius: 24px;\n            }\n        }\n\n        /* Emphasized affix */\n        &.fuse-mat-emphasized-affix {\n\n            .mat-form-field-wrapper {\n\n                .mat-form-field-flex {\n\n                    .mat-form-field-prefix {\n                        border-radius: 24px 0 0 24px;\n\n                        > .mat-icon {\n                            margin-right: 12px;\n                        }\n\n                        > .mat-icon-button {\n                            margin-right: 2px;\n                        }\n\n                        > .mat-select {\n                            margin-right: 8px;\n                        }\n\n                        > .mat-datepicker-toggle {\n                            margin-right: 4px;\n                        }\n\n                        > *:not(.mat-icon):not(.mat-icon-button):not(.mat-select):not(.mat-datepicker-toggle) {\n                            margin-right: 12px;\n                        }\n                    }\n\n                    .mat-form-field-suffix {\n                        border-radius: 0 24px 24px 0;\n\n                        > .mat-icon {\n                            margin-left: 12px !important;\n                        }\n\n                        > .mat-icon-button {\n                            margin-left: 2px !important;\n                        }\n\n                        > .mat-select {\n                            margin-left: 12px !important;\n                        }\n\n                        > .mat-datepicker-toggle {\n                            margin-left: 4px !important;\n                        }\n\n                        > *:not(.mat-icon):not(.mat-icon-button):not(.mat-select):not(.mat-datepicker-toggle) {\n                            margin-left: 12px !important;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /* Dense */\n    &.fuse-mat-dense {\n\n        .mat-form-field-wrapper {\n\n            .mat-form-field-flex {\n                min-height: 40px;\n\n                .mat-form-field-prefix,\n                .mat-form-field-suffix {\n\n                    .mat-icon-button {\n                        width: 32px;\n                        min-width: 32px;\n                        height: 32px;\n                        min-height: 32px;\n                    }\n                }\n\n                .mat-form-field-prefix {\n\n                    > .mat-icon-button {\n                        margin-left: -6px;\n                        margin-right: 12px;\n                    }\n                }\n\n                .mat-form-field-suffix {\n\n                    > .mat-icon-button {\n                        margin-left: 12px;\n                        margin-right: -6px;\n                    }\n                }\n\n                .mat-form-field-infix {\n\n                    .mat-input-element {\n                        padding: 11px 0;\n                    }\n                }\n            }\n        }\n\n        /* Rounded */\n        &.fuse-mat-rounded {\n\n            .mat-form-field-wrapper {\n\n                .mat-form-field-flex {\n                    border-radius: 20px;\n                }\n            }\n\n            /* Emphasized affix */\n            &.fuse-mat-emphasized-affix {\n\n                .mat-form-field-wrapper {\n\n                    .mat-form-field-flex {\n\n                        .mat-form-field-prefix {\n                            border-radius: 20px 0 0 20px !important;\n                        }\n\n                        .mat-form-field-suffix {\n                            border-radius: 0 20px 20px 0 !important;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /* Emphasized affix */\n    &.fuse-mat-emphasized-affix {\n\n        .mat-form-field-wrapper {\n\n            .mat-form-field-flex {\n\n                .mat-form-field-prefix {\n                    margin: 0 16px 0 -16px;\n                    padding-left: 16px;\n                    border-radius: 6px 0 0 6px;\n                    border-right-width: 1px;\n\n                    > .mat-icon {\n                        margin-right: 16px;\n                    }\n\n                    > .mat-icon-button {\n                        margin: 0 6px 0 -10px;\n                    }\n\n                    > .mat-select {\n                        margin-right: 12px;\n                    }\n\n                    > .mat-datepicker-toggle {\n                        margin-right: 8px;\n                    }\n\n                    > *:not(.mat-icon):not(.mat-icon-button):not(.mat-select):not(.mat-datepicker-toggle) {\n                        margin-right: 16px;\n                    }\n                }\n\n                .mat-form-field-suffix {\n                    margin: 0 -16px 0 16px;\n                    padding-right: 16px;\n                    border-radius: 0 6px 6px 0;\n                    border-left-width: 1px;\n\n                    > .mat-icon {\n                        margin-left: 16px;\n                    }\n\n                    > .mat-icon-button {\n                        margin: 0 -10px 0 6px;\n                    }\n\n                    > .mat-select {\n                        margin: 0 -4px 0 16px;\n                    }\n\n                    > .mat-datepicker-toggle {\n                        margin-left: 8px;\n                    }\n\n                    > *:not(.mat-icon):not(.mat-icon-button):not(.mat-select):not(.mat-datepicker-toggle) {\n                        margin-left: 16px;\n                    }\n                }\n\n                .mat-form-field-prefix,\n                .mat-form-field-suffix {\n                    @apply bg-default border-gray-300 dark:border-gray-500 #{'!important'};\n                }\n            }\n        }\n    }\n\n    /* Bolder border width */\n    &.fuse-mat-bold {\n\n        .mat-form-field-wrapper {\n\n            .mat-form-field-flex {\n                border-width: 2px !important;\n            }\n        }\n    }\n}\n\n/* Fix the outline appearance */\n.mat-form-field.mat-form-field-appearance-outline {\n\n    .mat-form-field-wrapper {\n\n        .mat-form-field-flex {\n\n            .mat-form-field-outline {\n                @apply text-gray-300 dark:text-gray-500 #{'!important'};\n            }\n        }\n    }\n}\n\n/* ----------------------------------------------------------------------------------------------------- */\n/*  @ Datepicker\n/* ----------------------------------------------------------------------------------------------------- */\n/* Hover and active cell content background opacity */\n.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover,\n.cdk-keyboard-focused .mat-calendar-body-active,\n.cdk-program-focused .mat-calendar-body-active {\n    & > .mat-calendar-body-cell-content {\n        &:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n            @apply bg-primary bg-opacity-30 #{'!important'};\n        }\n    }\n}\n\n/* ----------------------------------------------------------------------------------------------------- */\n/*  @ Icon\n/* ----------------------------------------------------------------------------------------------------- */\n.mat-icon {\n    display: inline-flex !important;\n    align-items: center;\n    justify-content: center;\n    width: 24px;\n    min-width: 24px;\n    height: 24px;\n    min-height: 24px;\n    font-size: 24px;\n    line-height: 24px;\n    -webkit-appearance: none !important;\n}\n\n/* ----------------------------------------------------------------------------------------------------- */\n/*  @ Inputs\n/* ----------------------------------------------------------------------------------------------------- */\n.mat-input-element {\n\n    &::placeholder {\n        transition: none !important;\n        @apply text-hint #{'!important'};\n    }\n\n    &::-moz-placeholder {\n        transition: none !important;\n        @apply text-hint #{'!important'};\n    }\n\n    &::-webkit-input-placeholder {\n        transition: none !important;\n        @apply text-hint #{'!important'};\n    }\n\n    &:-ms-input-placeholder {\n        transition: none !important;\n        @apply text-hint #{'!important'};\n    }\n}\n\n/* Invalid */\n.mat-form-field-invalid {\n\n    .mat-input-element {\n\n        /* Placeholder color */\n        &::placeholder {\n            @apply text-warn #{'!important'};\n        }\n\n        &::-moz-placeholder {\n            @apply text-warn #{'!important'};\n        }\n\n        &::-webkit-input-placeholder {\n            @apply text-warn #{'!important'};\n        }\n\n        &:-ms-input-placeholder {\n            @apply text-warn #{'!important'};\n        }\n    }\n}\n\n/* ----------------------------------------------------------------------------------------------------- */\n/*  @ Menu\n/* ----------------------------------------------------------------------------------------------------- */\n.mat-menu-panel {\n    min-width: 144px !important;\n\n    .mat-menu-content {\n\n        .mat-menu-item {\n            display: flex;\n            align-items: center;\n\n            &.mat-menu-item-submenu-trigger {\n                padding-right: 40px;\n            }\n\n            .mat-icon {\n                margin-right: 12px;\n            }\n        }\n\n        /* Divider within mat-menu */\n        mat-divider {\n            margin: 8px 0;\n        }\n    }\n}\n\n/* ----------------------------------------------------------------------------------------------------- */\n/*  @ Paginator\n/* ----------------------------------------------------------------------------------------------------- */\n.mat-paginator {\n\n    .mat-paginator-container {\n        padding: 8px 16px;\n        justify-content: space-between;\n\n        @screen sm {\n            justify-content: normal;\n        }\n\n        /* Page size select */\n        .mat-paginator-page-size {\n            align-items: center;\n            min-height: 40px;\n            margin: 8px;\n\n            .mat-paginator-page-size-label {\n                display: none;\n                margin-right: 12px;\n\n                @screen sm {\n                    display: block;\n                }\n            }\n\n            .mat-paginator-page-size-select {\n                margin: 0;\n\n                .mat-form-field-wrapper {\n                    margin-bottom: 0;\n\n                    .mat-form-field-flex {\n                        min-height: 32px;\n                        padding: 0 10px;\n                    }\n                }\n            }\n        }\n\n        /* Range actions */\n        .mat-paginator-range-actions {\n            margin: 8px 0;\n\n            .mat-paginator-range-label {\n                margin-right: 16px;\n            }\n        }\n    }\n}\n\n/* ----------------------------------------------------------------------------------------------------- */\n/*  @ Select\n/* ----------------------------------------------------------------------------------------------------- */\n.mat-select {\n    display: inline-flex;\n\n    .mat-select-placeholder {\n        transition: none !important;\n        @apply text-hint #{'!important'};\n    }\n\n    .mat-select-trigger {\n        display: inline-flex;\n        align-items: center;\n        width: 100%;\n        height: auto;\n\n        .mat-select-value {\n            display: flex;\n            position: relative;\n            max-width: none;\n\n            .mat-select-value-text {\n                display: inline-flex;\n\n                > * {\n                    overflow: hidden;\n                    white-space: nowrap;\n                    text-overflow: ellipsis;\n                }\n            }\n        }\n    }\n\n    .mat-select-arrow-wrapper {\n        transform: translateY(0);\n\n        .mat-select-arrow {\n            margin: 0 4px 0 2px;\n        }\n    }\n}\n\n/* Invalid */\n.mat-form-field-invalid {\n\n    .mat-select {\n\n        /* Placeholder color */\n        .mat-select-placeholder {\n            @apply text-warn #{'!important'};\n        }\n    }\n}\n\n/* ----------------------------------------------------------------------------------------------------- */\n/*  @ Slide Toggle\n/* ----------------------------------------------------------------------------------------------------- */\n.mat-slide-toggle.mat-checked .mat-slide-toggle-bar {\n    background-color: rgba(var(--fuse-accent-500-rgb), 0.54) !important;\n}\n\n.mat-slide-toggle.mat-primary.mat-checked .mat-slide-toggle-bar {\n    background-color: rgba(var(--fuse-primary-500-rgb), 0.54) !important;\n}\n\n.mat-slide-toggle.mat-warn.mat-checked .mat-slide-toggle-bar {\n    background-color: rgba(var(--fuse-warn-500-rgb), 0.54) !important;\n}\n\n/* ----------------------------------------------------------------------------------------------------- */\n/*  @ Stepper\n/* ----------------------------------------------------------------------------------------------------- */\n.mat-step-icon {\n\n    /* Do not override the mat-icon color */\n    .mat-icon {\n        color: currentColor !important;\n    }\n}\n\n.mat-step-label,\n.mat-step-label-selected {\n    font-weight: 500 !important;\n}\n\n/* ----------------------------------------------------------------------------------------------------- */\n/*  @ Tabs\n/* ----------------------------------------------------------------------------------------------------- */\n.mat-tab-group {\n\n    /* No header */\n    &.fuse-mat-no-header {\n\n        .mat-tab-header {\n            height: 0 !important;\n            max-height: 0 !important;\n            border: none !important;\n            visibility: hidden !important;\n            opacity: 0 !important;\n        }\n    }\n\n    .mat-tab-header {\n        border-bottom: none !important;\n\n        .mat-tab-label-container {\n            padding: 0 24px;\n\n            .mat-tab-list {\n\n                .mat-tab-labels {\n\n                    .mat-tab-label {\n                        min-width: 0 !important;\n                        height: 40px !important;\n                        padding: 0 20px !important;\n                        border-radius: 9999px !important;\n                        @apply text-secondary;\n\n                        &.mat-tab-label-active {\n                            @apply bg-gray-700 bg-opacity-10 dark:bg-gray-50 dark:bg-opacity-10 #{'!important'};\n                            @apply text-default #{'!important'};\n                        }\n\n                        + .mat-tab-label {\n                            margin-left: 4px;\n                        }\n\n                        .mat-tab-label-content {\n                            line-height: 20px;\n                        }\n                    }\n                }\n\n                .mat-ink-bar {\n                    display: none !important;\n                }\n            }\n        }\n    }\n\n    .mat-tab-body-content {\n        padding: 24px;\n    }\n}\n\n.mat-tab-label {\n    opacity: 1 !important;\n}\n\n/* ----------------------------------------------------------------------------------------------------- */\n/*  @ Textarea\n/* ----------------------------------------------------------------------------------------------------- */\ntextarea.mat-input-element {\n    box-sizing: content-box !important;\n}\n\n/* ----------------------------------------------------------------------------------------------------- */\n/*  @ Toolbar\n/* ----------------------------------------------------------------------------------------------------- */\n.mat-toolbar {\n\n    /* Apply primary contrast color */\n    &.mat-primary {\n\n        .mat-icon {\n            @apply text-on-primary #{'!important'};\n        }\n\n        .text-secondary {\n            @apply text-on-primary text-opacity-60 #{'!important'};\n        }\n\n        .text-hint {\n            @apply text-on-primary text-opacity-38 #{'!important'};\n        }\n\n        .text-disabled {\n            @apply text-on-primary text-opacity-38 #{'!important'};\n        }\n\n        .divider {\n            @apply text-on-primary text-opacity-12 #{'!important'};\n        }\n    }\n\n    /* Apply accent contrast color */\n    &.mat-accent {\n\n        .mat-icon {\n            @apply text-on-accent #{'!important'};\n        }\n\n        .text-secondary {\n            @apply text-on-accent text-opacity-60 #{'!important'};\n        }\n\n        .text-hint {\n            @apply text-on-accent text-opacity-38 #{'!important'};\n        }\n\n        .text-disabled {\n            @apply text-on-accent text-opacity-38 #{'!important'};\n        }\n\n        .divider {\n            @apply text-on-accent text-opacity-12 #{'!important'};\n        }\n    }\n\n    /* Apply warn contrast color */\n    &.mat-warn {\n\n        .mat-icon {\n            @apply text-on-warn #{'!important'};\n        }\n\n        .text-secondary {\n            @apply text-on-warn text-opacity-60 #{'!important'};\n        }\n\n        .text-hint {\n            @apply text-on-warn text-opacity-38 #{'!important'};\n        }\n\n        .text-disabled {\n            @apply text-on-warn text-opacity-38 #{'!important'};\n        }\n\n        .divider {\n            @apply text-on-warn text-opacity-12 #{'!important'};\n        }\n    }\n}\n","/* ----------------------------------------------------------------------------------------------------- */\n/*  @ Highlight.js overrides\n/* ----------------------------------------------------------------------------------------------------- */\ncode[class*='language-'],\npre[class*='language-'] {\n\n    .hljs-comment,\n    .hljs-quote {\n        color: #8B9FC1;\n        font-style: italic;\n    }\n\n    .hljs-doctag,\n    .hljs-keyword,\n    .hljs-formula {\n        color: #22D3EE;\n    }\n\n    .hljs-name {\n        color: #E879F9;\n    }\n\n    .hljs-tag {\n        color: #BAE6FD;\n    }\n\n    .hljs-section,\n    .hljs-selector-tag,\n    .hljs-deletion,\n    .hljs-subst {\n        color: #F87F71;\n    }\n\n    .hljs-literal {\n        color: #36BEFF;\n    }\n\n    .hljs-string,\n    .hljs-regexp,\n    .hljs-addition,\n    .hljs-attribute,\n    .hljs-meta-string {\n        color: #BEF264;\n    }\n\n    .hljs-built_in,\n    .hljs-class .hljs-title {\n        color: #FFD374;\n    }\n\n    .hljs-attr,\n    .hljs-variable,\n    .hljs-template-variable,\n    .hljs-type,\n    .hljs-selector-class,\n    .hljs-selector-attr,\n    .hljs-selector-pseudo,\n    .hljs-number {\n        color: #22D3EE;\n    }\n\n    .hljs-symbol,\n    .hljs-bullet,\n    .hljs-link,\n    .hljs-meta,\n    .hljs-selector-id,\n    .hljs-title {\n        color: #E879F9;\n    }\n\n    .hljs-emphasis {\n        font-style: italic;\n    }\n\n    .hljs-strong {\n        font-weight: 700;\n    }\n\n    .hljs-link {\n        text-decoration: underline;\n    }\n}\n","/* ----------------------------------------------------------------------------------------------------- */\n/*  @ Perfect scrollbar overrides\n/* ----------------------------------------------------------------------------------------------------- */\n.ps {\n    position: relative;\n\n    &:hover,\n    &.ps--focus,\n    &.ps--scrolling-x,\n    &.ps--scrolling-y {\n\n        > .ps__rail-x,\n        > .ps__rail-y {\n            opacity: 1;\n        }\n    }\n\n    > .ps__rail-x,\n    > .ps__rail-y {\n        z-index: 99999;\n    }\n\n    > .ps__rail-x {\n        height: 14px;\n        background: transparent !important;\n        transition: none !important;\n\n        &:hover,\n        &:focus,\n        &.ps--clicking {\n            opacity: 1;\n\n            .ps__thumb-x {\n                height: 10px;\n            }\n        }\n\n        .ps__thumb-x {\n            background: rgba(0, 0, 0, 0.5);\n            box-shadow: 0 0 0 1px rgba(255, 255, 255, 0.15);\n            height: 6px;\n            transition: height 225ms cubic-bezier(0.25, 0.8, 0.25, 1);\n        }\n    }\n\n    > .ps__rail-y {\n        width: 14px;\n        background: transparent !important;\n        transition: none !important;\n        left: auto !important;\n\n        &:hover,\n        &:focus,\n        &.ps--clicking {\n            opacity: 1;\n\n            .ps__thumb-y {\n                width: 10px;\n            }\n        }\n\n        .ps__thumb-y {\n            background: rgba(0, 0, 0, 0.5);\n            box-shadow: 0 0 0 1px rgba(255, 255, 255, 0.15);\n            width: 6px;\n            transition: width 225ms cubic-bezier(0.25, 0.8, 0.25, 1);\n        }\n    }\n}\n","/* ----------------------------------------------------------------------------------------------------- */\n/*  @ Quill editor overrides\n/* ----------------------------------------------------------------------------------------------------- */\n.ql-toolbar {\n    border-radius: 6px 6px 0 0;\n    padding: 0 !important;\n    @apply bg-gray-100;\n    @apply border-gray-300 border-opacity-100 #{'!important'};\n\n    .dark & {\n        background-color: rgba(0, 0, 0, 0.05);\n        @apply border-gray-500 #{'!important'};\n    }\n\n    .ql-formats {\n        margin: 11px 8px !important;\n    }\n\n    .ql-picker {\n\n        &.ql-expanded {\n\n            .ql-picker-label {\n                @apply border-gray-300;\n\n                .dark & {\n                    @apply border-gray-500;\n                }\n            }\n\n            .ql-picker-options {\n                z-index: 10 !important;\n                @apply border-gray-300 bg-card;\n\n                .dark & {\n                    @apply border-gray-500;\n                }\n            }\n        }\n\n        .ql-picker-label {\n            @apply text-default;\n        }\n\n        .ql-picker-options {\n\n            .ql-picker-item {\n                @apply text-default;\n            }\n        }\n    }\n\n    .ql-stroke,\n    .ql-stroke-mitter {\n        stroke: var(--fuse-icon);\n    }\n\n    .ql-fill {\n        fill: var(--fuse-icon);\n    }\n\n    button:hover,\n    button:focus,\n    button.ql-active,\n    .ql-picker-label:hover,\n    .ql-picker-label.ql-active,\n    .ql-picker-item:hover,\n    .ql-picker-item.ql-selected {\n        @apply text-primary #{'!important'};\n\n        .ql-stroke,\n        .ql-stroke-mitter {\n            stroke: var(--fuse-primary) !important;\n        }\n\n        .ql-fill {\n            fill: var(--fuse-primary) !important;\n        }\n    }\n}\n\n.ql-container {\n    overflow: hidden;\n    border-radius: 0 0 6px 6px;\n    @apply border-gray-300 border-opacity-100 shadow-sm #{'!important'};\n\n    .dark & {\n        @apply border-gray-500 #{'!important'};\n    }\n\n    .ql-editor {\n        min-height: 160px;\n        max-height: 160px;\n        height: 160px;\n        @apply bg-card;\n\n        .dark & {\n            background-color: rgba(0, 0, 0, 0.05);\n        }\n\n        &.ql-blank::before {\n            @apply text-hint;\n        }\n    }\n}\n","/* ----------------------------------------------------------------------------------------------------- */\n/*  @ Import/write your custom styles here.\n/*  @ Styles from this file will override 'vendors.scss' and Fuse's base styles.\n/* ----------------------------------------------------------------------------------------------------- */\n","/* ----------------------------------------------------------------------------------------------------- */\n/*  @ Main Tailwind file for injecting utilities.\n/* ----------------------------------------------------------------------------------------------------- */\n@tailwind utilities;\n"],"names":[],"sourceRoot":"webpack:///"}