{"version":3,"file":"src_app_modules_auth_sign-in_sign-in_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAC4E;AAE1B;;;;;;;;;;;;;;;ICatC,iFAMsC;IAClC,uDACJ;IAAA,4DAAa;;;IALT,iFAAwB;IAIxB,0DACJ;IADI,gGACJ;;;IAeQ,4EAAgE;IAC5D,6EACJ;IAAA,4DAAY;;;IACZ,4EAA6D;IACzD,0FACJ;IAAA,4DAAY;;;IAiBR,0EAGiD;;IAA7C,0FAAiC;;;IACrC,0EAGqD;;IAAjD,8FAAqC;;;IA2B7C,uEAAmC;IAC/B,8EACJ;IAAA,4DAAO;;;IACP,sFAGoD;;IADhD,wEAAe;;;ADvFhC,MAAM,mBAAmB;IAW5B;;OAEG;IACH,YACY,eAA+B,EAC/B,YAAyB,EACzB,YAAyB,EACzB,OAAe;QAHf,oBAAe,GAAf,eAAe,CAAgB;QAC/B,iBAAY,GAAZ,YAAY,CAAa;QACzB,iBAAY,GAAZ,YAAY,CAAa;QACzB,YAAO,GAAP,OAAO,CAAQ;QAd3B,UAAK,GAA6C;YAC9C,IAAI,EAAK,SAAS;YAClB,OAAO,EAAE,EAAE;SACd,CAAC;QAEF,cAAS,GAAY,KAAK,CAAC;IAY3B,CAAC;IAED,wGAAwG;IACxG,oBAAoB;IACpB,wGAAwG;IAExG;;OAEG;IACH,QAAQ;QAEJ,kBAAkB;QAClB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YACtC,KAAK,EAAO,CAAC,cAAc,EAAE,CAAC,+DAAmB,EAAE,4DAAgB,CAAC,CAAC;YACrE,QAAQ,EAAI,CAAC,OAAO,EAAE,+DAAmB,CAAC;YAC1C,UAAU,EAAE,CAAC,EAAE,CAAC;SACnB,CAAC,CAAC;IACP,CAAC;IAED,wGAAwG;IACxG,mBAAmB;IACnB,wGAAwG;IAExG;;OAEG;IACH,MAAM;QAEF,gCAAgC;QAChC,IAAK,IAAI,CAAC,UAAU,CAAC,OAAO,EAC5B;YACI,OAAO;SACV;QAED,mBAAmB;QACnB,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;QAE1B,iBAAiB;QACjB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QAEvB,UAAU;QACV,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;aAC1C,SAAS,CACN,GAAG,EAAE;YAED,wBAAwB;YACxB,sFAAsF;YACtF,oFAAoF;YACpF,gDAAgD;YAChD,8GAA8G;YAC9G,MAAM,WAAW,GAAG,cAAc,CAAC;YAEnC,+BAA+B;YAC/B,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;QAE5C,CAAC,EACD,CAAC,QAAQ,EAAE,EAAE;YAET,qBAAqB;YACrB,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;YAEzB,iBAAiB;YACjB,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC;YAE9B,gBAAgB;YAChB,IAAI,CAAC,KAAK,GAAG;gBACT,IAAI,EAAK,OAAO;gBAChB,OAAO,EAAE,yBAAyB;aACrC,CAAC;YAEF,iBAAiB;YACjB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAC1B,CAAC,CACJ,CAAC;IACV,CAAC;;sFA/FQ,mBAAmB;iHAAnB,mBAAmB;;;;;;;QCbhC,yEAA4E;QAMxD,oEAA6C;QACjD,4DAAM;QAGN,yEAAqD;QAC5C,8FAAmC;QAAA,4DAAM;QAKtD,6HAQa;QAGb,8EAG2B;QAIR,iEAAK;QAAA,4DAAY;QAC5B,wEAGgC;QAChC,8HAEY;QACZ,8HAEY;QAChB,4DAAiB;QAGjB,sFAA+B;QAChB,iEAAK;QAAA,4DAAY;QAC5B,4EAKmB;QACnB,8EAIc;QADV,sSAAgC,UAAU,cAAwB,MAAM,cAAwB,UAAU,IAAC;QAE3G,4HAGiD;QACjD,4HAGqD;QACzD,4DAAS;QACT,6EAAW;QACP,6EACJ;QAAA,4DAAY;QAIhB,2EAAiE;QAIzD,2EACJ;QAAA,4DAAe;QACf,yEAEwC;QAAA,8EACxC;QAAA,4DAAI;QAIR,8EAKuB;QAAnB,4IAAS,YAAQ,IAAC;QAClB,oHAEO;QACP,oJAGoD;QACxD,4DAAS;;;QApFR,0DAAe;QAAf,+EAAe;QAWhB,0DAAwB;QAAxB,qFAAwB;QAShB,0DAA2B;QAA3B,oFAA2B;QACnB,0DAAkD;QAAlD,kHAAkD;QAGlD,0DAA+C;QAA/C,+GAA+C;QAYvD,0DAA8B;QAA9B,uFAA8B;QASzB,0DAAuC;QAAvC,yFAAuC;QAIvC,0DAAmC;QAAnC,qFAAmC;QAWxC,0DAAmB;QAAnB,4EAAmB;QAMnB,0DAAmC;QAAnC,8IAAmC;QAQvC,0DAAmB;QAAnB,4EAAmB;QAGZ,0DAA0B;QAA1B,0FAA0B;QAI5B,0DAAyB;QAAzB,yFAAyB;kvCDxF/B,4DAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEVc;AACY;AACI;AACG;AACX;AACE;AACqB;AACvB;AACE;AACD;AACyB;AACL;;;AAmBrE,MAAM,gBAAgB;;gFAAhB,gBAAgB;6GAAhB,gBAAgB;iHAbX;YACV,kEAAqB,CAAC,sFAAgB,CAAC;YACvC,qEAAe;YACf,yEAAiB;YACjB,4EAAkB;YAClB,kEAAa;YACb,oEAAc;YACd,yFAAwB;YACxB,iEAAc;YACd,mEAAe;YACf,kEAAY;SACf;mIAEQ,gBAAgB,mBAfrB,2FAAmB,wEAInB,qEAAe;QACf,yEAAiB;QACjB,4EAAkB;QAClB,kEAAa;QACb,oEAAc;QACd,yFAAwB;QACxB,iEAAc;QACd,mEAAe;QACf,kEAAY;;;;;;;;;;;;;;;;AC3B6D;AAE1E,MAAM,gBAAgB,GAAY;IACrC;QACI,IAAI,EAAO,EAAE;QACb,SAAS,EAAE,2FAAmB;KACjC;CACJ,CAAC","sources":["./src/app/modules/auth/sign-in/sign-in.component.ts","./src/app/modules/auth/sign-in/sign-in.component.html","./src/app/modules/auth/sign-in/sign-in.module.ts","./src/app/modules/auth/sign-in/sign-in.routing.ts"],"sourcesContent":["import { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { fuseAnimations } from '@fuse/animations';\nimport { FuseAlertType } from '@fuse/components/alert';\nimport { AuthService } from 'app/core/auth/auth.service';\n\n@Component({\n    selector     : 'auth-sign-in',\n    templateUrl  : './sign-in.component.html',\n    encapsulation: ViewEncapsulation.None,\n    animations   : fuseAnimations\n})\nexport class AuthSignInComponent implements OnInit\n{\n    @ViewChild('signInNgForm') signInNgForm: NgForm;\n\n    alert: { type: FuseAlertType; message: string } = {\n        type   : 'success',\n        message: ''\n    };\n    signInForm: FormGroup;\n    showAlert: boolean = false;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private _activatedRoute: ActivatedRoute,\n        private _authService: AuthService,\n        private _formBuilder: FormBuilder,\n        private _router: Router\n    )\n    {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Create the form\n        this.signInForm = this._formBuilder.group({\n            email     : ['admin@xyz.io', [Validators.required, Validators.email]],\n            password  : ['admin', Validators.required],\n            rememberMe: ['']\n        });\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Sign in\n     */\n    signIn(): void\n    {\n        // Return if the form is invalid\n        if ( this.signInForm.invalid )\n        {\n            return;\n        }\n\n        // Disable the form\n        this.signInForm.disable();\n\n        // Hide the alert\n        this.showAlert = false;\n\n        // Sign in\n        this._authService.signIn(this.signInForm.value)\n            .subscribe(\n                () => {\n\n                    // Set the redirect url.\n                    // The '/signed-in-redirect' is a dummy url to catch the request and redirect the user\n                    // to the correct page after a successful sign in. This way, that url can be set via\n                    // routing file and we don't have to touch here.\n                    //const redirectURL = this._activatedRoute.snapshot.queryParamMap.get('redirectURL') || '/signed-in-redirect';\n                    const redirectURL = '/simulations';\n\n                    // Navigate to the redirect url\n                    this._router.navigateByUrl(redirectURL);\n\n                },\n                (response) => {\n\n                    // Re-enable the form\n                    this.signInForm.enable();\n\n                    // Reset the form\n                    this.signInNgForm.resetForm();\n\n                    // Set the alert\n                    this.alert = {\n                        type   : 'error',\n                        message: 'Wrong email or password'\n                    };\n\n                    // Show the alert\n                    this.showAlert = true;\n                }\n            );\n    }\n}\n","<div class=\"flex flex-col flex-auto items-center sm:justify-center min-w-0\">\n    <div class=\"w-full sm:w-auto py-8 px-4 sm:p-12 sm:rounded-2xl sm:shadow sm:bg-card\">\n        <div class=\"w-full max-w-80 sm:w-80 mx-auto sm:mx-0\">\n            <div class=\"flex flex-col items-center w-full\">\n                <!-- Logo -->\n                <div class=\"flex w-60 \">\n                    <img src=\"assets/images/logo/logo_login.png\">\n                </div>\n\n                <!-- Title -->\n                <div class=\"flex items-baseline mt-0.5 font-medium \">\n                    <div>Painel Administrativo (BackOffice) </div>\n                </div>\n            </div>\n\n            <!-- Alert -->\n            <fuse-alert\n                class=\"mt-8 -mb-4\"\n                *ngIf=\"showAlert\"\n                [appearance]=\"'outline'\"\n                [showIcon]=\"false\"\n                [type]=\"alert.type\"\n                [@shake]=\"alert.type === 'error'\">\n                {{alert.message}}\n            </fuse-alert>\n\n            <!-- Sign in form -->\n            <form\n                class=\"mt-8\"\n                [formGroup]=\"signInForm\"\n                #signInNgForm=\"ngForm\">\n\n                <!-- Email field -->\n                <mat-form-field class=\"w-full\">\n                    <mat-label>Login</mat-label>\n                    <input\n                        id=\"email\"\n                        matInput\n                        [formControlName]=\"'email'\">\n                    <mat-error *ngIf=\"signInForm.get('email').hasError('required')\">\n                        Informe o e-mail\n                    </mat-error>\n                    <mat-error *ngIf=\"signInForm.get('email').hasError('email')\">\n                        Informe um e-mail v√°lido\n                    </mat-error>\n                </mat-form-field>\n\n                <!-- Password field -->\n                <mat-form-field class=\"w-full\">\n                    <mat-label>Senha</mat-label>\n                    <input\n                        id=\"password\"\n                        matInput\n                        type=\"password\"\n                        [formControlName]=\"'password'\"\n                        #passwordField>\n                    <button\n                        mat-icon-button\n                        type=\"button\"\n                        (click)=\"passwordField.type === 'password' ? passwordField.type = 'text' : passwordField.type = 'password'\"\n                        matSuffix>\n                        <mat-icon\n                            class=\"icon-size-5\"\n                            *ngIf=\"passwordField.type === 'password'\"\n                            [svgIcon]=\"'heroicons_solid:eye'\"></mat-icon>\n                        <mat-icon\n                            class=\"icon-size-5\"\n                            *ngIf=\"passwordField.type === 'text'\"\n                            [svgIcon]=\"'heroicons_solid:eye-off'\"></mat-icon>\n                    </button>\n                    <mat-error>\n                        Informe a senha\n                    </mat-error>\n                </mat-form-field>\n\n                <!-- Actions -->\n                <div class=\"inline-flex items-end justify-between w-full mt-1.5\">\n                    <mat-checkbox\n                        [color]=\"'primary'\"\n                        [formControlName]=\"'rememberMe'\">\n                        Lembrar senha\n                    </mat-checkbox>\n                    <a\n                        class=\"text-md font-medium text-primary-500 hover:underline\"\n                        [routerLink]=\"['/forgot-password']\">Esqueceu a senha?\n                    </a>\n                </div>\n\n                <!-- Submit button -->\n                <button\n                    class=\"fuse-mat-button-large w-full mt-6 text-white\"\n                    mat-flat-button\n                    [color]=\"'primary'\"\n                    [disabled]=\"signInForm.disabled\"\n                    (click)=\"signIn()\">\n                    <span *ngIf=\"!signInForm.disabled\">\n                        Acessar o sistema\n                    </span>\n                    <mat-progress-spinner\n                        *ngIf=\"signInForm.disabled\"\n                        [diameter]=\"24\"\n                        [mode]=\"'indeterminate'\"></mat-progress-spinner>\n                </button>\n\n            </form>\n        </div>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { FuseCardModule } from '@fuse/components/card';\nimport { FuseAlertModule } from '@fuse/components/alert';\nimport { SharedModule } from 'app/shared/shared.module';\nimport { AuthSignInComponent } from 'app/modules/auth/sign-in/sign-in.component';\nimport { authSignInRoutes } from 'app/modules/auth/sign-in/sign-in.routing';\n\n@NgModule({\n    declarations: [\n        AuthSignInComponent\n    ],\n    imports     : [\n        RouterModule.forChild(authSignInRoutes),\n        MatButtonModule,\n        MatCheckboxModule,\n        MatFormFieldModule,\n        MatIconModule,\n        MatInputModule,\n        MatProgressSpinnerModule,\n        FuseCardModule,\n        FuseAlertModule,\n        SharedModule\n    ]\n})\nexport class AuthSignInModule\n{\n}\n","import { Route } from '@angular/router';\nimport { AuthSignInComponent } from 'app/modules/auth/sign-in/sign-in.component';\n\nexport const authSignInRoutes: Route[] = [\n    {\n        path     : '',\n        component: AuthSignInComponent\n    }\n];\n"],"names":[],"sourceRoot":"webpack:///"}